#############################################################################
#  $RCSfile$  $Revision$  $Date$
# ==========================================================================
#
#                            PUBLIC DOMAIN NOTICE
#               National Center for Biotechnology Information
#
#  This software/database is a "United States Government Work" under the
#  terms of the United States Copyright Act.  It was written as part of
#  the author's official duties as a United States Government employee and
#  thus cannot be copyrighted.  This software/database is freely available
#  to the public for use. The National Library of Medicine and the U.S.
#  Government have not placed any restriction on its use or reproduction.
#
#  Although all reasonable efforts have been taken to ensure the accuracy
#  and reliability of the software and data, the NLM and the U.S.
#  Government do not and cannot warrant the performance or results that
#  may be obtained by using this software or data. The NLM and the U.S.
#  Government disclaim all warranties, express or implied, including
#  warranties of performance, merchantability or fitness for any particular
#  purpose.
#
#  Please cite the author in any work or product based on this material.
#
# ==========================================================================
#
# Author:  Denis Vakatov
#
# File Description:
#   Generate platform-dependent header("config.h") for NCBI C++ libs
#   USAGE:
#    1) Process this file with "autoconf" to produce a "configure" script.
#    2) Run the resultant "configure" script to produce
#      a) "ncbiconf.h"
#      a) "Makefile"s
#    NOTE:  "--exec_prefix" flag must be specified by the user!
#
#############################################################################


AC_INIT(include/corelib/ncbitype.h)


#############################################################################


#### Check if "${exec_prefix}" dir is defined
if test -z "${exec_prefix}"  ||  test "${exec_prefix}" = "NONE" ; then
   exec_prefix="${srcdir}/exec"
fi

#### Check if there is "${exec_prefix}" dir
test -d "${exec_prefix}"  ||  mkdir -p "${exec_prefix}"

#### Make "exec_prefix" absolute
case "${exec_prefix}" in
   /* ) ;;
   . )
      CDPATH=
      if test "${PWD}" != "" && test "`(cd ${PWD} ; sh -c pwd)`" = "`pwd`"  ;
      then
         exec_prefix="$PWD"
      else
         exec_prefix="`(cd ${exec_prefix}; pwd)`"
      fi
   ;;
   *  ) exec_prefix="`(cd ${exec_prefix}; pwd)`" ;;
esac

#### Make "srcdir" absolute
case "${srcdir}" in
   /* ) ;;
   . )
      CDPATH=
      if test "${PWD}" != "" && test "`(cd ${PWD} ; sh -c pwd)`" = "`pwd`"  ;
      then
        srcdir="$PWD"
      else
        srcdir="`(cd ${srcdir}; pwd)`"
      fi
   ;;
   *  ) srcdir="`(cd ${srcdir}; pwd)`" ;;
esac

#### Specify and create $includedir, $incdir, $libdir, $bindir and $builddir
includedir="$srcdir/include"
incdir="$exec_prefix/inc"
libdir="$exec_prefix/lib"
bindir="$exec_prefix/bin"
ncbiconf="$incdir/ncbiconf.h"
if test "$exec_prefix" = "$srcdir" ; then
   builddir="$srcdir/src"
else
   builddir="$exec_prefix/build"
fi

mkdir -p "$libdir" "$bindir" "$builddir"


#### Check if the target directory already has a configured system in it.
if test -f "${ncbiconf}" ; then
   AC_MSG_ERROR([There is already a built "${ncbiconf}"!])
fi

AC_CANONICAL_HOST
AC_DEFINE_UNQUOTED(HOST,        "$host")
AC_DEFINE_UNQUOTED(HOST_CPU,    "$host_cpu")
AC_DEFINE_UNQUOTED(HOST_VENDOR, "$host_vendor")
AC_DEFINE_UNQUOTED(HOST_OS,     "$host_os")

#### Use right command shell in scripts and makefiles
script_sh="#! ${CONFIG_SHELL:=/bin/sh}"
make_shell="SHELL=${CONFIG_SHELL:=/bin/sh}"

#### Tools
AC_LANG_CPLUSPLUS
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_CHECK_PROG(AR, ar, ar cru, ErrorCannotFind_AR) 


#### Paths to another packages

PM_PATH=${PM_PATH:=No_PmPath}

NCBI_C_INCLUDE=${NCBI_C_INCLUDE:=No_NcbiCInclude}
NCBI_C_LIB=${NCBI_C_LIB:=No_NcbiCLib}


#### Turn on compilation warnings and adjust
#### some compiler-specific flags and features

if test "$CONF_obj_ext"   = " " ;  then obj_ext="" ; else obj_ext="${CONF_obj_ext:=.o}" ; fi
if test "$CONF_lib_pre"   = " " ;  then lib_pre="" ; else lib_pre="${CONF_lib_pre:=lib}" ; fi
if test "$CONF_lib_l_pre" = " " ;  then lib_l_pre="" ; else lib_l_pre="${CONF_lib_l_pre:=-l}" ; fi
if test "$CONF_lib_ext"   = " " ;  then lib_ext="" ; else lib_ext="${CONF_lib_ext:=.a}" ; fi
if test "$CONF_lib_l_ext" = " " ;  then lib_l_ext="" ; else lib_l_ext="${CONF_lib_l_ext}" ; fi
if test "$CONF_exe_ext"   = " " ;  then exe_ext="" ; else exe_ext="${CONF_exe_ext}" ; fi
if test "$CONF_f_compile" = " " ;  then f_compile="" ; else f_compile="${CONF_f_compile:=-c }" ; fi
if test "$CONF_f_outobj"  = " " ;  then f_outobj="" ; else f_outobj="${CONF_f_outobj:=-o }" ; fi
if test "$CONF_f_outlib"  = " " ;  then f_outlib="" ; else f_outlib="${CONF_f_outlib}" ; fi
if test "$CONF_f_libpath" = " " ;  then f_libpath="" ; else f_libpath="${CONF_f_libpath:=-L}" ; fi
if test "$CONF_f_outexe"  = " " ;  then f_outexe="" ; else f_outexe="${CONF_f_outexe:=-o }" ; fi

changequote(, )dnl
if test "$GCC" = "yes" ; then
   # GNU compiler
   CFLAGS="-Wall -ansi $CFLAGS"
   CXXFLAGS=`echo $CXXFLAGS | sed 's/-O.//g'`
   CXXFLAGS="-Wall -ansi $CXXFLAGS"
   LDFLAGS="-g $LDFLAGS"
elif test "$CXX" = "cl.exe /TP" ; then
   # MSVC++ compiler
   script_shell=""
   make_shell=""
fi
changequote([, ])dnl



### ------------------------------------------------------------------
### ------------------------------------------------------------------

dnl Check for header files.
dnl ---------------------------------
AC_CHECK_HEADERS(iostream  iostream.h)
AC_CHECK_HEADERS(fstream   fstream.h)
AC_CHECK_HEADERS(strstream strstream.h strstrea.h)
AC_CHECK_HEADERS(string)
AC_CHECK_HEADERS(unistd.h windows.h)
AC_CHECK_HEADERS(limits)


dnl Check for typedefs, structures, and compiler features.
dnl ------------------------------------------------------
AC_CXX_CONST
AC_TYPE_SIZE_T

AC_MSG_CHECKING(if C++ namespaces are supported)
AC_TRY_COMPILE(
   [namespace NS { int i; }  using namespace NS;],
   ,
   AC_DEFINE_UNQUOTED(HAVE_NAMESPACE, 1)
)
AC_MSG_RESULT()

AC_MSG_CHECKING(if in-class template functions are supported)
AC_TRY_COMPILE(
   [class C { template<class T> operator<<(const T& t) {} };],
   ,
   ,
   AC_DEFINE_UNQUOTED(NO_INCLASS_TMPL, 1)
)
AC_MSG_RESULT()

AC_MSG_CHECKING(can we use exception specifications throw(...) in func.proto)
AC_TRY_RUN(
   [template <class T> inline int test_throw_spec(const T&) throw() {
      return 0;
   }
   int main(void) {
      return test_throw_spec(123);
   }],
   AC_DEFINE_UNQUOTED(NCBI_USE_THROW_SPEC, 1)
)
AC_MSG_RESULT()


AC_MSG_CHECKING(obsolete basic_string::compare())
AC_TRY_COMPILE(
   [#include <string>],
   [std::string s;  int i = 0;  i = s.compare("aaa", 0, 2); ],
   AC_DEFINE_UNQUOTED(NCBI_OBSOLETE_STR_COMPARE, 1)
)
AC_MSG_RESULT()

AC_MSG_CHECKING(if the auto_ptr template class is not implemented)
AC_TRY_COMPILE(
   [#include <memory>],
   [int *ip = 0;  std::auto_ptr<int> ap(ip);  *ip = *ap; ],
   ,
   AC_DEFINE_UNQUOTED(HAVE_NO_AUTO_PTR, 1)
)
AC_MSG_RESULT()


dnl Check for C standard types
dnl ---------------------------------
AC_C_BIGENDIAN
AC_C_CHAR_UNSIGNED
AC_CHECK_SIZEOF(void*)
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(long long)
AC_CHECK_SIZEOF(__int64)
AC_CHECK_SIZEOF(double)
AC_CHECK_SIZEOF(long double)


#############################################################################
### Compose a list of configurables("*.in" -- makefiles, shell scripts, etc.)
### in subdirs to configure
### Compose their target counterparts
### Configure

configurables=`cd "${srcdir}/src"  &&  find . -name '*.in' -print | grep -v 'config\.h\.in' | grep -v 'configure\.in' | sed "s%\.\(.*\)\.in%$builddir\1:\./src\1\.in%g"`
if test -z "$configurables" ; then
  AC_MSG_ERROR([Cannot find any configurables below \"${srcdir}\"!])
fi


dnl Template substitutions
dnl ----------------------

AC_SUBST(exec_prefix)

AC_SUBST(top_srcdir)
AC_SUBST(srcdir)
AC_SUBST(includedir)
AC_SUBST(incdir)
AC_SUBST(libdir)
AC_SUBST(bindir)
AC_SUBST(builddir)

AC_SUBST(CC)
AC_SUBST(CPP)
AC_SUBST(CXX)
AC_SUBST(AR)
AC_SUBST(RANLIB)

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(LIBS)

AC_SUBST(script_shell)
AC_SUBST(make_shell)
AC_SUBST(obj_ext)
AC_SUBST(lib_pre)
AC_SUBST(lib_l_pre)
AC_SUBST(lib_ext)
AC_SUBST(lib_l_ext)
AC_SUBST(exe_ext)
AC_SUBST(f_compile)
AC_SUBST(f_outobj)
AC_SUBST(f_outlib)
AC_SUBST(f_libpath)
AC_SUBST(f_outexe)

AC_SUBST(PM_PATH)
AC_SUBST(NCBI_C_INCLUDE)
AC_SUBST(NCBI_C_LIB)

AC_SUBST(KeepStateTarget)


#############################################################################
### Create output files and do some post-configuration

# compose a list of target files
changequote(<<, >>)dnl
x_configurables=`echo "$configurables" | sed 's/:[^:][^:]*\.in//g'`
changequote([, ])dnl

# deploy the target directory tree
echo "$x_configurables" | while read x_file ; do
   x_dir=`dirname $x_file`
   test -d "$x_dir"  ||  mkdir -p "$x_dir"
done

# configure the compiler/flag-dependent header
AC_CONFIG_HEADER(${ncbiconf}:config.h.in)

# configure makefiles, shell scripts, etc.
AC_OUTPUT(
${configurables},

builddir="$SAVE_builddir"
exec_prefix="$SAVE_exec_prefix"
x_configurables="$SAVE_x_configurables"
ncbiconf="$SAVE_ncbiconf"

echo "$x_configurables" | while read x_file ; do
   mv "$x_file" "$x_file.tmp"
   cat "$x_file.tmp" | sed "s%/$builddir%/src%g" > "$x_file"
   rm "$x_file.tmp"
done

find "$exec_prefix" -name '*.sh' -print | while read x_file ; do
   chmod a+x "$x_file"
done

status_dir="$exec_prefix/status"
test -d  "$status_dir"  ||  mkdir -p "$status_dir"
mv config.status config.cache config.log "$status_dir"/

echo "Configuration completed."
echo ""
echo "Tools / flags / paths:  $builddir/Makefile.mk"
echo "Preprocessor defines:   $ncbiconf"
echo ""
echo "To build everything:  cd $builddir ; make all_r",

SAVE_builddir="$builddir"
SAVE_exec_prefix="$exec_prefix"
SAVE_x_configurables="$x_configurables"
SAVE_ncbiconf="$ncbiconf"
)
