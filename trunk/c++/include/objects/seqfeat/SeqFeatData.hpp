/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'seqfeat.asn'.
 *
 * ---------------------------------------------------------------------------
 * $Log$
 * Revision 1.1  2001/10/30 20:25:56  ucko
 * Implement feature labels/keys, subtypes, and sorting
 *
 *
 * ===========================================================================
 */

#ifndef OBJECTS_SEQFEAT_SEQFEATDATA_HPP
#define OBJECTS_SEQFEAT_SEQFEATDATA_HPP


// generated includes
#include <objects/seqfeat/SeqFeatData_.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

class CSeqFeatData : public CSeqFeatData_Base
{
    typedef CSeqFeatData_Base Tparent;
public:
    // constructor
    CSeqFeatData(void);
    // destructor
    ~CSeqFeatData(void);

    // ASCII representation of subtype (GenBank feature key, e.g.)
    enum EVocabulary {
        eVocabulary_full,
        eVocabulary_genbank
    };
    string GetKey(EVocabulary vocab = eVocabulary_full) const;

    enum ESubtype {
        // These should match the FEATDEF values in the C toolkit's objfdef.h
        eSubtype_bad = 0,
        eSubtype_gene = 1,
        eSubtype_org = 2,
        eSubtype_cdregion = 3,
        eSubtype_prot = 4,
        eSubtype_preRNA = 5,
        eSubtype_mRNA = 6,
        eSubtype_tRNA = 7,
        eSubtype_rRNA = 8,
        eSubtype_snRNA = 9,
        eSubtype_scRNA = 10,
        eSubtype_otherRNA = 11,
        eSubtype_pub = 12,
        eSubtype_seq = 13,
        eSubtype_imp = 14,
        eSubtype_allele = 15,
        eSubtype_attenuator = 16,
        eSubtype_C_region = 17,
        eSubtype_CAAT_signal = 18,
        eSubtype_Imp_CDS = 19,
        eSubtype_conflict = 20,
        eSubtype_D_loop = 21,
        eSubtype_D_segment = 22,
        eSubtype_enhancer = 23,
        eSubtype_exon = 24,
        eSubtype_GC_signal = 25,
        eSubtype_iDNA = 26,
        eSubtype_intron = 27,
        eSubtype_J_segment = 28,
        eSubtype_LTR = 29,
        eSubtype_mat_peptide = 30,
        eSubtype_misc_binding = 31,
        eSubtype_misc_difference = 32,
        eSubtype_misc_feature = 33,
        eSubtype_misc_recomb = 34,
        eSubtype_misc_RNA = 35,
        eSubtype_misc_signal = 36,
        eSubtype_misc_structure = 37,
        eSubtype_modified_base = 38,
        eSubtype_mutation = 39,
        eSubtype_N_region = 40,
        eSubtype_old_sequence = 41,
        eSubtype_polyA_signal = 42,
        eSubtype_polyA_site = 43,
        eSubtype_precursor_RNA = 44,
        eSubtype_prim_transcript = 45,
        eSubtype_primer_bind = 46,
        eSubtype_promoter = 47,
        eSubtype_protein_bind = 48,
        eSubtype_RBS = 49,
        eSubtype_repeat_region = 50,
        eSubtype_repeat_unit = 51,
        eSubtype_rep_origin = 52,
        eSubtype_S_region = 53,
        eSubtype_satellite = 54,
        eSubtype_sig_peptide = 55,
        eSubtype_source = 56,
        eSubtype_stem_loop = 57,
        eSubtype_STS = 58,
        eSubtype_TATA_signal = 59,
        eSubtype_terminator = 60,
        eSubtype_transit_peptide = 61,
        eSubtype_unsure = 62,
        eSubtype_V_region = 63,
        eSubtype_V_segment = 64,
        eSubtype_variation = 65,
        eSubtype_virion = 66,
        eSubtype_3clip = 67,
        eSubtype_3UTR = 68,
        eSubtype_5clip = 69,
        eSubtype_5UTR = 70,
        eSubtype_10_signal = 71,
        eSubtype_35_signal = 72,
        eSubtype_site_ref = 73,
        eSubtype_region = 74,
        eSubtype_comment = 75,
        eSubtype_bond = 76,
        eSubtype_site = 77,
        eSubtype_rsite = 78,
        eSubtype_user = 79,
        eSubtype_txinit = 80,
        eSubtype_num = 81,
        eSubtype_psec_str = 82,
        eSubtype_non_std_residue = 83,
        eSubtype_het = 84,
        eSubtype_biosrc = 85,
        eSubtype_preprotein = 86,
        eSubtype_mat_peptide_aa = 87,
        eSubtype_sig_peptide_aa = 88,
        eSubtype_transit_peptide_aa = 89,
        eSubtype_snoRNA = 90,
        eSubtype_max = 91,
        eSubtype_any = 255
    };
    ESubtype GetSubtype(void) const;
    
    // Call after changes that could affect the subtype
    void InvalidateSubtype(void);

private:
    mutable ESubtype m_Subtype; // cached

    // Prohibit copy constructor and assignment operator
    CSeqFeatData(const CSeqFeatData& value);
    CSeqFeatData& operator=(const CSeqFeatData& value);

};



/////////////////// CSeqFeatData inline methods

// constructor
inline
CSeqFeatData::CSeqFeatData(void) : m_Subtype(eSubtype_any)
{
}


inline
void CSeqFeatData::InvalidateSubtype(void)
{
    m_Subtype = eSubtype_any;
}


/////////////////// end of CSeqFeatData inline methods


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


#endif // OBJECTS_SEQFEAT_SEQFEATDATA_HPP
/* Original file checksum: lines: 90, chars: 2439, CRC32: 742431cc */
