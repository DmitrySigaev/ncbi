/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'seqfeat.asn'.
 */

#ifndef OBJECTS_SEQFEAT_SEQFEATDATA_HPP
#define OBJECTS_SEQFEAT_SEQFEATDATA_HPP


// generated includes
#include <objects/seqfeat/SeqFeatData_.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

class NCBI_SEQFEAT_EXPORT CSeqFeatData : public CSeqFeatData_Base
{
    typedef CSeqFeatData_Base Tparent;
public:
    // constructor
    CSeqFeatData(void);
    // destructor
    ~CSeqFeatData(void);

    // ASCII representation of subtype (GenBank feature key, e.g.)
    enum EVocabulary {
        eVocabulary_full,
        eVocabulary_genbank
    };
    string GetKey(EVocabulary vocab = eVocabulary_full) const;

    enum ESubtype {
        // These no longer need to match the FEATDEF values in the
        // C toolkit's objfdef.h
        eSubtype_bad = 0,
        eSubtype_gene,
        eSubtype_org,
        eSubtype_cdregion,
        eSubtype_prot,
        eSubtype_preprotein,
        eSubtype_mat_peptide_aa,
        eSubtype_sig_peptide_aa,
        eSubtype_transit_peptide_aa,
        eSubtype_preRNA,
        eSubtype_mRNA,
        eSubtype_tRNA,
        eSubtype_rRNA,
        eSubtype_snRNA,
        eSubtype_scRNA,
        eSubtype_snoRNA,
        eSubtype_otherRNA,
        eSubtype_pub,
        eSubtype_seq,
        eSubtype_imp,
        eSubtype_allele,
        eSubtype_attenuator,
        eSubtype_C_region,
        eSubtype_CAAT_signal,
        eSubtype_Imp_CDS,
        eSubtype_conflict,
        eSubtype_D_loop,
        eSubtype_D_segment,
        eSubtype_enhancer,
        eSubtype_exon,
        eSubtype_GC_signal,
        eSubtype_iDNA,
        eSubtype_intron,
        eSubtype_J_segment,
        eSubtype_LTR,
        eSubtype_mat_peptide,
        eSubtype_misc_binding,
        eSubtype_misc_difference,
        eSubtype_misc_feature,
        eSubtype_misc_recomb,
        eSubtype_misc_RNA,
        eSubtype_misc_signal,
        eSubtype_misc_structure,
        eSubtype_modified_base,
        eSubtype_mutation,
        eSubtype_N_region,
        eSubtype_old_sequence,
        eSubtype_polyA_signal,
        eSubtype_polyA_site,
        eSubtype_precursor_RNA,
        eSubtype_prim_transcript,
        eSubtype_primer_bind,
        eSubtype_promoter,
        eSubtype_protein_bind,
        eSubtype_RBS,
        eSubtype_repeat_region,
        eSubtype_repeat_unit,
        eSubtype_rep_origin,
        eSubtype_S_region,
        eSubtype_satellite,
        eSubtype_sig_peptide,
        eSubtype_source,
        eSubtype_stem_loop,
        eSubtype_STS,
        eSubtype_TATA_signal,
        eSubtype_terminator,
        eSubtype_transit_peptide,
        eSubtype_unsure,
        eSubtype_V_region,
        eSubtype_V_segment,
        eSubtype_variation,
        eSubtype_virion,
        eSubtype_3clip,
        eSubtype_3UTR,
        eSubtype_5clip,
        eSubtype_5UTR,
        eSubtype_10_signal,
        eSubtype_35_signal,
        eSubtype_site_ref,
        eSubtype_region,
        eSubtype_comment,
        eSubtype_bond,
        eSubtype_site,
        eSubtype_rsite,
        eSubtype_user,
        eSubtype_txinit,
        eSubtype_num,
        eSubtype_psec_str,
        eSubtype_non_std_residue,
        eSubtype_het,
        eSubtype_biosrc,
        eSubtype_max,
        eSubtype_any = 255
    };
    ESubtype GetSubtype(void) const;
    
    // Call after changes that could affect the subtype
    void InvalidateSubtype(void);

    static E_Choice GetTypeFromSubtype (ESubtype subtype);

private:
    mutable ESubtype m_Subtype; // cached

    // Prohibit copy constructor and assignment operator
    CSeqFeatData(const CSeqFeatData& value);
    CSeqFeatData& operator=(const CSeqFeatData& value);

};



/////////////////// CSeqFeatData inline methods

// constructor
inline
CSeqFeatData::CSeqFeatData(void) : m_Subtype(eSubtype_any)
{
}


inline
void CSeqFeatData::InvalidateSubtype(void)
{
    m_Subtype = eSubtype_any;
}


/////////////////// end of CSeqFeatData inline methods


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


#endif // OBJECTS_SEQFEAT_SEQFEATDATA_HPP

/*
* ===========================================================================
*
* $Log$
* Revision 1.3  2003/04/18 21:20:44  kans
* regrouped ESubtype, removing most explicit numbers, added GetTypeFromSubtype, moved log to end of file
*
* Revision 1.2  2002/12/26 12:43:27  dicuccio
* Added Win32 export specifiers
*
* Revision 1.1  2001/10/30 20:25:56  ucko
* Implement feature labels/keys, subtypes, and sorting
*
*
* ===========================================================================
/* Original file checksum: lines: 90, chars: 2439, CRC32: 742431cc */
