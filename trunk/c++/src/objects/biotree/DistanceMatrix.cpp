/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  Josh Cherry
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using the following specifications:
 *   'biotree.asn'.
 */

// standard includes
#include <ncbi_pch.hpp>

// generated includes
#include <objects/biotree/DistanceMatrix.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

// destructor
CDistanceMatrix::~CDistanceMatrix(void)
{
}


void CDistanceMatrix::AsMatrix(CNcbiMatrix<double>& mat)
{
    size_t sz = GetLabels().size();
    if (GetDistances().size() != sz * (sz - 1) / 2) {
        throw runtime_error("mismatch between number of labels "
                            "and number of distances");
    }
    mat.Resize(sz, sz);
    mat.Set(0);
    size_t idx = 0;
    for (size_t j = 0; j < sz; ++j) {
        for (size_t i = j + 1; i < sz; ++i) {
            mat(i, j) = mat(j, i) = GetDistances()[idx];
            ++idx;
        }
    }
}


void CDistanceMatrix::FromMatrix(const CNcbiMatrix<double>& mat)
{
    // Check that the matrix passed in is appropriate
    if (mat.GetRows() != mat.GetCols()) {
        throw runtime_error("matrix is not square");
    }
    size_t sz = mat.GetCols();
    for (size_t i = 0; i < sz; ++i) {
        if (mat(i, i) != 0) {
            throw runtime_error("element on main diagonal is nonzero");
        }
        for (size_t j = 0; j < sz; ++j) {
            if (mat(i, j) != mat(j, i)) {
                throw runtime_error("matrix is not symmetric");
            }
        }
    }

    // Set distances accordingly
    ResetDistances();
    for (size_t j = 0; j < sz; ++j) {
        for (size_t i = j + 1; i < sz; ++i) {
            // should check that mat(i, j) == mat(j, i);
            SetDistances().push_back(mat(i, j));
        }
    }
}


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


/*
* ===========================================================================
*
* $Log$
* Revision 1.1  2006/05/15 15:38:37  jcherry
* Initial version: provide interconversion with CNcbiMatrix<double>
*
*
* ===========================================================================
*/
/* Original file checksum: lines: 65, chars: 1906, CRC32: af87b363 */
