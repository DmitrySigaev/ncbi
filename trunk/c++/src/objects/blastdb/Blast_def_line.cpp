/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using the following specifications:
 *   'blastdb.asn'.
 */

// standard includes
#include <ncbi_pch.hpp>

// generated includes
#include <objects/blastdb/Blast_def_line.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

// destructor
CBlast_def_line::~CBlast_def_line(void)
{
}

void 
CBlast_def_line::SetTaxIds(const CBlast_def_line::TTaxIds& t)
{
    ResetLinks();
    ITERATE(TTaxIds, itr, t) {
        if (t.size() == 1) {
            SetTaxid(*itr);
            break;
        } else {
            SetLinks().push_back(*itr);
        }
    }
    if (IsSetLinks()) {
        ResetTaxid();
    }
}

CBlast_def_line::TTaxIds 
CBlast_def_line::GetTaxIds() const
{
    TTaxIds retval;
    if (CanGetTaxid()) {
        _ASSERT(IsSetLinks() == false);
        retval.insert(GetTaxid());
    } else if (IsSetLinks()) {
        _ASSERT(IsSetTaxid() == false);
        TLinks taxids = GetLinks();  // see ASN.1 spec comment
        ITERATE(TLinks, itr, taxids) {
            retval.insert(*itr);
        }
    }
    return retval;
}

END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

/* Original file checksum: lines: 57, chars: 1739, CRC32: eaa77e11 */
