--$Revision: 1.5 $
--********************************************************************
--
--  Network Id server network access
--  Vasilchenko 2003
--
--
--*********************************************************************
--
--  ID2.asn
--
--     messages for id server network access
--
--*********************************************************************

NCBI-ID2Access DEFINITIONS ::=
BEGIN

IMPORTS Seq-id      FROM NCBI-Seqloc
        Seq-annot   FROM NCBI-Sequence
        Seq-descr   FROM NCBI-Sequence
        Seq-literal FROM NCBI-Sequence
        Seq-align   FROM NCBI-Seqalign;


----------------------------------------------------------------------------
-- request types
----------------------------------------------------------------------------

ID2-Request-Packet ::= SEQUENCE OF ID2-Request


ID2-Request ::= SEQUENCE {
        -- request's serial number, can be used in asynchronic clients
        -- server should copy it to corresponding field in reply
        serial-number  INTEGER OPTIONAL,

        params          ID2-Params OPTIONAL,

        request CHOICE {
                init            NULL,
                get-packages    ID2-Request-Get-Packages,
                string-to-gi    ID2-Request-String-To-Gi,
                seq-id-to-gi    ID2-Request-Seq-id-To-Gi,
                gi-to-tse-id    ID2-Request-Gi-To-TSE-Id,
                get-tse         ID2-Request-Get-TSE,
                reget-tse       ID2-Request-ReGet-TSE,
                get-chunks      ID2S-Request-Get-Chunks
        }
}


ID2-Request-Get-Packages ::= SEQUENCE {
        -- return known packages from this list
        -- if unset - return all known packages
        names           SEQUENCE OF VisibleString OPTIONAL,

        -- return packages' names only
        no-contents     NULL OPTIONAL
}


ID2-Request-String-To-Gi ::= SEQUENCE {
        -- requested sequence ID, can be any string
        id              VisibleString
}


ID2-Request-Seq-id-To-Gi ::= SEQUENCE {
        -- requested sequence ID, can be any ID
        seq-id          Seq-id
}


ID2-Request-Gi-To-TSE-Id ::= SEQUENCE {
        -- id can be supplied by inner request
        gi              CHOICE {
                gi              INTEGER,
                string          ID2-Request-String-To-Gi,
                seq-id          ID2-Request-Seq-id-To-Gi
        },

        -- return id of tse with sequence
        sources         SET OF VisibleString OPTIONAL,

        -- return TSE-Ids with external references to this gi
        external        NULL OPTIONAL,

        -- return in addition list of gis also resolving to this tse
        current-gis     NULL OPTIONAL
}


ID2-Request-Get-TSE ::= SEQUENCE {
        -- id can be supplied by inner request
        tse-id          CHOICE {
                tse-id          ID2-TSE-Id,
                gi      SEQUENCE {
                        request         ID2-Request-Gi-To-TSE-Id,

                        -- if this field is set, then server will not send
                        -- tses listed here
                        exclude-tses    SET OF ID2-TSE-Id OPTIONAL
                }
        },

        -- level of details requested immediately
        -- server will send relevant chunks if TSE is splitted
        details         ID2-Get-TSE-Details OPTIONAL
}


ID2-Request-ReGet-TSE ::= SEQUENCE {
        tse-id          ID2-TSE-Id,

        -- level of details requested
        details         ID2-Get-TSE-Details OPTIONAL,

        -- start offset of data to get
        offset          INTEGER
}


ID2S-Request-Get-Chunks ::= SEQUENCE {
        tse-id          ID2-TSE-Id,

        -- requests for specific chunks of splitted blob
        chunks          SET OF ID2S-Chunk-Id
}


ID2-Get-TSE-Details ::= SEQUENCE {
        location        ID2-Seq-loc,

        seq-class-level INTEGER DEFAULT 1,

        descr-level     INTEGER DEFAULT 1,

        descr-type-mask INTEGER DEFAULT 0,
        
        annot-type-mask INTEGER DEFAULT 0,

        feat-type-mask  INTEGER DEFAULT 0,

        sequence-level  ENUMERATED {
                none     (0) ,
                seq-map  (1) ,
                seq-data (2)
        } DEFAULT none
}


----------------------------------------------------------------------------
-- reply types
----------------------------------------------------------------------------


ID2-Reply ::= SEQUENCE {
        -- request's serial number, copy from request
        serial-number   INTEGER OPTIONAL,

        params          ID2-Params OPTIONAL,

        reply CHOICE {
                init            NULL,
                get-package     ID2-Reply-Get-Package,
                -- string-to-gi    ID2-Reply-String-To-Gi,
                seq-id-to-gi    ID2-Reply-Seq-id-To-Gi,
                gi-to-tse-id    ID2-Reply-Gi-To-TSE-Id,
                get-tse         ID2-Reply-Get-TSE,
                get-tse-info    ID2S-Reply-Get-TSE-Info,
                get-chunk       ID2S-Reply-Get-Chunk
        },

        error           SEQUENCE OF ID2-Error OPTIONAL,

        -- true if this reply is the last one for the request
        -- false if more replies will follow
        end-of-reply    BOOLEAN
}


ID2-Error ::= SEQUENCE {
        severity        ENUMERATED {
                -- nothing harmful happened
                warning             (1) ,

                -- command cannot be completed this time
                failed-command      (2) ,

                -- connection cannot be reused, reconnect is required
                failed-connection   (3) ,

                -- server cannot be used for a while
                failed-server       (4) ,

                -- resolve request gives no data
                -- probably temporarily (see retry-delay field)
                no-data             (5) ,

                -- data exists but client doesn't have permission to get it
                restricted-data     (6) ,

                -- this request type is not supported by server
                unsupported-command (7) ,

                -- error in request packet, cannot retry
                invalid-arguments   (8)
        },

        -- client may retry the request after specified time in seconds 
        retry-delay INTEGER OPTIONAL,

        message VisibleString OPTIONAL
}


ID2-Reply-Get-Package ::= SEQUENCE {
        name            VisibleString,

        params          ID2-Params OPTIONAL
}


ID2-Reply-Seq-id-To-Gi ::= SEQUENCE {
        -- request sequence ID, copy from request
        seq-id          Seq-id,

        -- gi of requested Seq-id
        -- not set if error occured
        gi              INTEGER OPTIONAL
}


ID2-Reply-Gi-To-TSE-Id ::= SEQUENCE {
        gi              INTEGER,

        -- source name of this tse set
        -- "" for native tse - tse with sequence
        source          VisibleString DEFAULT "",

        -- tse set with requested gi
        -- not set if error occured
        tses            SET OF ID2-TSE-Id-Info OPTIONAL
}


ID2-TSE-Id-Info ::= SEQUENCE {
        tse-id          ID2-TSE-Id,

        -- version of split data
        -- (0 for non split)
        split-version   INTEGER DEFAULT 0
}


ID2-Reply-Get-TSE ::= SEQUENCE {
        tse-id          ID2-TSE-Id,

        -- whole tse or tse skeleton
        -- not set if error occured
        data            ID2-Reply-Data OPTIONAL
}


ID2S-Reply-Get-TSE-Info ::= SEQUENCE {
        tse-id          ID2-TSE-Id,

        -- version of split data
        split-version   INTEGER,

        -- tse split info
        -- not set if error occured
        info            ID2-Reply-Data OPTIONAL
}


ID2S-Reply-Get-Chunk ::= SEQUENCE {
        tse-id          ID2-TSE-Id,

        chunk-id        ID2S-Chunk-Id,

        -- chunk data
        -- not set if error occured
        data            ID2-Reply-Data OPTIONAL
}


ID2-Reply-Data ::= SEQUENCE {
        data-type       INTEGER, -- index of negotiated types
        -- recommended types
        --   Seq-entry,
        --   ID2S-Split-Info,
        --   ID2S-Chunk

        -- serialization format (ASN.1 binary, ASN.1 text)
        data-format             INTEGER, -- index of negotiated formats

        -- post serialization compression (plain, gzip, etc.)
        data-compression        INTEGER, -- index of negotiated formats

        -- data blob
        data                    SEQUENCE OF OCTET STRING
}


----------------------------------------------------------------------------
-- Blob split info types
----------------------------------------------------------------------------


ID2S-Split-Info ::= SEQUENCE {
        bioseqs-info    SET OF ID2S-Bioseqs-Info OPTIONAL,
        chunks          SET OF ID2S-Chunk-Info
}


ID2S-Bioseqs-Info ::= SEQUENCE {
        info            ID2S-Bioseq-Info,
        bioseqs         ID2-Id-Range
}


ID2S-Bioseq-Info ::= SEQUENCE {
        gap-count       INTEGER OPTIONAL,
        seq-map-has-ref BOOLEAN OPTIONAL,
        sequence-split  ID2S-Sequence-Split-Info OPTIONAL
}


ID2S-Sequence-Split-Info ::= SEQUENCE {
        block-size      INTEGER,
        chunk-start     ID2S-Chunk-Id,
        chunk-blocks    SEQUENCE OF INTEGER
}


ID2S-Chunk-Info ::= SEQUENCE {
        id              ID2S-Chunk-Id,
        content         SET OF ID2S-Chunk-Content
}


ID2S-Chunk-Content ::= CHOICE {
        seq-descr       ID2S-Seq-descr-Info,
        seq-annot       ID2S-Seq-annot-Info,
        seq-assembly    ID2S-Seq-assembly-Info,
        seq-map         ID2S-Seq-map-Info,
        seq-data        ID2S-Seq-data-Info,
        seq-annot-place ID2S-Seq-annot-place-Info
}


ID2S-Seq-descr-Info ::= SEQUENCE {
        type-mask       INTEGER, -- mask of Seq-descr types,
        bioseqs         SET OF ID2-Id-Range OPTIONAL,
        bioseq-sets     SET OF ID2-Id-Range OPTIONAL
}


ID2S-Seq-annot-Info ::= SEQUENCE {
        -- name is set if this is named annot
        -- name may be empty which differ from unnamed annot
        name            VisibleString OPTIONAL,
        align           NULL OPTIONAL,
        graph           NULL OPTIONAL,
        feat            SET OF ID2S-Feat-type-Info OPTIONAL,
        seq-loc         ID2-Seq-loc
}


ID2S-Seq-annot-place-Info ::= SEQUENCE {
        name            VisibleString OPTIONAL,
        bioseqs         SET OF ID2-Id-Range OPTIONAL,
        bioseq-sets     SET OF ID2-Id-Range OPTIONAL
}


ID2S-Feat-type-Info ::=  SEQUENCE {
        type            INTEGER,
        subtypes        SET OF INTEGER OPTIONAL
}


ID2S-Seq-assembly-Info ::= SEQUENCE {
        bioseqs         SET OF ID2-Id-Range
}


ID2S-Seq-map-Info ::= ID2-Seq-loc


ID2S-Seq-data-Info ::= ID2-Seq-loc


ID2S-Chunk ::= SEQUENCE {
        data            SET OF ID2S-Chunk-Data
}


ID2S-Chunk-Data ::= SEQUENCE {
        id              CHOICE {
                bioseq-set      INTEGER,
                gi              INTEGER
        },
        descrs          SET OF Seq-descr OPTIONAL,
        annots          SET OF Seq-annot OPTIONAL,
        assembly        SET OF Seq-align OPTIONAL,
        seq-map         SEQUENCE OF Seq-literal OPTIONAL,
        seq-data        SEQUENCE OF Seq-literal OPTIONAL
}


----------------------------------------------------------------------------
-- utility types
----------------------------------------------------------------------------


ID2S-Chunk-Id ::= INTEGER


ID2-TSE-Id ::= SEQUENCE {
        sat             INTEGER,
        sat-key         INTEGER
}


ID2-Id-Range ::= SEQUENCE {
        start           INTEGER,  -- gi for Bioseq, local id for Bioseq-set
        count           INTEGER DEFAULT 1
}


ID2-Seq-loc ::= CHOICE {
        whole           INTEGER,
        int             ID2-Interval,
        int-set         ID2-Packed-Seq-ints,
        whole-range     ID2-Id-Range,
        loc-set         SET OF ID2-Seq-loc
}


ID2-Interval ::= SEQUENCE {
        gi              INTEGER,
        start           INTEGER,
        length          INTEGER DEFAULT 1
}


ID2-Seq-range ::= SEQUENCE {
        start           INTEGER,
        length          INTEGER DEFAULT 1
}


ID2-Packed-Seq-ints ::= SEQUENCE {
        gi              INTEGER,
        ints            SET OF ID2-Seq-range
}


ID2-Params ::= SEQUENCE OF ID2-Param


ID2-Param ::= SEQUENCE {
        name    VisibleString,
        value   SEQUENCE OF VisibleString OPTIONAL,
        type    ENUMERATED {
                -- no response expected
                set-value   (1) ,

                -- this option is for client only
                -- server replies with its value of param if known
                -- server omits this param in reply if unknown to server
                get-value   (2) ,

                -- no direct response expected,
                -- but if the param or its value is not supported
                -- an error is reported and the request is not be completed
                force-value (3) ,

                -- use named package
                -- value should be unset
                use-package (4)
        } DEFAULT set-value
}

--VVI ::= SEQUENCE OF SEQUENCE OF INTEGER

END
