/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'biblio.asn'.
 *
 * ---------------------------------------------------------------------------
 * $Log$
 * Revision 6.1  2000/11/30 21:45:07  ostell
 * added Match()
 *
 *
 * ===========================================================================
 */

// standard includes

// generated includes
#include <objects/biblio/Id_pat.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

// destructor
CId_pat::~CId_pat(void)
{
}

bool CId_Match (const CId_pat::C_Id& id1, const CId_pat::C_Id& id2)
{
	CId_pat::C_Id::E_Choice type1 = id1.Which();
	CId_pat::C_Id::E_Choice type2 = id2.Which();

	if (type1 != type2)
		return false;

	if (type1 == CId_pat::C_Id::e_Number)
	{
            if (AStrEquiv(id1.GetNumber(), id2.GetNumber(), PNocase()))
		return true;
	    else
		return false;
	}

	if (type1 == CId_pat::C_Id::e_App_number)
	{
            if (AStrEquiv(id1.GetApp_number(), id2.GetApp_number(), PNocase()))
                return true;
            else
                return false;
        }

	return false;
}
	
// comparison function
bool CId_pat::Match(const CId_pat& idp2) const
{
       if (! AStrEquiv(GetCountry(), idp2.GetCountry(), PNocase()))
		return false;
       return CId_Match(GetId(), idp2.GetId());
}
	
END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

/* Original file checksum: lines: 61, chars: 1877, CRC32: 1b7c366f */
