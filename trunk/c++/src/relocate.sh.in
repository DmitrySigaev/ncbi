@script_shell@

# $Id$
# Author:  Denis Vakatov, NCBI 
# 
#  Adjust paths to this build tree and the relevant source tree
#  (only at the very top level, just to allow "external" users
#   to use the major makefile templates)


script_name=`basename $0`
script_dir=`dirname $0`
script_dir=`(cd "${script_dir}" ; pwd)`

src_tree=`pwd`
bld_tree=`(cd "${script_dir}/.." ; pwd)`

if test -x "$src_tree/configure"  &&  test -f "$bld_tree/inc/ncbiconf.h" ; then
   cat <<EOF
Adjusting makefiles for:
  - source tree:  $src_tree
  - build  tree:  $bld_tree

In directory:  $script_dir/
EOF
else
   cat <<EOF
[$script_name]  USAGE:  This script MUST be
 1) located in the build directory
 2) run from the top C++ source directory
EOF
   exit 1
fi


#### Substitute for the new $(builddir)

files="\
Makefile.mk Makefile.meta Makefile.lib.tmpl Makefile.app.tmpl"

for f in $files ; do
   fff="$script_dir/$f"
   sed 's%^\(builddir *= *\).*%\1'$script_dir'%; s%^\(exec_prefix *= *\).*%\1'$bld_tree'%; s%^\(top_srcdir *= *\).*%\1'$src_tree'%' "$fff" |
   sed 's%/netopt/ncbi_tools_cc\.[^/ ]*%/netopt/ncbi_tools_cc%g; s%/netopt/ncbi_tools\.[^/ ]*%/netopt/ncbi_tools%g' > "$fff.tmp"
   if test $? -ne 0 ; then
      echo "[$script_name]  Error in processing file \"$f\"!" 
      exit 2
   fi
done

for f in $files ; do
   fff="$script_dir/$f"
   echo "  $f"
   rm -f "$fff"  &&  mv "$fff.tmp" "$fff"
   if test $? -ne 0 ; then
      echo "[$script_name]  Error in processing file \"$f\"!" 
      exit 3
   fi
done
echo "Done."
