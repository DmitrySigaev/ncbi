/*  $Id$
* ===========================================================================
*
*                            PUBLIC DOMAIN NOTICE
*               National Center for Biotechnology Information
*
*  This software/database is a "United States Government Work" under the
*  terms of the United States Copyright Act.  It was written as part of
*  the author's official duties as a United States Government employee and
*  thus cannot be copyrighted.  This software/database is freely available
*  to the public for use. The National Library of Medicine and the U.S.
*  Government have not placed any restriction on its use or reproduction.
*
*  Although all reasonable efforts have been taken to ensure the accuracy
*  and reliability of the software and data, the NLM and the U.S.
*  Government do not and cannot warrant the performance or results that
*  may be obtained by using this software or data. The NLM and the U.S.
*  Government disclaim all warranties, express or implied, including
*  warranties of performance, merchantability or fitness for any particular
*  purpose.
*
*  Please cite the author in any work or product based on this material.
*
* ===========================================================================
*
* Author:  Colleen Bollin, NCBI
*
* File Description:
*   Unit tests for the validator -- specifically, of wrong qualifiers
*   on imported features.
*
* ===========================================================================
*/

#include <ncbi_pch.hpp>

#include "unit_test_validator.hpp"

#include <corelib/test_boost.hpp>

#include <objects/general/Object_id.hpp>
#include <objects/seq/Seq_data.hpp>
#include <objects/seqfeat/Gb_qual.hpp>
#include <objects/seqfeat/Imp_feat.hpp>
#include <objmgr/scope.hpp>
#include <objtools/data_loaders/genbank/gbloader.hpp>
#include <objtools/validator/validator.hpp>

#if !defined(NCBI_COMPILER_WORKSHOP)  ||  !defined(__sparc)

USING_NCBI_SCOPE;
USING_SCOPE(objects);

using namespace validator;

static bool s_IsIllegal (string key) 
{
    if (NStr::Equal(key, "allele") || NStr::Equal(key, "virion") 
        || NStr::Equal(key, "mutation")
        || NStr::Equal(key, "Import")) {
        return true;
    } else {
        return false;
    }
}


static void s_TestOneWrongQual(const string qual, const string val, const string feat, 
                          CSeq_entry_Handle seh, CRef<CSeq_feat> misc_feat,
                          CValidator& validator, unsigned int options) 
{
    misc_feat->AddQualifier (qual, val);;
    string msg = "Wrong qualifier ";
    msg.append(qual);
    msg.append(" for feature ");
    msg.append(feat);
    vector< CExpectedError *> expected_errors;
    bool is_illegal = s_IsIllegal (feat);
    if (is_illegal) {
        expected_errors.push_back(new CExpectedError("good", eDiag_Error, "UnknownImpFeatKey",
                                  "Feature key " + feat + " is no longer legal"));
    }
    expected_errors.push_back(new CExpectedError("good", eDiag_Warning, "WrongQualOnImpFeat", msg));
    CConstRef<CValidError> eval = validator.Validate(seh, options);
    CheckErrors (*eval, expected_errors);
    misc_feat->SetQual().pop_back();
    CLEAR_ERRORS
}


typedef pair<const string, const string> TQualVal;

class CWrongFeatQual
{
public:
    CWrongFeatQual(string key);
    ~CWrongFeatQual();

    vector<TQualVal *> wrong_quals;
    const string& GetKey(void) const { return m_Key; } 


private:
    string m_Key;
};

CWrongFeatQual::CWrongFeatQual(string key) : m_Key (key)
{

}


CWrongFeatQual::~CWrongFeatQual()
{
    while (wrong_quals.size() > 0) {
        delete wrong_quals[wrong_quals.size() - 1];
        wrong_quals.pop_back();
    }
}

BOOST_AUTO_TEST_CASE(Test_FEAT_WrongQualOnImpFeat)
{
    CRef<CSeq_entry> entry = BuildGoodSeq();

    STANDARD_SETUP_WITH_DATABASE

    vector<CWrongFeatQual *> wrong;

    CWrongFeatQual * feat;

    // begin automatically generated section
    feat = new CWrongFeatQual("allele");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("allele", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("attenuator");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("C_region");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("CAAT_signal");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("conflict");
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("label", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("partial", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("D-loop");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("D_segment");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("enhancer");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("exon");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("GC_signal");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("iDNA");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("intron");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("J_segment");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("LTR");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("map", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("misc_binding");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("misc_difference");
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("misc_feature");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("misc_recomb");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("misc_signal");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("misc_structure");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("modified_base");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("partial", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("mutation");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("partial", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("allele", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("N_region");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("partial", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("allele", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("old_sequence");
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("label", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("operon");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("gene", "foo"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("locus_tag", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gene_synonym", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("old_locus_tag", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("oriT");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("polyA_signal");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("polyA_site");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "5..5"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("partial", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("prim_transcript");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("primer_bind");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("promoter");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("protein_bind");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("RBS");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("repeat_region");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("repeat_unit");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("rep_origin");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("S_region");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("satellite");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("source");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("gene", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("locus_tag", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("experiment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gene_synonym", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("inference", "similar to DNA sequence:INSD:AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("partial", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("evidence", "foo"));
    feat->wrong_quals.push_back( new TQualVal("allele", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("old_locus_tag", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("stem_loop");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("STS");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("TATA_signal");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("terminator");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("unsure");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("standard_name", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("partial", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("V_region");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("V_segment");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("variation");
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("3'clip");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("3'UTR");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("5'clip");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("5'UTR");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("operon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("-10_signal");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
    feat = new CWrongFeatQual("-35_signal");
    feat->wrong_quals.push_back( new TQualVal("compare", "AY123456.1"));
    feat->wrong_quals.push_back( new TQualVal("mitochondrion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mobile_element", "integron"));
    feat->wrong_quals.push_back( new TQualVal("metagenomic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("kinetoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromoplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specific_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tag_peptide", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolation_source", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collected_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_family", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_type", "flanking"));
    feat->wrong_quals.push_back( new TQualVal("insertion_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_table", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rearranged", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mod_base", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit", "foo"));
    feat->wrong_quals.push_back( new TQualVal("anticodon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("function", "foo"));
    feat->wrong_quals.push_back( new TQualVal("number", "foo"));
    feat->wrong_quals.push_back( new TQualVal("identified_by", "foo"));
    feat->wrong_quals.push_back( new TQualVal("collection_date", "foo"));
    feat->wrong_quals.push_back( new TQualVal("direction", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_range", "1..3"));
    feat->wrong_quals.push_back( new TQualVal("serotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("satellite", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organism", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transcript_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("serovar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("variety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("country", "foo"));
    feat->wrong_quals.push_back( new TQualVal("rpt_unit_seq", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lab_host", "foo"));
    feat->wrong_quals.push_back( new TQualVal("macronuclear", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cyanelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bio_material", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chloroplast", "foo"));
    feat->wrong_quals.push_back( new TQualVal("plasmid", "foo"));
    feat->wrong_quals.push_back( new TQualVal("mating_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("EC_number", "1.2.3.4"));
    feat->wrong_quals.push_back( new TQualVal("mol_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cultivar", "foo"));
    feat->wrong_quals.push_back( new TQualVal("artificial_location", "foo"));
    feat->wrong_quals.push_back( new TQualVal("segment", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cons_splice", "foo"));
    feat->wrong_quals.push_back( new TQualVal("environmental_sample", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_conditions", "foo"));
    feat->wrong_quals.push_back( new TQualVal("frequency", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transposon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplogroup", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ribosomal_slippage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon_start", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("gdb_xref", "foo"));
    feat->wrong_quals.push_back( new TQualVal("translation", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transl_except", "foo"));
    feat->wrong_quals.push_back( new TQualVal("bound_moiety", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_clone", "foo"));
    feat->wrong_quals.push_back( new TQualVal("cell_line", "foo"));
    feat->wrong_quals.push_back( new TQualVal("transgenic", "foo"));
    feat->wrong_quals.push_back( new TQualVal("germline", "foo"));
    feat->wrong_quals.push_back( new TQualVal("protein_id", "foo"));
    feat->wrong_quals.push_back( new TQualVal("codon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("clone_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("PCR_primers", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sequenced_mol", "foo"));
    feat->wrong_quals.push_back( new TQualVal("replace", "aaaaattttt"));
    feat->wrong_quals.push_back( new TQualVal("strain", "foo"));
    feat->wrong_quals.push_back( new TQualVal("proviral", "foo"));
    feat->wrong_quals.push_back( new TQualVal("lat_lon", "foo"));
    feat->wrong_quals.push_back( new TQualVal("culture_collection", "foo"));
    feat->wrong_quals.push_back( new TQualVal("haplotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("estimated_length", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_lib", "foo"));
    feat->wrong_quals.push_back( new TQualVal("focus", "foo"));
    feat->wrong_quals.push_back( new TQualVal("dev_stage", "foo"));
    feat->wrong_quals.push_back( new TQualVal("specimen_voucher", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pseudo", "foo"));
    feat->wrong_quals.push_back( new TQualVal("isolate", "foo"));
    feat->wrong_quals.push_back( new TQualVal("chromosome", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ncRNA_class", "foo"));
    feat->wrong_quals.push_back( new TQualVal("pop_variant", "foo"));
    feat->wrong_quals.push_back( new TQualVal("tissue_type", "foo"));
    feat->wrong_quals.push_back( new TQualVal("trans_splicing", "foo"));
    feat->wrong_quals.push_back( new TQualVal("organelle", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sex", "foo"));
    feat->wrong_quals.push_back( new TQualVal("virion", "foo"));
    feat->wrong_quals.push_back( new TQualVal("sub_species", "foo"));
    feat->wrong_quals.push_back( new TQualVal("exception", "foo"));
    feat->wrong_quals.push_back( new TQualVal("phenotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("ecotype", "foo"));
    feat->wrong_quals.push_back( new TQualVal("product", "foo"));
    wrong.push_back(feat);
//end automatically generated section

    ITERATE (vector<CWrongFeatQual *>, feat_it, wrong) {
        scope.RemoveTopLevelSeqEntry(seh);
        entry = BuildGoodSeq();
        CRef<CSeq_feat> imp = AddGoodImpFeat(entry, (*feat_it)->GetKey());
        seh = scope.AddTopLevelSeqEntry(*entry);
        ITERATE (vector<TQualVal *>, qual_it, (*feat_it)->wrong_quals) {
            s_TestOneWrongQual ((*qual_it)->first, (*qual_it)->second, (*feat_it)->GetKey(), 
                                seh, imp, validator, options);
        }
    }
    while (wrong.size() > 0) { 
        delete wrong[wrong.size() - 1]; 
        wrong.pop_back(); 
    }

}    

#endif // !defined(NCBI_COMPILER_WORKSHOP)  ||  !defined(__sparc)