#################################
# $Id$
# Author:  Denis Vakatov (vakatov@ncbi.nlm.nih.gov)
#################################
# This can be used to build/install/clean
# a single shared(DLL) library [LIB] made of object files [SRC] and [OBJ]
# where [SRC].o will be automagically compiled from [SRC].cpp or
# [SRC].c, and [OBJ].o must be already compiled by this time.
# The following libs will be used to resolve external referencies:
#   [DLL_LIB]  -- libs located in the NCBI C++ "lib/" dir;
#   [DLL_LIBS] -- 3rd-party libs
#
################
## Example of usage:
#
# srcdir = @srcdir@
# include @builddir@/Makefile.mk
#
# LIB = p1
# SRC = p1_src1 p1_src2
# OBJ = p1_myobj
#
# DLL_LIB  = xncbi
# LIBS = $(NETWORK_LIBS)
# .....
# CXXFLAGS = -g $(ORIG_CXXFLAGS) -D_DEBUG -DXYZ_P1_PROJECT
# .....
# include @builddir@/Makefile.dll
#################################

default_rule: all


### C/C++ source file compilation (and maybe auto-dependencies) build rules

CXXFLAGS_ALL = @f_compile@ \
	$(CXXFLAGS) $(CXXFLAGS_DLL) $(LOCAL_CPPFLAGS) $(CPPFLAGS)
CFLAGS_ALL   = @f_compile@ \
	$(CFLAGS) $(CFLAGS_DLL) $(LOCAL_CPPFLAGS) $(CPPFLAGS)
SOURCES      = @UNIX_SRC@ $(LIBOBJ) $(SRC)
include $(builddir)/Makefile.$(Rules)


### The library build rule

XDLLOBJ       = $(SOURCES:=@obj_ext@)
XOBJ          = $(OBJ:=@obj_ext@)
XDLL          = $(LIB:%=@lib_pre@%@dll_ext@)
XDLL_LOADABLE = $(LIB:%=@lib_pre@%@loadable_ext@)
XDLLDEP       = .$(LIB).dep
XDLL_LIB      = $(runpath) @f_libpath@$(libdir) $(DLL_LIB:%=@lib_l_pre@%@lib_l_ext@)
XDLL_LIBDEP = $(DLL_LIB:%=$(status_dir)/.%.dep)

$(XDLL): $(XDLLOBJ) $(XDLL_LIBDEP)
	-$(RM) $(XDLL)
	@has_dll_loadable@-$(RM) $(XDLL_LOADABLE)
	$(LINK_WRAPPER) $(LINK_DLL) $(XDLL) $(LDFLAGS_DLL) $(XDLLOBJ) $(XOBJ) $(XDLL_LIB) $(LIBS) $(LINK_FILTER)
	@has_dll_loadable@$(LINK_WRAPPER) $(LINK_LOADABLE) $(XDLL_LOADABLE) $(LDFLAGS_DLL) $(XDLLOBJ) $(XOBJ) $(XDLL_LIB) $(LIBS) $(LINK_FILTER)
	@echo $(srcdir) `pwd` $(TMPL) > $(XDLLDEP)
	@[ -r $(XDLLDEP) ]  ||  $(TOUCH) -r $(XDLL) $(XDLLDEP)
	$(BINCOPY) $(XDLL) $(libdir)
	@has_dll_loadable@$(BINCOPY) $(XDLL_LOADABLE) $(libdir)
	@$(BINCOPY) $(XDLLDEP) $(status_dir)
	@[ -r $(statusdir)/$(XDLLDEP) ]  ||  \
            $(BINTOUCH) -r $(libdir)/$(XDLL) $(status_dir)/$(XDLLDEP)


### Standard targets

all: $(XDLL)

clean:
	-$(RMDIR) SunWS_cache
	-$(RMDIR) ii_files
	-$(RMDIR) ti_files
	-$(RM) .make.state
	-$(RM) $(XDLLOBJ)
	-$(RM) $(XDLL) $(XDLLDEP)
	@has_dll_loadable@-$(RM) $(XDLL_LOADABLE)
	-$(RM) $(SOURCES:=.d)
	-$(RM) ir.out

purge: clean
	-$(RM) $(libdir)/$(XDLL) $(status_dir)/$(XDLLDEP)
	@has_dll_loadable@-$(RM) $(libdir)/$(XDLL_LOADABLE)
