@script_shell@
#
# $Id$
# Authors:  Eugene Vasilchenko, NCBI;  Aaron Ucko, NCBI

top_srcdir="@top_srcdir@"
build_root="@build_root@"
bindir=$build_root/bin
libdir=$build_root/lib

# detect root directory of current tree (which may be incomplete!)
p="`pwd`"
mp=
while true; do
    d="`basename \"$p\"`"
    p="`dirname \"$p\"`"
    if test -d "$p/src" && test -d "$p/include"; then
        break
    fi
    if test -z "$mp"; then
        mp="$d"
    else
        mp="$d/$mp"
    fi
    if test "$p" = "/"; then
        echo "Root directory not found"
        exit 1
    fi
done
# here $p is root directory, $mp is module path so $p/src/$mp is current dir

for d in $p $top_srcdir $NCBI/c++; do
    if test -f $d/src/Makefile.module; then
        makemodule=$d/src/Makefile.module
        break
    fi
done

if test -z "$makemodule"; then
    echo "Makefile.module not found"
    exit 1
fi

# define function which will get variable value from file
# Synopsis: getvar <var_name> <file_name>
getvar () {
    grep "^[ 	]*$1[ 	]*=" "$2" | head -1 |
        sed "s/^[ 	]*$1[ 	]*=[ 	]*//" | sed "s/[ 	]*$//"
}

# detect command arguments
case "$1" in
    *.asn)
        module="`basename \"$1\" .asn`"
        asn="$1"
        shift;;
    *.module)
        module="`basename \"$1\" .module`"
        shift;;
    '') if test -f *.module; then
            module="`basename *.module .module`"
        else
            echo "Usage: $0 [module]"
            exit 1
        fi;;
    *)
        module="$1";
        shift;;
esac

if test -f "$module.module"; then
    if test -z "$asn"; then
        asn="`getvar MODULE_ASN \"$module.module\"`"
    fi
    imports="`getvar MODULE_IMPORT \"$module.module\"`"
else
    echo "File $module.module not found. Using defaults..."
fi
if test -z "$asn"; then
    asn="$module.asn"
fi

# now $asn is source ASN.1 file $module.module is module description file
# check files
if test -f "$asn"; then
    :
else
    echo "Source file $asn not found."
    exit 1
fi

# Try to find imports
impdeps=
space=
for i in $imports; do
    if test -f "$p/src/$i.asn"; then
	  impdeps="${impdeps}${space}${p}/src/$i.asn"
    elif test -f "$top_srcdir/src/$i.asn"; then
	  impdeps="${impdeps}${space}${top_srcdir}/src/$i.asn"
    else
	  echo "Import file $i not found."
	  exit 1
    fi
    space=' '
done

# detect datatool program path
if test -x "$bindir/datatool"; then
    datatool=$bindir/datatool
    LD_LIBRARY_PATH=$libdir:$LD_LIBRARY_PATH
    export LD_LIBRARY_PATH
    case "`uname`" in
        IRIX*) _RLD_ROOT=/usr; export _RLD_ROOT ;;
    esac    
elif test -x "$NCBI/c++/Release/bin/datatool"; then
    datatool="$NCBI/c++/Release/bin/datatool"
else
    datatool=datatool
fi

# guess the make command, if it is not specified in the $MAKE env. variable
if test -z "$MAKE" ; then
    case "`uname`" in
      SunOS) MAKE=make;;
      *) MAKE=gmake;;
    esac
fi

# figure out what search path to specify
if test "$top_srcdir" = "$p"; then
    search="$p/src"
else
    search="$p/src,$top_srcdir/src"
fi

# run command
echo $MAKE -f "$makemodule" "MODULE=$module" "MODULE_PATH=$mp" "MODULE_ASN=$asn" "MODULE_IMPORT=$imports" "IMPDEPS=$impdeps" "top_srcdir=$p" "DATATOOL=$datatool" "MODULE_SEARCH=$search" "$@"
$MAKE -f "$makemodule" "MODULE=$module" "MODULE_PATH=$mp" "MODULE_ASN=$asn" "MODULE_IMPORT=$imports" "IMPDEPS=$impdeps" "top_srcdir=$p" "DATATOOL=$datatool" "MODULE_SEARCH=$search" "$@"
