#################################
# $Id$
# Author:  Denis Vakatov (vakatov@ncbi.nlm.nih.gov)
#################################
# Must be used this way:
#
# LIBOBJ  = p1_lib1.o p1_lib2.o 
# LIB     = libp1.a
# OBJ     = p1_obj1.o
# SUBPROJ = app sub_proj1 sub_proj2
#
# srcdir = @srcdir@
# include @exec_prefix@/Makefile.mk
# .....
# CXXFLAGS = -g $(ORIG_CXXFLAGS) -D_DEBUG -DXYZ_P1_PROJECT
# .....
# include @exec_prefix@/Makefile.lib
#################################


### C/C++ source file compilation rules

%.o: $(srcdir)/%.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $< -o $@
%.o: $(srcdir)/%.c
	$(CC)  -c $(CFLAGS)   $(CPPFLAGS) $< -o $@


### The library build rule

$(LIB): $(LIBOBJ)
	$(AR) $(LIB) $(LIBOBJ)
	-$(RANLIB) $(LIB)


### Standard targets(non-recursive)

all: $(LIB) $(OBJ)

install: all
	$(COPY) $(LIB) $(OBJ) $(libdir)/

clean:
	-$(RMDIR) SunWS_cache
	-$(RM) .make.state
	-$(RM) $(LIBOBJ)
	-$(RM) $(LIB)
	-$(RM) $(OBJ)
	-$(RM) *~


### Standard targets
### Recursive build -- in the $(SUBPROJ) directories

all_r: all
	@if ! -z "$(SUBPROJ)" ; then \
		for i in $(SUBPROJ) ; do \
			( cd $$i ; $(MAKE) $(MFLAGS) $@ ) ; \
		done ; \
	fi

install_r: install
	@if ! -z "$(SUBPROJ)" ; then \
		for i in $(SUBPROJ) ; do \
			( cd $$i ; $(MAKE) $(MFLAGS) $@ ) ; \
		done ; \
	fi

clean_r: clean
	@if ! -z "$(SUBPROJ)" ; then \
		for i in $(SUBPROJ) ; do \
			( cd $$i ; $(MAKE) $(MFLAGS) $@ ) ; \
		done ; \
	fi

