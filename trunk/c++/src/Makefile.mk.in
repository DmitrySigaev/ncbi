#################################
# $Id$
# Author:  Denis Vakatov (vakatov@ncbi.nlm.nih.gov)
#################################
#
# This template must be "configure"d and included in the very beginning
# of all underlying configurable NCBI project makefiles exactly this way:
#
# srcdir = @srcdir@
# include @builddir@/Makefile.mk
#
#################################


### Make sure to use a right command shell

@make_shell@


### Configurable paths

top_srcdir  = @top_srcdir@
build_root  = @build_root@
builddir    = @builddir@
status_dir  = @status_dir@


### Other paths
### includedir0 is reserved; user makefiles should only use includedir.

includedir0 = $(top_srcdir)/include
includedir  = $(includedir0)
incdir      = $(build_root)/inc
libdir      = $(build_root)/lib
bindir      = $(build_root)/bin
runpath     = @runpath@


### Optional top-level project groups

OPT_GROUPS = @OPT_GROUPS@


### Header dirs to include

STD_INCLUDE = -I$(incdir) -I$(includedir0) $(OPT_GROUPS:%=-I$(includedir0)/%)


### Auxiliary commands, filters

RM       = rm -f
RMDIR    = rm -rf
COPY     = cp -p
BINCOPY  = @BINCOPY@
TOUCH    = touch
BINTOUCH = $(TOUCH)
LN_S	   = @LN_S@

CC_FILTER  = @CC_FILTER@
CXX_FILTER = @CXX_FILTER@

CHECK_ARG = @CHECK_ARG@


### Configurable compiler/librarian/linker binaries and options
### (CONF-Set:  not to be alternated or used anywhere in the user makefiles!)

CONF_CC     = @CC@
CONF_CXX    = @CXX@
CONF_CPP    = @CPP@
CONF_CXXCPP = @CXXCPP@
CONF_AR     = @AR@
CONF_RANLIB = @RANLIB@
CONF_LINK   = @CXX@
CONF_STRIP  = @STRIP@

CONF_CFLAGS   = @CFLAGS@
CONF_CXXFLAGS = @CXXFLAGS@
CONF_CPPFLAGS = @CPPFLAGS@ $(STD_INCLUDE)
CONF_DEPFLAGS = @DEPFLAGS@
CONF_DEPFLAGS_POST = @DEPFLAGS_POST@
CONF_LDFLAGS  = @LDFLAGS@
CONF_LIBS     = @LIBS@


### Configurable compiler/librarian/linker binaries and options
### (ORIG-Set:  not to be alternated, but can be used in the user makefiles
### to alternate the value of relevant flags, e.g. CXX = $(ORIG_CXX) -DFOO_BAR)

ORIG_CC     = $(CONF_CC)
ORIG_CXX    = $(CONF_CXX)
ORIG_CPP    = $(CONF_CPP)
ORIG_CXXCPP = $(CONF_CXXCPP)
ORIG_AR     = $(CONF_AR)
ORIG_RANLIB = $(CONF_RANLIB)
ORIG_LINK   = $(CONF_LINK)
ORIG_STRIP  = $(CONF_STRIP)

ORIG_CFLAGS   = $(CONF_CFLAGS)
ORIG_CXXFLAGS = $(CONF_CXXFLAGS)
ORIG_CPPFLAGS = $(CONF_CPPFLAGS)
ORIG_DEPFLAGS = $(CONF_DEPFLAGS)
ORIG_DEPFLAGS_POST = $(CONF_DEPFLAGS_POST)
ORIG_LDFLAGS  = $(CONF_LDFLAGS)
ORIG_LIBS     = $(CONF_LIBS)


### Configurable compiler/librarian/linker binaries and options
### (WORK-Set:  to be used by standard build rules;
###             can be modified to meet a particular project requirements)

CC     = $(CONF_CC)
CXX    = $(CONF_CXX)
CPP    = $(CONF_CPP)
CXXCPP = $(CONF_CXXCPP)
AR     = $(CONF_AR)
RANLIB = $(CONF_RANLIB)
LINK   = $(CONF_LINK)
STRIP  = $(CONF_STRIP)

CFLAGS   = $(CONF_CFLAGS)
CXXFLAGS = $(CONF_CXXFLAGS)
CPPFLAGS = $(CONF_CPPFLAGS)
DEPFLAGS = $(CONF_DEPFLAGS)
DEPFLAGS_POST = $(CONF_DEPFLAGS_POST)
LDFLAGS  = $(CONF_LDFLAGS)
LIBS     = $(CONF_LIBS)
PRE_LIBS =

### Debug/release suffixes
# "Debug" for debugging, "Release" for release
DEBUG_SFX = @DEBUG_SFX@
# 'd' for debugging, empty for release
D_SFX=@D_SFX@

### DLL specifics
# whether to build the lib as static or dynamic
LIB_OR_DLL = @LIB_OR_DLL@
# library name suffix; either "-static" or empty
STATIC     = @STATIC@

LINK_DLL     = @LINK_DLL@
CFLAGS_DLL   = @CFLAGS_DLL@
CXXFLAGS_DLL = @CXXFLAGS_DLL@
LDFLAGS_DLL  = $(LDFLAGS)

### To enable extra, potentially unsafe, optimization
FAST_CFLAGS   = @FAST_CFLAGS@
FAST_CXXFLAGS = @FAST_CXXFLAGS@

### For platform-specific includes
COMPILER = @COMPILER@
OSTYPE   = @OSTYPE@

### Configuration summary
signature = @signature@

### Do not use any default suffix rules
.SUFFIXES:

### Use automatic auto-dependencies (SunOS make, .KEEP_STATE:)
@KeepStateTarget@
### "rules"/"rules_with_autodep" (whether to build auto-deps for GNU make)
Rules=@Rules@
### Kludge module to workaround an RTTI bug (Sun WorkShop only)
serial_ws50_rtti_kludge=@serial_ws50_rtti_kludge@
### Special object file needed for atomic counters
ncbicntr=@ncbicntr@

#################################
# Some platform-specific system libs that can be linked eventually
THREAD_LIBS  = @THREAD_LIBS@
NETWORK_LIBS = @NETWORK_LIBS@
MATH_LIBS    = @MATH_LIBS@
KSTAT_LIBS   = @KSTAT_LIBS@
RPCSVC_LIBS  = @RPCSVC_LIBS@
CRYPT_LIBS   = @CRYPT_LIBS@
DL_LIBS      = @DL_LIBS@


#################################
# Optional variables that may be needed to build some projects
# (see in "configure.ac" for the pre-set defaults)
#

# --with-local-lbsm:  --->  src/connect/Makefile.[x]connect.lib
LOCAL_LBSM = @local_lbsm@

# Sybase:  headers and libs
SYBASE_INCLUDE = @SYBASE_INCLUDE@
SYBASE_LIBS    = @SYBASE_LIBS@
SYBASE_DLLS    = @SYBASE_DLLS@
SYBASE_DBLIBS  = @SYBASE_DBLIBS@

# Free TDS
FTDS_LIBS    = @FTDS_LIBS@
FTDS_INCLUDE = @FTDS_INCLUDE@

# NCBI C Toolkit:  headers and libs
NCBI_C_INCLUDE = @NCBI_C_INCLUDE@
NCBI_C_LIBPATH = @NCBI_C_LIBPATH@
NCBI_C_ncbi = @NCBI_C_ncbi@

# wxWindows:  headers and libs
WXWIN_INCLUDE = @WXWIN_INCLUDE@
WXWIN_LIBS    = @WXWIN_LIBS@

# Fast-CGI lib:  headers and libs
FASTCGI_INCLUDE = @FASTCGI_INCLUDE@
FASTCGI_LIBS    = @FASTCGI_LIBS@
# Fast-CGI lib:  (module to add to the "xcgi" library)
FASTCGI_OBJS    = @FASTCGI_OBJS@

# NCBI SSS:  headers, library path, libraries
NCBI_SSS_INCLUDE = @NCBI_SSS_INCLUDE@
NCBI_SSS_LIBPATH = @NCBI_SSS_LIBPATH@
LIBSSSUTILS      = @LIBSSSUTILS@
LIBSSSDB         = @LIBSSSDB@

# NCBI GEO:  headers, library path, libraries
NCBI_GEO_INCLUDE = @NCBI_GEO_INCLUDE@
NCBI_GEO_LIBPATH = @NCBI_GEO_LIBPATH@
LIBGEODB         = @LIBGEODB@

# SP:  headers, libraries
SP_INCLUDE = @SP_INCLUDE@
SP_LIBS    = @SP_LIBS@

# Path to the root of PubMed tree -- sources, headers and precompiled libs
NCBI_PM_PATH = @NCBI_PM_PATH@

# ORBacus CORBA headers, library path, libraries
ORBACUS_INCLUDE = @ORBACUS_INCLUDE@
ORBACUS_LIBPATH = @ORBACUS_LIBPATH@
LIBOB           = @LIBOB@
# LIBIMR should be empty for single-threaded builds
LIBIMR          = @LIBIMR@

#################################
# Useful sets of object libraries
# Interdependent sequence libraries + seqcode.  Does not include seqset.
SEQ_LIBS = seqfeat seq seqalign seqblock seqfeat seq seqloc seqres seqcode
