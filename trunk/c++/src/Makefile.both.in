#################################
# $Id$
# Author:  Denis Vakatov (vakatov@ncbi.nlm.nih.gov)
#################################
# This can be used to build/install/clean BOTH
#
# a single(sic!) library [LIB] made of object files [LIBOBJ] and [LOBJ]
# where [LIBOBJ].o will be automagically compiled from [LIBOBJ].cpp or
# [LIBOBJ].c, and [LOBJ].o must be already compiled by this time.
#
# AND
#
# a single shared(DLL) library [LIB] made of object files
# shared/[LIBOBJ] and shared/[LOBJ] where shared/[LIBOBJ].o will be
# automagically compiled from [LIBOBJ].cpp or [LIBOBJ].c, and
# shared/[LOBJ].o must be already compiled by this time.

# The following libs will be used to resolve external referencies:
#   [DLL_LIB]  -- libs located in the NCBI C++ "lib/" dir;
#   [DLL_LIBS] -- 3rd-party libs
#
################
## Example of usage:
#
# srcdir = @srcdir@
# include @builddir@/Makefile.mk
#
# LIB      = p1
# LIBOBJ   = p1_src1 p1_src2
# LOBJ     = p1_myobj
#
# DLL_LIB  = xncbi
# LIBS = $(NETWORK_LIBS)
# .....
# CXXFLAGS = -g $(ORIG_CXXFLAGS) -D_DEBUG -DXYZ_P1_PROJECT
# .....
# include @builddir@/Makefile.both
#################################

default_rule: all


### C/C++ source file compilation (and maybe auto-dependencies) build rules

CXXFLAGS_ALL = @f_compile@ $(CXXFLAGS) $(LOCAL_CPPFLAGS) $(CPPFLAGS)
CFLAGS_ALL   = @f_compile@ $(CFLAGS)   $(LOCAL_CPPFLAGS) $(CPPFLAGS)
SOURCES      = @UNIX_SRC@ $(SRC) $(LIBOBJ)
include $(builddir)/Makefile.$(Rules)


### The static library build rule

XLIBOBJ = $(SOURCES:=@obj_ext@)
XLOBJ   = $(LOBJ:=@obj_ext@)
XLIB    = $(LIB:%=@lib_pre@%@lib_ext@)
XLIBDEP = .$(LIB).dep

$(XLIB): $(XLIBOBJ)
	-$(RM) $(XLIB)
	$(AR) @f_outlib@$(XLIB) $(XLIBOBJ) $(XLOBJ)
	@$(RANLIB) $(XLIB)
	$(TOUCH) -r $(XLIB) $(XLIBDEP)
	$(BINCOPY) $(XLIB) $(libdir)
	$(BINTOUCH) -r $(libdir)/$(XLIB) $(libdir)/$(XLIBDEP)


### The shared library build rule

XSHLIBOBJ     = $(SOURCES:%=shared/%@obj_ext@)
XSHLOBJ       = $(LOBJ:%=shared/%@obj_ext@)
XSHLIB        = $(LIB:%=@lib_pre@%@dll_ext@)
XSHLIBDEP     = .$(LIB).dep
XDLL_LIB    = $(runpath) @f_libpath@$(libdir) $(DLL_LIB:%=@lib_l_pre@%@lib_l_ext@)
XDLL_LIBDEP = $(DLL_LIB:%=$(libdir)/.%.dep)

$(XSHLIB): $(XSHLIBOBJ) $(XDLL_LIBDEP)
	-$(RM) $(XSHLIB)
	$(LINK_DLL) $(XSHLIB) $(XSHLIBOBJ) $(XSHLOBJ) $(XDLL_LIB) $(LIBS)
	$(TOUCH) -r $(XSHLIB) $(XSHLIBDEP)
	$(BINCOPY) $(XSHLIB) $(libdir)
	$(BINTOUCH) -r $(libdir)/$(XSHLIB) $(libdir)/$(XSHLIBDEP)


### Standard targets

all: $(XLIB) $(XSHLIB)

clean:
	-$(RMDIR) SunWS_cache
	-$(RMDIR) ii_files
	-$(RMDIR) ti_files
	-$(RM) .make.state
	-$(RM) $(XLIBOBJ) $(XSHLIBOBJ)
	-$(RM) $(XLIB) $(XSHLIB) $(XLIBDEP) $(XSHLIBDEP)
	-$(RM) $(SOURCES:=.d)

purge: clean
	-$(RM) $(libdir)/$(XLIB) $(libdir)/$(XSHLIB) \
		$(libdir)/$(XLIBDEP) $(libdir)/$(XSHLIBDEP)
