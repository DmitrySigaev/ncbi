// $Id$
//
//  ATTENTION!
// This file is generated by script serial/test/make_webenv.sh.
// Do not fix it manually, as all your manual changes will be lost!

#include <corelib/ncbistd.hpp>
USING_NCBI_SCOPE;


/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Argument.hpp>

// generated classes

void CArgument_Base::ResetName(void)
{
    m_Name.erase();
}

void CArgument_Base::ResetValue(void)
{
    m_Value.erase();
}

void CArgument_Base::Reset(void)
{
    ResetName();
    ResetValue();
}

BEGIN_NAMED_BASE_CLASS_INFO("Argument", CArgument)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("name", m_Name);
    ADD_NAMED_STD_MEMBER("value", m_Value);
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CArgument_Base::CArgument_Base(void)
{
}

// destructor
CArgument_Base::~CArgument_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Db_Clipboard.hpp>

// generated classes

void CDb_Clipboard_Base::ResetName(void)
{
    m_Name.erase();
}

void CDb_Clipboard_Base::ResetItems(void)
{
    m_Items.Reset();
}

void CDb_Clipboard_Base::Reset(void)
{
    ResetName();
    ResetCount();
    ResetItems();
}

void CDb_Clipboard_Base::DoNotDeleteThisObject(void)
{
    CObject::DoNotDeleteThisObject();
    m_Items.DoNotDeleteThisObject();
}

BEGIN_NAMED_BASE_CLASS_INFO("Db-Clipboard", CDb_Clipboard)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("name", m_Name);
    ADD_NAMED_STD_MEMBER("count", m_Count);
    ADD_NAMED_MEMBER("items", m_Items, CLASS, (CItem_Set));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CDb_Clipboard_Base::CDb_Clipboard_Base(void)
    : m_Count(0)
{
}

// destructor
CDb_Clipboard_Base::~CDb_Clipboard_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Db_Env.hpp>
#include <Argument.hpp>
#include <Db_Clipboard.hpp>
#include <Filter_Value.hpp>

// generated classes

void CDb_Env_Base::ResetName(void)
{
    m_Name.erase();
}

void CDb_Env_Base::ResetArguments(void)
{
    m_Arguments.clear();
}

void CDb_Env_Base::ResetFilters(void)
{
    m_Filters.clear();
}

void CDb_Env_Base::ResetClipboard(void)
{
    m_Clipboard.clear();
}

void CDb_Env_Base::Reset(void)
{
    ResetName();
    ResetArguments();
    ResetFilters();
    ResetClipboard();
}

BEGIN_NAMED_BASE_CLASS_INFO("Db-Env", CDb_Env)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("name", m_Name);
    ADD_NAMED_MEMBER("arguments", m_Arguments, STL_list_set, (STL_CRef, (CLASS, (CArgument))))->SetOptional();
    ADD_NAMED_MEMBER("filters", m_Filters, STL_list_set, (STL_CRef, (CLASS, (CFilter_Value))))->SetOptional();
    ADD_NAMED_MEMBER("clipboard", m_Clipboard, STL_list_set, (STL_CRef, (CLASS, (CDb_Clipboard))))->SetOptional();
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CDb_Env_Base::CDb_Env_Base(void)
{
}

// destructor
CDb_Env_Base::~CDb_Env_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Filter_Value.hpp>

// generated classes

void CFilter_Value_Base::ResetName(void)
{
    m_Name.erase();
}

void CFilter_Value_Base::ResetValue(void)
{
    m_Value.erase();
}

void CFilter_Value_Base::Reset(void)
{
    ResetName();
    ResetValue();
}

BEGIN_NAMED_BASE_CLASS_INFO("Filter-Value", CFilter_Value)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("name", m_Name);
    ADD_NAMED_STD_MEMBER("value", m_Value);
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CFilter_Value_Base::CFilter_Value_Base(void)
{
}

// destructor
CFilter_Value_Base::~CFilter_Value_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Full_Time.hpp>

// generated classes

void CFull_Time_Base::Reset(void)
{
    ResetYear();
    ResetMonth();
    ResetDay();
    ResetHour();
    ResetMinute();
    ResetSecond();
}

BEGIN_NAMED_BASE_CLASS_INFO("Full-Time", CFull_Time)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("year", m_Year);
    ADD_NAMED_STD_MEMBER("month", m_Month);
    ADD_NAMED_STD_MEMBER("day", m_Day);
    ADD_NAMED_STD_MEMBER("hour", m_Hour);
    ADD_NAMED_STD_MEMBER("minute", m_Minute);
    ADD_NAMED_STD_MEMBER("second", m_Second);
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CFull_Time_Base::CFull_Time_Base(void)
    : m_Year(0), m_Month(0), m_Day(0), m_Hour(0), m_Minute(0), m_Second(0)
{
}

// destructor
CFull_Time_Base::~CFull_Time_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Item_Set.hpp>

// generated classes

void CItem_Set_Base::ResetItems(void)
{
    m_Items.clear();
}

void CItem_Set_Base::Reset(void)
{
    ResetItems();
    ResetCount();
}

BEGIN_NAMED_BASE_CLASS_INFO("Item-Set", CItem_Set)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_MEMBER("items", m_Items, STL_CHAR_vector, (char));
    ADD_NAMED_STD_MEMBER("count", m_Count);
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CItem_Set_Base::CItem_Set_Base(void)
    : m_Count(0)
{
}

// destructor
CItem_Set_Base::~CItem_Set_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Name.hpp>

// generated classes

void CName_Base::ResetName(void)
{
    m_Name.erase();
}

void CName_Base::ResetDescription(void)
{
    m_Description.erase();
    m_set_Description = false;
}

void CName_Base::Reset(void)
{
    ResetName();
    ResetDescription();
}

BEGIN_NAMED_BASE_CLASS_INFO("Name", CName)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("name", m_Name);
    ADD_NAMED_STD_MEMBER("description", m_Description)->SetOptional(MEMBER_PTR(m_set_Description));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CName_Base::CName_Base(void)
    : m_set_Description(false)
{
}

// destructor
CName_Base::~CName_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Named_Item_Set.hpp>

// generated classes

void CNamed_Item_Set_Base::ResetName(void)
{
    m_Name.Reset();
}

void CNamed_Item_Set_Base::ResetDb(void)
{
    m_Db.erase();
}

void CNamed_Item_Set_Base::ResetItem_Set(void)
{
    m_Item_Set.Reset();
}

void CNamed_Item_Set_Base::Reset(void)
{
    ResetName();
    ResetDb();
    ResetItem_Set();
}

void CNamed_Item_Set_Base::DoNotDeleteThisObject(void)
{
    CObject::DoNotDeleteThisObject();
    m_Name.DoNotDeleteThisObject();
    m_Item_Set.DoNotDeleteThisObject();
}

BEGIN_NAMED_BASE_CLASS_INFO("Named-Item-Set", CNamed_Item_Set)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_MEMBER("name", m_Name, CLASS, (CName));
    ADD_NAMED_STD_MEMBER("db", m_Db);
    ADD_NAMED_MEMBER("item-Set", m_Item_Set, CLASS, (CItem_Set));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CNamed_Item_Set_Base::CNamed_Item_Set_Base(void)
{
}

// destructor
CNamed_Item_Set_Base::~CNamed_Item_Set_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Named_Query.hpp>

// generated classes

void CNamed_Query_Base::ResetName(void)
{
    m_Name.Reset();
}

void CNamed_Query_Base::ResetTime(void)
{
    m_Time.Reset();
}

void CNamed_Query_Base::ResetCommand(void)
{
    m_Command.Reset();
}

void CNamed_Query_Base::Reset(void)
{
    ResetName();
    ResetTime();
    ResetCommand();
}

void CNamed_Query_Base::DoNotDeleteThisObject(void)
{
    CObject::DoNotDeleteThisObject();
    m_Name.DoNotDeleteThisObject();
    m_Time.DoNotDeleteThisObject();
    m_Command.DoNotDeleteThisObject();
}

BEGIN_NAMED_BASE_CLASS_INFO("Named-Query", CNamed_Query)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_MEMBER("name", m_Name, CLASS, (CName));
    ADD_NAMED_MEMBER("time", m_Time, CLASS, (CTime));
    ADD_NAMED_MEMBER("command", m_Command, CLASS, (CQuery_Command));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CNamed_Query_Base::CNamed_Query_Base(void)
{
}

// destructor
CNamed_Query_Base::~CNamed_Query_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Query_Command.hpp>
#include <Query_Related.hpp>
#include <Query_Search.hpp>
#include <Query_Select.hpp>

// generated classes

void CQuery_Command_Base::Reset(void)
{
    switch ( m_choice ) {
    case e_Search:
    case e_Select:
    case e_Related:
        m_object->RemoveReference();
        break;
    default:
        break;
    }
    m_choice = e_not_set;
}

void CQuery_Command_Base::DoSelect(E_Choice index)
{
    switch ( index ) {
    case e_Search:
        (m_object = new CQuery_Search())->AddReference();
        break;
    case e_Select:
        (m_object = new CQuery_Select())->AddReference();
        break;
    case e_Related:
        (m_object = new CQuery_Related())->AddReference();
        break;
    default:
        break;
    }
    m_choice = index;
}

const char* const CQuery_Command_Base::sm_SelectionNames[] = {
    "not set",
    "search",
    "select",
    "related"
};

NCBI_NS_STD::string CQuery_Command_Base::SelectionName(E_Choice index)
{
    return NCBI_NS_NCBI::CInvalidChoiceSelection::GetName(index, sm_SelectionNames, sizeof(sm_SelectionNames)/sizeof(sm_SelectionNames[0]));
}

void CQuery_Command_Base::ThrowInvalidSelection(E_Choice index) const
{
    throw NCBI_NS_NCBI::CInvalidChoiceSelection(m_choice, index, sm_SelectionNames, sizeof(sm_SelectionNames)/sizeof(sm_SelectionNames[0]));
}

const CQuery_Command_Base::TSearch& CQuery_Command_Base::GetSearch(void) const
{
    CheckSelected(e_Search);
    return *static_cast<const TSearch*>(m_object);
}

CQuery_Command_Base::TSearch& CQuery_Command_Base::GetSearch(void)
{
    CheckSelected(e_Search);
    return *static_cast<TSearch*>(m_object);
}

CQuery_Command_Base::TSearch& CQuery_Command_Base::SetSearch(void)
{
    Select(e_Search, NCBI_NS_NCBI::eDoNotResetVariant);
    return *static_cast<TSearch*>(m_object);
}

void CQuery_Command_Base::SetSearch(const NCBI_NS_NCBI::CRef<TSearch>& ref)
{
    TSearch* ptr = const_cast<TSearch*>(&*ref);
    if ( m_choice != e_Search || m_object != ptr ) {
        Reset();
        (m_object = ptr)->AddReference();
        m_choice = e_Search;
    }
}

const CQuery_Command_Base::TSelect& CQuery_Command_Base::GetSelect(void) const
{
    CheckSelected(e_Select);
    return *static_cast<const TSelect*>(m_object);
}

CQuery_Command_Base::TSelect& CQuery_Command_Base::GetSelect(void)
{
    CheckSelected(e_Select);
    return *static_cast<TSelect*>(m_object);
}

CQuery_Command_Base::TSelect& CQuery_Command_Base::SetSelect(void)
{
    Select(e_Select, NCBI_NS_NCBI::eDoNotResetVariant);
    return *static_cast<TSelect*>(m_object);
}

void CQuery_Command_Base::SetSelect(const NCBI_NS_NCBI::CRef<TSelect>& ref)
{
    TSelect* ptr = const_cast<TSelect*>(&*ref);
    if ( m_choice != e_Select || m_object != ptr ) {
        Reset();
        (m_object = ptr)->AddReference();
        m_choice = e_Select;
    }
}

const CQuery_Command_Base::TRelated& CQuery_Command_Base::GetRelated(void) const
{
    CheckSelected(e_Related);
    return *static_cast<const TRelated*>(m_object);
}

CQuery_Command_Base::TRelated& CQuery_Command_Base::GetRelated(void)
{
    CheckSelected(e_Related);
    return *static_cast<TRelated*>(m_object);
}

CQuery_Command_Base::TRelated& CQuery_Command_Base::SetRelated(void)
{
    Select(e_Related, NCBI_NS_NCBI::eDoNotResetVariant);
    return *static_cast<TRelated*>(m_object);
}

void CQuery_Command_Base::SetRelated(const NCBI_NS_NCBI::CRef<TRelated>& ref)
{
    TRelated* ptr = const_cast<TRelated*>(&*ref);
    if ( m_choice != e_Related || m_object != ptr ) {
        Reset();
        (m_object = ptr)->AddReference();
        m_choice = e_Related;
    }
}

// helper methods

// type info
BEGIN_NAMED_BASE_CHOICE_INFO("Query-Command", CQuery_Command)
{
    SET_CHOICE_MODULE("NCBI-Env");
    ADD_NAMED_REF_CHOICE_VARIANT("search", m_object, CQuery_Search);
    ADD_NAMED_REF_CHOICE_VARIANT("select", m_object, CQuery_Select);
    ADD_NAMED_REF_CHOICE_VARIANT("related", m_object, CQuery_Related);
}
END_CHOICE_INFO

// constructor
CQuery_Command_Base::CQuery_Command_Base(void)
    : m_choice(e_not_set)
{
}

// destructor
CQuery_Command_Base::~CQuery_Command_Base(void)
{
    if ( m_choice != e_not_set )
        Reset();
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Query_History.hpp>

// generated classes

void CQuery_History_Base::ResetName(void)
{
    m_Name.erase();
    m_set_Name = false;
}

void CQuery_History_Base::ResetTime(void)
{
    m_Time.Reset();
}

void CQuery_History_Base::ResetCommand(void)
{
    m_Command.Reset();
}

void CQuery_History_Base::Reset(void)
{
    ResetName();
    ResetSeqNumber();
    ResetTime();
    ResetCommand();
}

void CQuery_History_Base::DoNotDeleteThisObject(void)
{
    CObject::DoNotDeleteThisObject();
    m_Time.DoNotDeleteThisObject();
    m_Command.DoNotDeleteThisObject();
}

BEGIN_NAMED_BASE_CLASS_INFO("Query-History", CQuery_History)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("name", m_Name)->SetOptional(MEMBER_PTR(m_set_Name));
    ADD_NAMED_STD_MEMBER("seqNumber", m_SeqNumber);
    ADD_NAMED_MEMBER("time", m_Time, CLASS, (CTime));
    ADD_NAMED_MEMBER("command", m_Command, CLASS, (CQuery_Command));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CQuery_History_Base::CQuery_History_Base(void)
    : m_set_Name(false), m_SeqNumber(0)
{
}

// destructor
CQuery_History_Base::~CQuery_History_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Query_Related.hpp>
#include <Item_Set.hpp>

// generated classes

void CQuery_Related_Base::C_Items::Reset(void)
{
    switch ( m_choice ) {
    case e_Items:
        m_object->RemoveReference();
        break;
    default:
        break;
    }
    m_choice = e_not_set;
}

void CQuery_Related_Base::C_Items::DoSelect(E_Choice index)
{
    switch ( index ) {
    case e_Items:
        (m_object = new CItem_Set())->AddReference();
        break;
    case e_ItemCount:
        m_ItemCount = 0;
        break;
    default:
        break;
    }
    m_choice = index;
}

const char* const CQuery_Related_Base::C_Items::sm_SelectionNames[] = {
    "not set",
    "items",
    "itemCount"
};

NCBI_NS_STD::string CQuery_Related_Base::C_Items::SelectionName(E_Choice index)
{
    return NCBI_NS_NCBI::CInvalidChoiceSelection::GetName(index, sm_SelectionNames, sizeof(sm_SelectionNames)/sizeof(sm_SelectionNames[0]));
}

void CQuery_Related_Base::C_Items::ThrowInvalidSelection(E_Choice index) const
{
    throw NCBI_NS_NCBI::CInvalidChoiceSelection(m_choice, index, sm_SelectionNames, sizeof(sm_SelectionNames)/sizeof(sm_SelectionNames[0]));
}

const CQuery_Related_Base::C_Items::TItems& CQuery_Related_Base::C_Items::GetItems(void) const
{
    CheckSelected(e_Items);
    return *static_cast<const TItems*>(m_object);
}

CQuery_Related_Base::C_Items::TItems& CQuery_Related_Base::C_Items::GetItems(void)
{
    CheckSelected(e_Items);
    return *static_cast<TItems*>(m_object);
}

CQuery_Related_Base::C_Items::TItems& CQuery_Related_Base::C_Items::SetItems(void)
{
    Select(e_Items, NCBI_NS_NCBI::eDoNotResetVariant);
    return *static_cast<TItems*>(m_object);
}

void CQuery_Related_Base::C_Items::SetItems(const NCBI_NS_NCBI::CRef<TItems>& ref)
{
    TItems* ptr = const_cast<TItems*>(&*ref);
    if ( m_choice != e_Items || m_object != ptr ) {
        Reset();
        (m_object = ptr)->AddReference();
        m_choice = e_Items;
    }
}

// helper methods

// type info
BEGIN_NAMED_CHOICE_INFO("", CQuery_Related_Base::C_Items)
{
    ADD_NAMED_REF_CHOICE_VARIANT("items", m_object, CItem_Set);
    ADD_NAMED_STD_CHOICE_VARIANT("itemCount", m_ItemCount);
}
END_CHOICE_INFO

// constructor
CQuery_Related_Base::C_Items::C_Items(void)
    : m_choice(e_not_set)
{
}

// destructor
CQuery_Related_Base::C_Items::~C_Items(void)
{
    if ( m_choice != e_not_set )
        Reset();
}


void CQuery_Related_Base::ResetBase(void)
{
    m_Base.Reset();
}

void CQuery_Related_Base::ResetRelation(void)
{
    m_Relation.erase();
}

void CQuery_Related_Base::ResetDb(void)
{
    m_Db.erase();
}

void CQuery_Related_Base::ResetItems(void)
{
    m_Items.Reset();
}

void CQuery_Related_Base::Reset(void)
{
    ResetBase();
    ResetRelation();
    ResetDb();
    ResetItems();
}

void CQuery_Related_Base::DoNotDeleteThisObject(void)
{
    CObject::DoNotDeleteThisObject();
    m_Base.DoNotDeleteThisObject();
    m_Items.DoNotDeleteThisObject();
}

BEGIN_NAMED_BASE_CLASS_INFO("Query-Related", CQuery_Related)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_MEMBER("base", m_Base, CLASS, (CQuery_Command));
    ADD_NAMED_STD_MEMBER("relation", m_Relation);
    ADD_NAMED_STD_MEMBER("db", m_Db);
    ADD_NAMED_MEMBER("items", m_Items, CLASS, (C_Items));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CQuery_Related_Base::CQuery_Related_Base(void)
{
}

// destructor
CQuery_Related_Base::~CQuery_Related_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Query_Search.hpp>
#include <Filter_Value.hpp>

// generated classes

void CQuery_Search_Base::ResetDb(void)
{
    m_Db.erase();
}

void CQuery_Search_Base::ResetTerm(void)
{
    m_Term.erase();
}

void CQuery_Search_Base::ResetField(void)
{
    m_Field.erase();
    m_set_Field = false;
}

void CQuery_Search_Base::ResetFilters(void)
{
    m_Filters.clear();
}

void CQuery_Search_Base::Reset(void)
{
    ResetDb();
    ResetTerm();
    ResetField();
    ResetFilters();
    ResetCount();
    ResetFlags();
}

BEGIN_NAMED_BASE_CLASS_INFO("Query-Search", CQuery_Search)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("db", m_Db);
    ADD_NAMED_STD_MEMBER("term", m_Term);
    ADD_NAMED_STD_MEMBER("field", m_Field)->SetOptional(MEMBER_PTR(m_set_Field));
    ADD_NAMED_MEMBER("filters", m_Filters, STL_list_set, (STL_CRef, (CLASS, (CFilter_Value))))->SetOptional();
    ADD_NAMED_STD_MEMBER("count", m_Count);
    ADD_NAMED_STD_MEMBER("flags", m_Flags)->SetOptional(MEMBER_PTR(m_set_Flags));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CQuery_Search_Base::CQuery_Search_Base(void)
    : m_set_Field(false), m_set_Flags(false), m_Count(0), m_Flags(0)
{
}

// destructor
CQuery_Search_Base::~CQuery_Search_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Query_Select.hpp>

// generated classes

void CQuery_Select_Base::ResetDb(void)
{
    m_Db.erase();
}

void CQuery_Select_Base::ResetItems(void)
{
    m_Items.Reset();
}

void CQuery_Select_Base::Reset(void)
{
    ResetDb();
    ResetItems();
}

void CQuery_Select_Base::DoNotDeleteThisObject(void)
{
    CObject::DoNotDeleteThisObject();
    m_Items.DoNotDeleteThisObject();
}

BEGIN_NAMED_BASE_CLASS_INFO("Query-Select", CQuery_Select)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_STD_MEMBER("db", m_Db);
    ADD_NAMED_MEMBER("items", m_Items, CLASS, (CItem_Set));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CQuery_Select_Base::CQuery_Select_Base(void)
{
}

// destructor
CQuery_Select_Base::~CQuery_Select_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Time.hpp>
#include <Full_Time.hpp>

// generated classes

void CTime_Base::Reset(void)
{
    switch ( m_choice ) {
    case e_Full:
        m_object->RemoveReference();
        break;
    default:
        break;
    }
    m_choice = e_not_set;
}

void CTime_Base::DoSelect(E_Choice index)
{
    switch ( index ) {
    case e_Unix:
        m_Unix = 0;
        break;
    case e_Full:
        (m_object = new CFull_Time())->AddReference();
        break;
    default:
        break;
    }
    m_choice = index;
}

const char* const CTime_Base::sm_SelectionNames[] = {
    "not set",
    "unix",
    "full"
};

NCBI_NS_STD::string CTime_Base::SelectionName(E_Choice index)
{
    return NCBI_NS_NCBI::CInvalidChoiceSelection::GetName(index, sm_SelectionNames, sizeof(sm_SelectionNames)/sizeof(sm_SelectionNames[0]));
}

void CTime_Base::ThrowInvalidSelection(E_Choice index) const
{
    throw NCBI_NS_NCBI::CInvalidChoiceSelection(m_choice, index, sm_SelectionNames, sizeof(sm_SelectionNames)/sizeof(sm_SelectionNames[0]));
}

const CTime_Base::TFull& CTime_Base::GetFull(void) const
{
    CheckSelected(e_Full);
    return *static_cast<const TFull*>(m_object);
}

CTime_Base::TFull& CTime_Base::GetFull(void)
{
    CheckSelected(e_Full);
    return *static_cast<TFull*>(m_object);
}

CTime_Base::TFull& CTime_Base::SetFull(void)
{
    Select(e_Full, NCBI_NS_NCBI::eDoNotResetVariant);
    return *static_cast<TFull*>(m_object);
}

void CTime_Base::SetFull(const NCBI_NS_NCBI::CRef<TFull>& ref)
{
    TFull* ptr = const_cast<TFull*>(&*ref);
    if ( m_choice != e_Full || m_object != ptr ) {
        Reset();
        (m_object = ptr)->AddReference();
        m_choice = e_Full;
    }
}

// helper methods

// type info
BEGIN_NAMED_BASE_CHOICE_INFO("Time", CTime)
{
    SET_CHOICE_MODULE("NCBI-Env");
    ADD_NAMED_STD_CHOICE_VARIANT("unix", m_Unix);
    ADD_NAMED_REF_CHOICE_VARIANT("full", m_object, CFull_Time);
}
END_CHOICE_INFO

// constructor
CTime_Base::CTime_Base(void)
    : m_choice(e_not_set)
{
}

// destructor
CTime_Base::~CTime_Base(void)
{
    if ( m_choice != e_not_set )
        Reset();
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Web_Env.hpp>
#include <Argument.hpp>
#include <Db_Env.hpp>
#include <Query_History.hpp>

// generated classes

void CWeb_Env_Base::ResetArguments(void)
{
    m_Arguments.clear();
}

void CWeb_Env_Base::ResetDb_Env(void)
{
    m_Db_Env.clear();
}

void CWeb_Env_Base::ResetQueries(void)
{
    m_Queries.clear();
}

void CWeb_Env_Base::Reset(void)
{
    ResetArguments();
    ResetDb_Env();
    ResetQueries();
}

BEGIN_NAMED_BASE_CLASS_INFO("Web-Env", CWeb_Env)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_MEMBER("arguments", m_Arguments, STL_list_set, (STL_CRef, (CLASS, (CArgument))))->SetOptional();
    ADD_NAMED_MEMBER("db-Env", m_Db_Env, STL_list_set, (STL_CRef, (CLASS, (CDb_Env))))->SetOptional();
    ADD_NAMED_MEMBER("queries", m_Queries, STL_list, (STL_CRef, (CLASS, (CQuery_History))))->SetOptional();
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CWeb_Env_Base::CWeb_Env_Base(void)
{
}

// destructor
CWeb_Env_Base::~CWeb_Env_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Web_Saved.hpp>
#include <Named_Item_Set.hpp>
#include <Named_Query.hpp>

// generated classes

void CWeb_Saved_Base::ResetQueries(void)
{
    m_Queries.clear();
}

void CWeb_Saved_Base::ResetItem_Sets(void)
{
    m_Item_Sets.clear();
}

void CWeb_Saved_Base::Reset(void)
{
    ResetQueries();
    ResetItem_Sets();
}

BEGIN_NAMED_BASE_CLASS_INFO("Web-Saved", CWeb_Saved)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_MEMBER("queries", m_Queries, STL_list_set, (STL_CRef, (CLASS, (CNamed_Query))))->SetOptional();
    ADD_NAMED_MEMBER("item-Sets", m_Item_Sets, STL_list_set, (STL_CRef, (CLASS, (CNamed_Item_Set))))->SetOptional();
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CWeb_Saved_Base::CWeb_Saved_Base(void)
{
}

// destructor
CWeb_Saved_Base::~CWeb_Saved_Base(void)
{
}



/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code is generated by application DATATOOL
 *   using specifications from the ASN data definition file
 *   'twebenv.asn'.
 *
 * ATTENTION:
 *   Don't edit or check-in this file to the CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <serial/serialimpl.hpp>

// generated includes
#include <Web_Settings.hpp>
#include <Argument.hpp>
#include <Db_Env.hpp>

// generated classes

void CWeb_Settings_Base::ResetArguments(void)
{
    m_Arguments.clear();
}

void CWeb_Settings_Base::ResetDb_Env(void)
{
    m_Db_Env.clear();
}

void CWeb_Settings_Base::Reset(void)
{
    ResetArguments();
    ResetDb_Env();
}

BEGIN_NAMED_BASE_CLASS_INFO("Web-Settings", CWeb_Settings)
{
    SET_CLASS_MODULE("NCBI-Env");
    ADD_NAMED_MEMBER("arguments", m_Arguments, STL_list_set, (STL_CRef, (CLASS, (CArgument))))->SetOptional();
    ADD_NAMED_MEMBER("db-Env", m_Db_Env, STL_list_set, (STL_CRef, (CLASS, (CDb_Env))))->SetOptional();
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CWeb_Settings_Base::CWeb_Settings_Base(void)
{
}

// destructor
CWeb_Settings_Base::~CWeb_Settings_Base(void)
{
}



