; General purpose server parameters
[server]

; if not set, every queue section will create a queue along with
; queue class. If set, queue section is a full equivalent of qclass
; default - false (for compatibility with older set-ups where there
; were only queue_* sections)
no_default_queues=false

; TCP/IP port number server responds on
port=9101

; maximum number of simultaneous connections
max_connections=1000

; maximum number of processing threads
max_threads=25

; initial number of threads created for incoming requests
init_threads=10

; Server side logging (default false)
log=true

; if true (default) then each job in a batch submit is logged as if it were an individual submit
; The flag is taken into consideration only if log == true
log_batch_each_job=true

; If true then the notification thread will produce log records
; The default is false.
; The flag is taken into consideration only if log == true
log_notification_thread=false

; if true (default) then the cleaning thread will produce log records
; The flag is taken into consideration only if log == true
log_cleaning_thread=false

; if true (default) then the statistics thread will produce log records
; The flag is taken into consideration only if log == true
log_statistics_thread=true

; if true (default) then the execution watcher thread will produce log records
; The flag is taken into consideration only if log == true
log_execution_watcher_thread=false


; Use name instead of IP address in job id, false by default
;use_hostname=false

; Network inactivity timeout in seconds
network_timeout=180

; When true server recreates the [bdb].path directory and reinits the
; database, throwing old one away.
reinit=false

; List of network hosts allowed admin access to netschedule;
; default - any host is allowed.
;admin_host=localhost;service1

; Max number of jobs deleted in one garbage collector iteration.
; Default is 100. See also the 'purge_timeout' and 'scan_batch_size' parameters.
; It is recommended to have del_batch_size and purge_timeout in balance with
; the incoming number of jobs. Otherwise the actual deletion of records is
; delayed and unnecessery records in the DB may slowdown netschedule.
del_batch_size=100

; Max number of jobs tested for expiration in one garbage collector iteration.
; Default is 10000
; It is recommended that scan_batch_size > del_batch_size.
scan_batch_size=10000

; Interval between garbage collector runs
; Default: 0.1 sec
purge_timeout=0.1

; Affinity garbage collector parameters. See CXX-2838
affinity_high_mark_percentage=90
affinity_low_mark_percentage=50
affinity_high_removal=1000
affinity_low_removal=100
affinity_dirt_percentage=20

; Identifier of a netschedule server. Should be unique for certain process.
; No default. The value must be provided.
node_id=dev_4_10_0

; Max number of affinities which a client is allowed to report as preferred.
; Default: 10000
max_affinities=10000

; List of administrators
admin_client_name=netschedule_admin, netschedule_control


; Queues section creates static queues. It uses form
; queue_name=qclass_name
; where classes should be created by qclass_* or queue_* section
; If no_default_queues is not set and class is created by queue_*
; section, eponymous queue is created automatically and need not be
; mentioned here.
[queues]
sample=test


; BerkeleyDB related parameters
[bdb]

; Directory to keep the database. It is important that this
; directory resides on local drive (not NFS)
; This parameter is obligatory, server does not have a default for it
; and will not start without it.
;
; WARNING: the database directory sometimes can be recursively deleted
;          (when netscheduled started with -reinit).
;          DO NOT keep any of your files (besides the database) in it.
path=data.9101
transaction_log_path=./tlog

; how many queue databases to open on start. Berkeley DB has instability
; when you open/close databases during other database operation.
; We pre-allocate some amount of databases to open on start and re-use them
; for all actual queues. This parameter effectively sets the limit on the
; number of queues per server, but Berkeley DB limited in this anyway (safe
; number is no more than 50 queues).
max_queues=50

; amount of memory allocated by BerkeleyDB for the database cache
; Berkeley DB page cache) (More is better, see private_env though)
; Default is 0 - turning on BerkeleyDB default
mem_size=50M

; use private BerkeleyDB environment. If true, NS does not use shared memory,
; but BDB has strange memory allocation behavior, so do not use with mem_size
; larger than 10M. Default - false.
private_env=false

; Maximum number of mutexes.
mutex_max=300000

; maximum number of locks, lockers, and lock objects
; should be increased for bulk transactions (or large number of queues)
; Default is 0 - turning on BerkeleyDB default
max_locks=125000

; Default is 0 - turning on BerkeleyDB default
max_lockers=25000

; Default is 0 - turning on BerkeleyDB default
max_lockobjects=100000


; when non 0 transaction LOG will be placed to memory for better performance
; as a result transactions become non-durable and there is a risk of
; loosing the data if server fails
; (set to at least 100M if planned to have bulk transactions)
;
log_mem_size=0

; Checkpoint threshold in KB of data written
checkpoint_kb=5000

;  Checkpoint threshold in minutes since last checkpoint
checkpoint_min=5


; use syncronous or asyncronous writes (used with transactions)
sync_transactions=false

; Direct IO for database files
direct_db=false

; Direct IO for transaction logs
direct_log=true

[queue_TEST]

; job expiration timeout (seconds) for completed jobs
; Default is 3600 seconds
timeout=3600

; Interval between two notifications in seconds.
; float value with 0.1 sec precision.
; Default is 0.1 sec.
notif_hifreq_interval=0.1

; Period of time in seconds during which a notification is sent to a
; worker node since the moment when a pending job appeared for this client
; with high frequency. After this period of time the notifications are sent
; slower. See the 'notif_lofreq_mult' parameter.
; Default is 5 seconds
notif_hifreq_period=5

; The multiplier for notif_hifreq_interval which is used to send notifications
;  rarer to a worker node which did not come to NS in responce to the notifications.
; Default is 50 times
notif_lofreq_mult=50

; Job execution timeout (seconds). If job is not resolved in the specified
; amount of time (from the moment worker node receives it)
; job will be rescheduled for another round of execution.
; Default is 3600 seconds
run_timeout=1800

; Execution timeout precision (seconds). Server checks exipation
; every "run_timeout_precision" seconds. Lower value means job execution
; will be controlled with geater precision, at the expense of memory
; and CPU resources on the server side
; CANNOT be dynamically reconfigured
; Default is 3600 seconds
run_timeout_precision=30

; Number of retries after faiure before the job is finally marked as failed.
; If 0, job is not retried but declared as Failed.
failed_retries=3

; Time a job spends in blacklist for the node after failure or timeout
; Default - 0, means job is blacklisted forever.
blacklist_time=0

; How long dynamically created queue with this class will stay.
; Default (-1) is unlimited.
;empty_lifetime=-1

; Maximum size of input and output which can be directly stored in
; NetSchedule. If longer, application should use NetCache and store
; keys in NetSchedule. Defaults are 2048.
max_input_size=1M
max_output_size=1M

; Access control for the queue class

; For user migration purposes it is better to log access violations and allow
; service. To SECURE your queue set this to true. Default is false.
;deny_access_violations=false


; Queue version control list
; ";" separated list of programs allowed to connect to the queue to submit
; and execute jobs. Versions newer than specified are allowed to connect.
;
; Program name can contain version number like:
;    "Program 1.2.3"
;    "Program version 1.2.3"
;    "Program v. 1.2.3"
;
; default - any program is allowed.
;program=test 2.0.0; test 1.0.0; Cgi_Tunnel2Grid 1.0.0

; List of network hosts allowed to submit jobs
; default - any host is allowed.
;subm_host=xpubmed0; xpubmed1; xpubmed2;

; List of network hosts allowed to run worker nodes
; default - any host is allowed.
;wnode_host=service2; service3


; To avoid blocking the queue DB, the jobs are read into a memory buffer
; before dumping. The memory buffer size is to be given here. Default: 100.
; The value cannot be > than 10000.
dump_buffer_size=100


[Log]
PerfLogging = true
file=netscheduled.log


