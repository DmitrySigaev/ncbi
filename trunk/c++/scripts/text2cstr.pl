#! /usr/bin/perl
# $Id$
# Author: Robert G Smith

use Getopt::Std;

our($opt_h, $opt_s, $opt_l, $opt_v);
$All_Args = join(' ',@ARGV);

getopts('hsl:v:');

if ($opt_h) {
	print "usage: text2cstr.pl -s -l max-line-length -v variable-name filename(s)\n";
	print "    or text2cstr.pl -h   to get this message.\n";
	print "      -s    : strip all redundant white space.\n";
	print "      -l #  : the maximum length of the string literals generated.\n";
	print "      -v s  : the name of the variable to be initialized.\n";
	print "  All arguments are optional.\n";
	print "  Reads from stdin if no files specified.  Writes to stdout.\n";
	exit;
}

$max_line = 0;
$max_line = $opt_l if ($opt_l > 0);
$whole_line = '';

if ($opt_v) {
	print "const char * ${opt_v}[]";
}

print " = {\n";

while (<>) {
	# get rid of trailing new lines.
	chomp; 
	# strip redundant white space and new lines if so desired.
	if ($opt_s) {
		s/^\s+/ /;
		# s/\n//g;
	}
	
	# precede double-quotes and backslashes with a backslash.
	s/["\\]/\\$&/g;
	# change new lines into backslash n.
	# s/\n/\\n/g;
	
	if ($max_line <= 0) {
		# print the line.
		print "    \"$_\",\n";
	} else {
		if ((length ($whole_line) + length $_) > $max_line) {
			print "    \"$whole_line\",\n";
			$whole_line = '';
		}
		$whole_line .= $_;
	}
}
if (length $whole_line > 0) {
	print "    \"$whole_line\",\n";
}
print "    0 \n};\n";

print "/* \n";
print " * The preceding array initializer was generated by the script text2cstr.pl\n";
print " * with the following options:\n";
print " *   $All_Args\n";
print " */\n";
