# $Id$

# Master (top-level) makefile for all NCBI C++ projects
##################################################################

include ./Makefile.mk


#################################
#  Standard meta-makefile
#################################


MANDATORY_PROJ  = corelib util connect cgi html misc hello

OPTIONAL_PROJ   = @serial@ @bdb@ sqlite @dbapi@ @objects@ objmgr objtools \
   ctools @algo@ @app@ @internal@
X_OPTIONAL_PROJ =  serial bdb sqlite dbapi objects objmgr objtools ctools \
   algo app internal gui
EXPENDABLE_SUB_PROJ = @gui@ @check@

SUB_PROJ = $(MANDATORY_PROJ) $(OPTIONAL_PROJ)
include ./Makefile.meta

$(OPTIONAL_PROJ) util connect cgi html hello: corelib
hello: html cgi

objects: serial connect dbapi util

internal: $(MANDATORY_PROJ) $(OPTIONAL_PROJ)

#################################
#  Special rules
#################################


#
# Prepare for install:   get rid of everything not needed for the install
# and move aside internal libraries we plan to stop installing altogether
#

compress_tests:
	for f in $(bindir)/*; do \
	   case "`basename $$f`" in \
	      blast | blast2seq | datatool | gbench* | id1_fetch | idwwwget \
	        | lbsmc | one2all | testipub | test_mghbn ) ;; \
	      *test* | *demo* | *sample*) gzip -Nf $$f ;; \
	      *) test "$(DEBUG_SFX)" = "Release" || gzip -Nf $$f ;; \
	   esac; \
	done

apps_to_drop = $(top_srcdir)/scripts/internal/projects/apps_to_drop
libs_to_drop = $(top_srcdir)/scripts/internal/projects/libs_to_drop
dbindir = $(bindir)/.DEATH-ROW
dlibdir = $(libdir)/.DEATH-ROW
strip_for_install:
	test "$(COMPILER)-$(DEBUG_SFX)" = "workshop-Debug" || \
	  rm -rf $(MANDATORY_PROJ) $(X_OPTIONAL_PROJ) check $(POTENTIAL_SUB_PROJ) $(EXPENDABLE_SUB_PROJ) Makefile
	@test \! -f "$(apps_to_drop)" || \
	  while read app; do \
	    test -f "$(bindir)/$$app" || continue; \
	    mkdir -p $(dbindir) && \
	      echo mv .../bin/$$app .../bin/.DEATH-ROW && \
	      mv $(bindir)/$$app $(dbindir); \
	  done < "$(apps_to_drop)"
	@test \! -f "$(libs_to_drop)" || \
	  while read lib; do \
	    test -f "$(status_dir)/.$$lib.dep" || continue; \
	    mkdir -p $(dlibdir) && \
	      echo mv .../lib/lib$$lib.\* .../lib/.DEATH-ROW && \
	      mv $(libdir)/lib$$lib.* $(dlibdir); \
	    test -f "$(status_dir)/.$$lib-static.dep" || continue; \
	    mv $(libdir)/lib$$lib-static.* $(dlibdir); \
	  done < "$(libs_to_drop)"
