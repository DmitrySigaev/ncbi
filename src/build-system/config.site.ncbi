#!/bin/sh
# $Id$

# Note default paths to third-party libraries, whose location and even
# presence varies somewhat from platform to platform.

. `dirname $0`/../../scripts/common/common.sh
ncbi_platform=`COMMON_DetectPlatform`

case "$ncbi_platform" in
    *MAC )
        test() {
            case "$#:$1:$2" in
                2:-[dfx]:/* )
                    if builtin test "$1" "$2"; then
                        return 0
                    else
                        for x in /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/*.sdk"$2"; do
                            if builtin test "$1" "$x"; then
                                return 0
                            fi
                        done
                        return 1
                    fi
                    ;;
                * ) 
                    builtin test "$@"
                    ;;
            esac
        }
        ;;
esac

try_local() {
    # /sw (Mac)? /usr/sfw (Solaris)?
    for d in /usr /usr/local /usr/X11 /opt/X11 /usr/openwin; do
        test -d "$d"  ||  continue
        test -f "$d/include/avro"          &&  : ${AVRO_PATH=$d}
        test -f "$d/include/db.h"          &&  : ${BERKELEYDB_PATH=$d}
        test -d "$d/include/boost"         &&  : ${BOOST_PATH=$d}
        test -d "$d/include/cereal"        &&  : ${CEREAL_PATH=$d}
        test -d "$d/include/curl"          &&  : ${CURL_PATH=$d}
        test -f "$d/include/expat.h"       &&  : ${EXPAT_PATH=$d}
        test -f "$d/include/fastcgi.h"     &&  : ${FASTCGI_PATH=$d}
        test -d "$d/include/FTGL"          &&  : ${FTGL_PATH=$d}
        test -x "$d/bin/libgcrypt-config"  &&  : ${GCRYPT_PATH=$d}
        test -f "$d/include/gif_lib.h"     &&  : ${GIF_PATH=$d}
        test -f "$d/include/GL/glew.h"     &&  : ${GLEW_PATH=$d}
        test -d "$d/include/gmock"         &&  : ${GMOCK_PATH=$d}
        test -f "$d/include/gmp.h"         &&  : ${GMP_PATH=$d}
        test -x "$d/lib/pkgconfig/gnutls.pc"  &&  : ${GNUTLS_PATH=$d}
        test -f "$d/include/stdsoap2.h"    &&  : ${GSOAP_PATH=$d}
        test -f "$d/include/hdf5.h"        &&  : ${HDF5_PATH=$d}
        test -x "$d/bin/icu-config"        &&  : ${ICU_PATH=$d}
        test -f "$d/include/jpeglib.h"     &&  : ${JPEG_PATH=$d}
        test -x "$d/bin/krb5-config"       &&  : ${KRB5_PATH=$d}
        test -d "$d/include/libxslt"       &&  : ${LIBXML_PATH=$d}
        test -f "$d/include/lzo/lzo1.h"    &&  : ${LZO_PATH=$d}
        test -d "$d/include/mimetic"       &&  : ${MIMETIC_PATH=$d}
        test -d "$d/include/mongo"         &&  : ${MONGODB_PATH=$d}
        test -d "$d/include/muParser"      &&  : ${MUPARSER_PATH=$d}
        test -x "$d/bin/mysql-config"      &&  : ${MYSQL_PATH=$d}
        test -d "$d/include/nettle"        &&  : ${NETTLE_PATH=$d}
        test -d "$d/include/GL"            &&  : ${OPENGL_PATH=$d}
        test -d "$d/include/OB"            &&  : ${ORBACUS_PATH=$d}
        test -f "$d/include/png.h"         &&  : ${PNG_PATH=$d}
        test -x "$d/bin/sablot-config"     &&  : ${SABLOT_PATH=$d}
        test -f "$d/include/SgmlParser.h"  &&  : ${SP_PATH=$d}
        test -f "$d/include/sqlite3.h"     &&  : ${SQLITE3_PATH=$d}
        test -f "$d/include/tiff.h"        &&  : ${TIFF_PATH=$d}
        test -f "$d/include/gif_lib.h"     &&  : ${UNGIF_PATH=$d}
        test -f "$d/include/sra/sradb.h"   &&  : ${VDB_PATH=$d}
        test -x "$d/bin/wx-config"         &&  : ${WXWIDGETS_PATH=$d}
        test -d "$d/include/xalanc"        &&  : ${XALAN_PATH=$d}
        test -d "$d/include/xercesc"       &&  : ${XERCES_PATH=$d}
        test -d "$d/include/zorba"         &&  : ${ZORBA_PATH=$d}
    done
}

build_info=`dirname $0`/../../build_info
if [ -f "$build_info" -a -r "$build_info" ]; then
    while read name eq value; do
        [ "x$eq" = 'x=' ]  &&  eval bi_$name='$value'
    done < "$build_info"
    case "$bi_CODEBASE:$bi_PURPOSE:$bi_CUSTOM_NAME:$bi_VERSION" in
        # For trunk trial builds that run tests against Valgrind, use
        # the mainstream VDB/SRA installation on even-numbered days of
        # the month and the release candidate on odd-numbered days.
        TRUNK:TRIAL::* | TRUNK:VALGRIND:HighFreq:*-?[13579]\ * )
            case "$ncbi_platform" in Linux64 | *MAC ) : ${with_vdb=rc} ;; esac
            ;;
    esac
fi

if test "$ncbi_favor_std_packages" = yes; then
    try_local
fi

case "$ncbi_platform" in
    Linux64   ) ncbi_rpath_sed="s,$NCBI/\\(.*\\),/opt/ncbi/64/\\1:&," ;;
esac
if [ "x$with_vdb" != 'xrc' ]; then
    ncbi_rpath_sed="$ncbi_rpath_sed; s,\\(/vdb-versions\\)/\\([1-9][0-9]*\\)[^/]*/,\\1/cxx_toolkit/\\2/,"
fi
if [ -d /panfs/traces01.be-md.ncbi.nlm.nih.gov/trace_software ]; then
    ncbi_rpath_sed="$ncbi_rpath_sed; s,/net/.*/\\(trace_software.*\\),&:/panfs/traces01.be-md.ncbi.nlm.nih.gov/\\1,"
fi

case "$ncbi_platform" in
    FreeBSD*   ) : ${MAKE=/usr/local/bin/gmake}; export MAKE ;;
esac

case "$ncbi_platform" in
    Linux64    ) : ${AVRO_PATH=$NCBI/avro-cpp-1.7.7-ncbi1} ;;
esac

case "$ncbi_platform" in
    FreeBSD*   ) : ${BERKELEYDB_PATH=$NCBI/BerkeleyDB-4.6.21.1} ;;
    Linux*     ) : ${BERKELEYDB_PATH=$NCBI/BerkeleyDB-4.6.21.1} ;;
    *MAC       ) : ${BERKELEYDB_PATH=$NCBI/BerkeleyDB-4.5.20}   ;;
esac

case "$ncbi_platform" in
    FreeBSD64  ) : ${BOOST_PATH=$NCBI/boost-1.57.0-ncbi1} ;;
    Linux64    ) : ${BOOST_PATH=$NCBI/boost-1.57.0-ncbi1} ;;
    SunOS*     ) : ${BOOST_PATH=$NCBI/boost-1.45.0-ncbi2} ;;
    *          ) : ${BOOST_PATH=$NCBI/boost-1.53.0-ncbi1} ;;
esac

: ${CEREAL_PATH=$NCBI/cereal-1.1.0}

case "$ncbi_platform" in
    Linux64    ) : ${EXPAT_PATH=$NCBI/expat-1.95.8} ;;
esac

case "$ncbi_platform" in
    Linux*     ) : ${FASTCGI_PATH=$NCBI/fcgi-2.4.0}       ;;
    *MAC       ) : ${FASTCGI_PATH=$NCBI/fcgi-2.4.0}       ;;
esac

case "$ncbi_platform" in
    *MAC       ) : ${FREETYPE_PATH=/opt/X11} ;;
esac

: ${FTDS_PATH:="/netopt/Sybase/clients-mssql/current"}

case "$ncbi_platform" in
    FreeBSD64  ) : ${FTGL_PATH=$NCBI/ftgl-2.1.3-rc5-ncbi2} ;;
    *          ) : ${FTGL_PATH=$NCBI/ftgl-2.1.3-rc5}       ;;
esac

case "$ncbi_platform" in
    Linux*     ) : ${GCRYPT_PATH=$NCBI/libgcrypt-1.4.3} ;;
esac

: ${GLEW_PATH=$NCBI/glew-1.5.8}

case "$ncbi_platform" in
    Linux64    ) : ${GMOCK_PATH=$NCBI/gmock-1.7.0} ;;
esac

case "$ncbi_platform" in
    Linux64    ) : ${GMP_PATH=$NCBI/gmp-6.0.0a} ;;
esac

case "$ncbi_platform" in
    Linux64    ) : ${GNUTLS_PATH=$NCBI/gnutls-3.4.0} ;;
    *MAC       ) : ${GNUTLS_PATH=$NCBI/gnutls-3.4.0} ;;
esac

case "$ncbi_platform" in
    Linux64    ) : ${GSOAP_PATH=$NCBI/gsoap-2.8.15} ;;
esac

case "$ncbi_platform" in
    Linux*     ) : ${HDF5_PATH=$NCBI/hdf5-1.8.3} ;;
esac

case "$ncbi_platform" in
    *MAC       ) ;;
    Linux64    ) : ${ICU_PATH=$NCBI/icu-49.1.1} ;;
    *          ) : ${ICU_PATH=$NCBI/icu-3.2} ;;
esac

: ${LIBXML_PATH=$NCBI/libxml-2.7.8}

case "$ncbi_platform" in
    FreeBSD64* ) : ${LZO_PATH=$NCBI/lzo-2.09} ;;
    *          ) : ${LZO_PATH=$NCBI/lzo-2.05} ;;
esac

: ${MIMETIC_PATH=$NCBI/mimetic-0.9.7-ncbi2}

case "$ncbi_platform" in
    Linux64    ) : ${MONGODB_PATH=$NCBI/mongodb-1.0.5-ncbi3} ;;
esac

case "$ncbi_platform" in
    FreeBSD64* ) : ${MUPARSER_PATH=$NCBI/muParser-1.30-ncbi1} ;;
    *          ) : ${MUPARSER_PATH=$NCBI/muParser-1.30}       ;;
esac

case "$ncbi_platform" in
    *MAC       ) : ${mysql_config=/usr/bin/false} ;;
esac

# C Toolkit (path overridden in stable components to avoid version skew)
: ${NCBI_C_PATH=$NCBI}

case "$ncbi_platform" in
    Linux64    ) : ${NETTLE_PATH=$NCBI/nettle-3.1.1} ;;
esac

# : ${ODBC_PATH:="/opt/machine/merant"}

case "$ncbi_platform" in
    *MAC ) ;;
    * ) : ${OPENGL_PATH=$NCBI/Mesa-7.0.2-ncbi2} ;;
esac

case "$ncbi_platform" in
    Linux64    ) : ${ORBACUS_PATH=$NCBI/corba-4.2.0/GCC401-Release64MT}      ;;
esac

case "$ncbi_platform" in
    *MAC       ) : ${PCRE_PATH=/usr} ;;
esac

case "$ncbi_platform" in
    Linux*     ) : ${PERL=/usr/bin/perl5.16} ;;
    *          ) : ${PERL_PATH=/usr} ;;
esac

case "$ncbi_platform" in
    *MAC       ) : ${PNG_PATH=/opt/X11} ;;
esac

case "$ncbi_platform" in
    *MAC )
        : ${PYTHON_PATH=/usr}
        : ${PYTHON25=/usr/bin/python2.5}
        : ${PYTHON26=/usr/bin/python2.6}
        : ${PYTHON27=/usr/bin/python2.7}
        ;;
    Linux* )
        : ${PYTHON_PATH=/opt/python-2.7env}
        : ${PYTHON25=/opt/python-2.5.1/bin/python}
        : ${PYTHON26=/usr/bin/python2.6}
        : ${PYTHON27=/opt/python-2.7env/bin/python}
        ;;
esac

case "$ncbi_platform" in
    Linux64    ) : ${SABLOT_PATH=$NCBI/Sablot-1.0.2} ;;
    SunOSSparc ) : ${SABLOT_PATH=$NCBI/Sablot-1.0.2} ;;
esac

case "$ncbi_platform" in
    Linux*     ) : ${SGE_PATH=/netopt/uge} ;;
    SunOS*     ) : ${SGE_PATH=/netopt/sge} ;;
esac

case "$ncbi_platform" in
    FreeBSD64  ) : ${SQLITE3_PATH=$NCBI/sqlite-3.7.13-ncbi1}   ;;
    Linux64    ) : ${SQLITE3_PATH=$NCBI/sqlite-3.7.13-ncbi1}   ;;
    *          ) : ${SQLITE3_PATH=$NCBI/sqlite-3.6.14.2-ncbi1} ;;
esac

case "$ncbi_platform" in
    Linux64    ) : ${SYBASE_PATH=/opt/sybase/clients/15.7-64bit}         ;;
esac
net_sybase_root="/netopt/Sybase/clients"
local_sybase_root="/export/home/sybase/clients"

case "$ncbi_platform" in
    Linux64    ) : ${TCHECK_FALLBACK=/opt/intel/itt/bin/32e:/usr/local/intel/itt-3.1/tcheck/bin/32e} ;;
esac

case "$ncbi_platform" in
    Linux64 )
        vdb_base=/opt/ncbi/64/trace_software/vdb/vdb-versions
        if [ "x$with_vdb" = 'xrc' ]; then
            with_vdb=$vdb_base/cxx_toolkit/2
        else
            : ${VDB_PATH=$vdb_base/2.5.7}
        fi
        ;;
    *MAC )
        vdb_base=/net/snowman/vol/projects/trace_software/vdb/vdb-versions
        if [ "x$with_vdb" = 'xrc' ]; then
            with_vdb=$vdb_base/cxx_toolkit/2-rc
        else
            : ${VDB_PATH=$vdb_base/2.5.7}
        fi
        ;;
esac

: ${WXWIDGETS_PATH=$NCBI/wxWidgets-3.1.0-ncbi1} ;;

case "$ncbi_platform" in
    *MAC       ) ;;
    Linux64    ) : ${XALAN_PATH=$NCBI/xalan-1.11} ;;
    *          ) : ${XALAN_PATH=$NCBI/xalan-1.8.0-ncbi2}   ;;
esac

case "$ncbi_platform" in
    *MAC       ) ;;
    Linux64    ) : ${XERCES_PATH=$NCBI/xerces-3.1.2} ;;
    *          ) : ${XERCES_PATH=$NCBI/xerces-2.6.0} ;;
esac

# case "$ncbi_platform" in
#     Linux64    ) : ${ZORBA_PATH=$NCBI/zorba-2.2.0} ;;
# esac

try_local

case "$ncbi_platform" in
    *MAC ) unset -f test ;;
esac
