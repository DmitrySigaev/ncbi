#################################
# $Id$
# Author:  Denis Vakatov (vakatov@ncbi.nlm.nih.gov)
#################################
#
#  C/C++ compilation rules;  plus
#  auto-dependencies build rules for GNU make
#################################


###  C/C++ compilation
include $(builddir)/Makefile.rules

# Kludge: universal Mac builds must explicitly request the "10.4u" SDK
# on some systems (notably, remaining Power Macs); however, doing so
# on 10.5 can result in link errors. :-/  (Logic placed here to avoid
# breaking Sun make, at the expense of Darwin builds explicitly
# configured --without-autodep; at any rate, this issue should mainly
# affect out-of-tree builds, so that shouldn't matter in practice.)
ifneq (,$(filter -isysroot,$(CONF_CC)))
 ifeq (,$(filter 8.%,$(shell uname -r)))
  CONF_CC   := $(subst -isysroot /Developer/SDKs/MacOSX10.4u.sdk,,$(CONF_CC))
  CONF_CXX  := $(subst -isysroot /Developer/SDKs/MacOSX10.4u.sdk,,$(CONF_CXX))
  CONF_CPP  := $(subst -isysroot /Developer/SDKs/MacOSX10.4u.sdk,,$(CONF_CPP))
  CONF_CXXCPP:=$(subst -isysroot /Developer/SDKs/MacOSX10.4u.sdk,,$(CONF_CXXCPP))
 endif
endif

@GCCPCH@GCCPCH = 1

ifdef GCCPCH
 ifneq ($(findstring $(FAST_CXXFLAGS),$(CXXFLAGS)),)
  ifneq ($(FAST_CXXFLAGS),$(ORIG_CXXFLAGS))
   is_fast = 1
  endif
 endif
 ifneq ($(findstring $(CXXFLAGS_DLL),$(CXXFLAGS_ALL)),)
  ifdef is_fast
   PCHMODE = fastdll
  else
   PCHMODE = dll
  endif
 else
  ifdef is_fast
   PCHMODE = fast
  else
   PCHMODE = normal
  endif
 endif
 FIXPCH = -e 's%\$$(wildcard \$$(includedir)/ncbi_pch\.hpp)%& $$(pchdir)/$(PCHMODE)%g'
endif


### Dependencies (GNU make only)
DEPFLAGS_ALL = $(DEPFLAGS) $(LOCAL_CPPFLAGS) $(CPPFLAGS)
D_TAIL = $(DEPFLAGS_ALL) $< $(DEPFLAGS_POST) \
	 | sed -e '/^\#/b' -e 's%[^ :\\][^ :\\]*%$$(wildcard &)%g' \
	       -e 's%\$$(wildcard $*@obj_ext@) *:%$*@obj_ext@ $@ :%g' \
	       -e 's%$(incdir)%$$(incdir)%g' \
	       -e 's%$(includedir)%$$(includedir)%g' \
	       -e 's%$(includedir0)%$$(includedir0)%g' $(FIXPCH) > $@_ \
	  &&  test -s $@_  &&  mv -f $@_ $@
D_TAIL_PCH = -x c++-header -DNCBI_USE_PCH -DNCBI_PCH__HPP= \
	 $(DEPFLAGS_ALL) $< $(DEPFLAGS_POST) \
	 | sed -e '/^\#/b' -e 's%[^ :\\][^ :\\]*%$$(wildcard &)%g' \
	       -e 's%\$$(wildcard ncbi_pch_impl@obj_ext@) *:%$$(pchdir)/$(PCHMODE) $$(builddir)/corelib/ncbi_pch_impl.d.$(PCHMODE) :%g' \
	       -e 's%$(incdir)%$$(incdir)%g' \
	       -e 's%$(includedir)%$$(includedir)%g' \
	       -e 's%$(includedir0)%$$(includedir0)%g' > $@_ \
	  &&  test -s $@_  &&  mv -f $@_ $@

%.d: ./%.cpp
	@echo Updating dependency information for $<.
	@$(CXX_WRAPPER) $(CXX) $(D_TAIL)  ||  \
	    (echo "FAILED COMMAND: $(CXX_WRAPPER) $(CXX) $(DEPFLAGS_ALL)" \
                  "$< $(DEPFLAGS_POST) | sed ..."; exit 1)
%.d: $(srcdir)/%.cpp
	@echo Updating dependency information for $<.
	@$(CXX_WRAPPER) $(CXX) $(D_TAIL)  ||  \
	    (echo "FAILED COMMAND: $(CXX_WRAPPER) $(CXX) $(DEPFLAGS_ALL)" \
                  "$< $(DEPFLAGS_POST) | sed ..."; exit 1)
%.d: ./%.c
	@echo Updating dependency information for $<.
	@$(CC_WRAPPER) $(CC)   $(D_TAIL)  ||  \
	    (echo "FAILED COMMAND: $(CC_WRAPPER) $(CC) $(DEPFLAGS_ALL)" \
                  "$< $(DEPFLAGS_POST) | sed ..."; exit 1)
%.d: $(srcdir)/%.c
	@echo Updating dependency information for $<.
	@$(CC_WRAPPER) $(CC)   $(D_TAIL)  ||  \
	    (echo "FAILED COMMAND: $(CC_WRAPPER) $(CC) $(DEPFLAGS_ALL)" \
                  "$< $(DEPFLAGS_POST) | sed ..."; exit 1)
$(builddir)/corelib/ncbi_pch_impl.hpp.d.$(PCHMODE): $(pchsrc)
	$(CXX_WRAPPER) $(CXX) $(D_TAIL_PCH)

.d .o:
	@echo "*** $(TMPL): Illegal whitespace detected at the end of"
	@echo "*** your makefile's SRC setting; please remove it."
	@false


ifeq ($(MAKECMDGOALS),clean)
DONT_INCLUDE = 1
endif
ifeq ($(MAKECMDGOALS),purge)
DONT_INCLUDE = 1
endif
ifeq ($(MAKECMDGOALS),requirements)
DONT_INCLUDE = 1
endif
ifeq ($(MAKECMDGOALS),deactivate)
DONT_INCLUDE = 1
endif

ifndef DONT_INCLUDE
ifdef SOURCES
 -include $(SOURCES:=.d)
endif
ifdef GCCPCH
 include $(builddir)/corelib/ncbi_pch_impl.hpp.d.$(PCHMODE)
endif
endif
