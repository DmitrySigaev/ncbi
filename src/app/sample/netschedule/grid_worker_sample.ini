; Sample worker node parameters
[sample]
parameter=Sample Parameter
iterations=10000
sleep_sec=10

; General purpose worker node parameters
[server]

; Maximum number of jobs(threads) can be served simultaneously.
; This parameter defines job parallelism. For computationally intensive
; algorithms this value should not be more than number of CPUs
;
max_threads=4

; initial number of threads created for incoming jobs
;
init_threads=2

; TCP port for control messages (like shutdown, version)
; Worker node can be stopped remotely. It runs special control thread,
; accepts incoming administrative requests (from netschedule_control)
control_port=9300

; Server side logging. A worker node can ask its context if this flag is 
; set to true
log=true

; Log file size(in bytes). When the size of the log file has reached given
; size it will be rotated. Default is 1Mb
; log_file_size = 1000000


; Internal. 
; Delay in seconds node task dispatcher waits for free
; space in the job queue. Lower value usually gives better response
; to shutdown command (CPU traded off)
thread_pool_timeout=5

; Time worker node spends waiting for new jobs without connecting to
; the netschedule server queue. Server sends UPD requests to wake the 
; node up. Bigger values of this parameter reduces the netschedule server
; load in expense of job delivery latency (because of 
; potential loss of UDP packages)
;
job_wait_timeout=10

; The max total number of jobs after which the node will shutdown itself.
; Restarting the node periodically is useful due to accumulating heap 
; fragmentation possible leaks etc.
; default is 0 - means unlimited number of jobs.
; max_total_jobs = 100

; When true, server transforms into a daemon, detached from the 
; current program group (for UNIX only)
;daemon=true

; The list of worker nodes which this node will check before attempting 
; to retrieve a job from the NetSchedule queue. If at least one of these 
; worker nodes has an ideal thread, this node will not connect to the queue
; for a job. This node and all nodes from the given list must be connected 
; to the same NetSchedule service, the same queue and must run the same job. 
; If the list is empty (defult) then this node is a master.
;master_nodes = service3:9300, service2:9300

[gw_debug]
; Prefix for all debug files
run_name = debug_run

; Whether to gather requests or to execute them
;mode = gather

; Whether to gather requests or to execute them
; default is 1.
; Input  blobs will be dumped  to "<RUNNAME>.<pid>.[1..N].inp"
; Output blobs will be dumped  to "<RUNNAME>.<pid>.[1..N].out"
; Messages     will be dumped  to "<RUNNAME>.<pid>.[1..N].msg"
; Diagnostics  will be written to "<RUNNAME>.<pid>.log"
;gather_nrequests = 2

; Whether to gather requests or to execute them
;mode = execute

; Process requests from the following files
; [no default]
; Input  blobs will be read  from "<fileN>"
; Output blobs will be dumped  to "<fileN>__<pid>.execute.out"
; Messages     will be dumped  to "<fileN>__<pid>.execute.msg"
; Diagnostics  will be written to "<RUNNAME>__<pid>.execute.log"
;execute_requests = <file1> [<file2> ...]
 


; NetSchedule client configuration
; 
[netschedule_client]
; use LB (load balanced service) or pre-defined server (non LB configuration)
.include=connection_ns_lb
client_name=node_sample

; Name of the queue (DO NOT use default queue for your application)
queue_name=sample


; Network storage (NetCache) configuration
;
[netcache_client]
.include = connection_nc_lb
client_name = node_sample
cache_input = false
cache_output = false


[connection_ns_lb]
; LB service name
service=NS_test
; Time interval in seconds when client is automatically rebanaced
rebalance_time=10
; Number of requests before rebalancing
rebalance_requests=100
; Specifies a list of netschedule sevices available for this connection
; very useful for debugging
;sevices_list=localhost:9100,service1:9100


; NetSchedule connection parameter used when LB is not available
;
[connection_ns]
host=localhost
port=9100



[connection_nc_lb]
; LB service name
service=NC_test
; Time interval in seconds when client is automatically rebanaced
rebalance_time=10
; Number of requests before rebalancing
rebalance_requests=100
; I/O volume based rebalancing
rebalance_bytes=5000000

; NetCache connection parameter used when LB is not available
;
[connection_nc]
host=localhost
port=9000


