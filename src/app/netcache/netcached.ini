; General purpose server parameters
[server]

; port number server responds on
;port=9000

; maximum number of open connections to the server
;max_connections=100

; Maximum number of worker threads in the server.
; Be careful in raising this number. Internal NetCache structure suggests the
; optimal number of threads is 20. Raising this number above that can cause
; additional inter-thread contention that can cause server to work actually
; slower, not faster. Also each thread on Linux eats additional 8 Mb of memory
; for the stack. So raising allowed number of threads in the server can raise
; memory consumption significantly.
;max_threads=20

; Run in daemon mode on unix, i.e. finish started process instantly
; and run in background
;daemon=false

; when true, if database cannot be open (corrupted) server
; automatically drops the db directory
; and creates the database from scratch
; (the content is going to be lost)
; Directory reinitialization can be forced by "netcached -reinit"
; or reinit parameter (see above).
;drop_db=true

; Logging of starting and ending points of every request (request-start and
; request-stop entries in the log). Possible values:
;   all - log all incoming requests
;   not_hasb - log all requests except HASB ones (check if blob exists)
;   no - do not log any requests
;log_requests=all

; Network inactivity timeout in seconds
;network_timeout=10

; Maximum execution time for each request in seconds
;request_timeout=600

; Use name instead of IP address in keys
;use_hostname=false

; Maximum amount of the memory NetCache uses for all its data.
; At least half of this amount NetCache will use for database cache. If the
; number given is too low for all data NetCache will use as much as necessary
; but least possible ensuring that at least half of this figure is used for
; database cache at all times.
; NB: Memory counted towards this limit doesn't include thread stacks memory
; (160 Mb with default parameter values), size of executable and probably other
; types of memory not allocated directly inside application.
;memory_limit=1Gb

; Amount of memory considered to be dangerous.
; There's a possibility that memory consumption in NetCache will raise
; significantly if it's under very heavy load. It's almost impossible to reach
; such state and this state is allowed as a trade-off for writing speed. But
; if memory consumption will raise above this alert level NetCache will start
; to work slower releasing some of allocated memory. So this alert level is
; almost a hard memory limit
; NB: Memory counted towards this alert level doesn't include thread stacks memory
; (160 Mb with default parameter values), size of executable and probably other
; types of memory not allocated directly inside application.
; NB: This value should be at least twice as big as memory_limit.
;memory_alert=4Gb

; Name of client to be used for execution of all administrative commands (like
; database re-initialization, server re-configuration, shutdown etc).
; If an attempt will be made to execute these commands with any other client
; name an error will be the result.
;admin_client_name=netcache_control

; DB related parameters for main cache
[nccache]

; directory to keep the database. It is important that this
; directory resides on local drive (not NFS)
path=e:/netcached_data

; cache name
name=nccache

; Open database in read-only mode
;read_only=false

; Default BLOB expiration timeout in seconds
;timeout=3600

; Maximum BLOB expiration timeout that can be set individually for each BLOB.
; If value is less than timeout (see above) then it's set to value of timeout.
;max_timeout=0

; Policy for enforcing timeout value. Several space-separated values can be set
; from the following:
; onread - update BLOB time stamp on every read
;          (otherwise only creation time will taken into account)
timestamp=onread

; Delay (seconds) between purge(garbage collector) runs.
;purge_thread_delay=30

; maintanance thread sleeps for specified number of milliseconds after
; each batch. By changing this parameter you can adjust the purge
; thread priority
;purge_batch_sleep=0

; maintanance thread processes database records by chunks of specified
; number. If you increase this number it also increases the performance
; of purge process.
;purge_batch_size=500

; Period of switching current database files to make old ones expire naturally.
; The less this period the more files will persist in database directory. The
; more this period the more excessive (not actually used) disk space database
; will consume. If value is 0 (default value) then it will be equal to 0.1 of
; default blob expiration timeout (see above).
;db_rotate_period=0

; Number of voolumes in each database part. The more the number of volumes
; the more parallelism can be achieved on the server side although with trade-off
; of more memory consumed (or to be more precise, less memory spent for database
; cache).
;rr_volumes=4

; Maximum allowed BLOB size (for a single BLOB). 0 - no restriction
;max_blob_size=0

; Drop the database completely if previous run of NetCache was not stopped
; properly and thus database can be in some dirty state.
;drop_if_dirty=false


; DB related parameters for particular cache of ICache.
; All parameters description see above.
[icache_blobs]
name=blobs
path=e:/netcached_data
;timeout=3600
timestamp=

[icache_ids]
name=ids
path=e:/netcached_data
;timeout=3600
timestamp=
