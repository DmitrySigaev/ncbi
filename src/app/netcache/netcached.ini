; General purpose server parameters
[server]

; port number server responds on
;port=9000

; maximum number of open connections to the server
;max_connections=100

; maximum number of clients(threads) can be served simultaneously
;max_threads=25

; initial number of threads created for incoming requests.
; Default value is 10.
init_threads=5

; Run in daemon mode on unix, i.e. finish started process instantly
; and run in background
;daemon=false

; Drop old database and reinitialize it on starting.
; Equivalent to -reinit command line switch.
;reinit=false

; when true, if database cannot be open (corrupted) server
; automatically drops the db directory
; and creates the database from scratch
; (the content is going to be lost)
; Directory reinitialization can be forced by "netcached -reinit"
; or reinit parameter (see above).
;drop_db=true

; Server side logging
;log=false

; Threshold for event time to log
;log_threshold=1.0

; Logging of starting and ending points of every request (request-start and
; request-stop entries in the log). Possible values:
;   all - log all incoming requests
;   not_hasb - log all requests except HASB ones (check if blob exists)
;   no - do not log any requests
;log_requests=all

; Network inactivity timeout in seconds
;network_timeout=10

; Use name instead of IP address in keys
;use_hostname=false

; Size of connection handler buffer
;buf_size=65536


; Switch for session management API
; when turned on if the last customer disconnects server shutdowns
; after waiting for "session_shutdown_timeout"
;session_mng=false

; application shuts itself down if no new sessions arrive in the
; specified time (in seconds)
;session_shutdown_timeout=60


; BerkeleyDB related parameters for NetCache
[bdb]

; directory to keep the database. It is important that this
; directory resides on local drive (not NFS)
;
; WARNING: the database directory sometimes can be recursively deleted
;          (when netcached started with -reinit).
;          DO NOT keep any of your files(besides the database) in it.
path=e:/netcached_data

; Path to transaction log storage. By default transaction logs are stored
; at the same location as main database, but to improve performance it's
; best to put it to a dedicated fast hard drive (split I/O load)
;
transaction_log_path=

; cache name
name=nccache

; Mode to protect cache instance. Possible values:
;   no_lock  - Do not lock-protect cache instance
;   pid_lock - Create PID lock on cache
;lock=no_lock

; use synchronous or asynchronous writes (used with transactions)
;write_sync=false

; Direct IO for database files
;direct_db=false

; Direct IO for transaction logs
;direct_log=false

; when 'true' the database is transaction protected
;use_transactions=true

; Open database in read-only mode
;read_only=false

; Default BLOB expiration timeout in seconds
;timeout=3600

; Maximum BLOB expiration timeout that can be set individually for each BLOB.
; If value is less than timeout (see above) then it's set to value of timeout.
;max_timeout=0

; Policy for enforcing timeout value. Several space-separated values can be set
; from the following:
; onread - update BLOB time stamp on every read
;          (otherwise only creation time will taken into account)
; subkey - timestamp full key-subkey pair. By default only key is taken
;          into account
; expire_not_used - Expire objects older than a certain time frame
; purge_on_startup - delete all deprecated BLOBs when starting netcached
;                     (may significantly slow down startup process)
; check_expiration - check if BLOB has expired (on read) and if it is
;                    return "not found". Otherwise BLOB lives until
;                    it is deleted by the internal garbage collector
timestamp=onread
;    purge_on_startup check_expiration

; do not change this
keep_versions=all

; Run background cleaning thread
; (Pretty much mandatory parameter, turn it off only if you want
;  to keep absolutely everything in the database)
purge_thread=true

; Delay (seconds) between purge(garbage collector) runs.
;purge_thread_delay=30


; maintanance thread sleeps for specified number of milliseconds after
; each batch. By changing this parameter you can adjust the purge
; thread priority
purge_batch_sleep=100

; maintanance thread processes database records by chunks of specified
; number. If you increase this number it also increases the performance
; of purge process (at the expense of the online connections)
;purge_batch_size=70


; amount of memory allocated by BerkeleyDB for the database cache
; Berkeley DB page cache (More is better)
mem_size=50M

; when non 0 transaction LOG will be placed to memory for better performance
; as a result transactions become non-durable and there is a risk of
; losing the data if server fails
; (set to at least 100M if planned to have bulk transactions)
;log_mem_size=0

; Maximum size of the transaction log file
;log_file_max=200M

; Percent of pages NC tries to keep available for read
; 0 - means no background dirty page write
memp_trickle=10

; Number of times Berkeley DB mutex spins befor sleeping
; for some reason values beyond 75 somehow disable memp_trickle
;tas_spins=200

; Specifies how often cache should remove the Berkeley DB LOG files
; Removal is triggered by the purge thread. Value of 2 means LOG is
; cleaned every second purge
purge_clean_log=2

; Call transaction checkpoint every "checkpoint_bytes" of stored data
checkpoint_bytes=10M

; Call transaction checkpoint every "checkpoint_delay" seconds
;checkpoint_delay=15

; Limit on size of BLOBs to store in database. Bigger BLOBs are stored in
; separate files. Default value is 512k.
overflow_limit=10M

; This parameter regulates BLOB expiration. If client constantly reads
; the BLOB and you do not want it to be stuck in the database forever
; (timestamp=onread), set this parameter.
; If timeout is 3600 and ttl_prolong is 2, maximum possible timeout for
; the BLOB becomes 3600 * 2 = 7200 seconds.
ttl_prolong=3

; Maximum allowed BLOB size (for a single BLOB). 0 - no restriction
;max_blob_size=0

; Number of round robin volumes. 0 - no rotation
; Cache opens approx 7 files per RR volume.
;rr_volumes=3

; Drop the database completely if previous run of NetCache was not stopped
; properly and thus database can be in some dirty state.
;drop_if_dirty=false


; BerkeleyDB related parameters for particular cache of ICache.
; All parameter's description see above.
[icache_blob]
name=blob
path=e:/netcached_data
write_sync=false
use_transactions=true
timeout=3600
timestamp=subkey onread check_expiration
keep_versions=all
purge_thread=true
purge_thread_delay=30
purge_batch_sleep=80
purge_batch_size=70
mem_size=0
purge_clean_log=10
checkpoint_bytes=10M
overflow_limit=10M
ttl_prolong=3





