#################################
# $Id$
# Author:  Denis Vakatov (vakatov@ncbi.nlm.nih.gov)
#################################
# This can be used to build/install/clean
# a single(sic!) library [LIB] made of object files [SRC] and [OBJ]
# where [SRC].o will be automagically compiled from [SRC].cpp or
# [SRC].c, and [OBJ].o must be already compiled by this time.
#
# srcdir = @srcdir@
# include @builddir@/Makefile.mk
#
# LIB = p1
# SRC = p1_src1 p1_src2
# OBJ = p1_myobj
# .....
# CXXFLAGS = -g $(ORIG_CXXFLAGS) -D_DEBUG -DXYZ_P1_PROJECT
# .....
# include @builddir@/Makefile.lib
#################################

default_rule: all


### C/C++ source file compilation (and maybe auto-dependencies) build rules

CXXFLAGS_ALL = @f_compile@ $(CXXFLAGS) $(LOCAL_CPPFLAGS) $(CPPFLAGS)
CFLAGS_ALL   = @f_compile@ $(CFLAGS)   $(LOCAL_CPPFLAGS) $(CPPFLAGS)
SOURCES      = @UNIX_SRC@ $(LIBOBJ) $(SRC)
include $(builddir)/Makefile.$(Rules)


### The library build rule

XLIBOBJ     = $(SOURCES:=@obj_ext@)
XOBJ        = $(OBJ:=@obj_ext@)
XLIB        = $(LIB:%=@lib_pre@%@lib_ext@)
XLIBDEP     = .$(LIB).dep
XLIBLINK    = @lib_pre@$(LIB)-static@lib_ext@
XLIBDEPLINK = .$(LIB)-static.dep

$(XLIB): $(XLIBOBJ)
	-$(RM) $(XLIB)
	$(AR) @f_outlib@$(XLIB) `@LORDER@ $(XLIBOBJ) $(XOBJ) | @TSORT@` $(AR_FILTER)
	@$(RANLIB) $(XLIB)
	@echo $(srcdir) `pwd` $(TMPL) > $(XLIBDEP)
	@$(TOUCH) -r $(XLIB) $(XLIBDEP)
	@if [ '$(BINCOPY)' != '@:' -a -d $(libdir) -a -w $(libdir) -a $(srcdir) != . ]; then \
	    echo $(BINCOPY) $(XLIB) $(libdir) && \
	    $(BINCOPY) $(XLIB) $(libdir) && \
	    cd $(libdir) && $(RM) $(XLIBLINK) && $(LN_S) $(XLIB) $(XLIBLINK); \
	fi
	@if [ '$(BINCOPY)' != '@:' -a -d $(status_dir) -a -w $(status_dir) -a $(srcdir) != . ]; then \
	    $(BINCOPY) $(XLIBDEP) $(status_dir) && \
	    $(BINTOUCH) -r $(libdir)/$(XLIB) $(status_dir)/$(XLIBDEP) && \
	    cd $(status_dir) && \
	    $(RM) $(XLIBDEPLINK) && \
	    $(LN_S) $(XLIBDEP) $(XLIBDEPLINK); \
	fi

### Standard targets

all: $(XLIB) export-headers

clean:
	-$(RMDIR) SunWS_cache
	-$(RMDIR) ii_files
	-$(RMDIR) ti_files
	-$(RM) .make.state
	-$(RM) $(XLIBOBJ)
	-$(RM) $(XLIB) $(XLIBDEP)
	-$(RM) $(SOURCES:=.d)
	-$(RM) ir.out

purge: clean purge-headers
	-$(RM) $(libdir)/$(XLIB) $(status_dir)/$(XLIBDEP) \
	    $(libdir)/$(XLIBLINK) $(status_dir)/$(XLIBDEPLINK)
