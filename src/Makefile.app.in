#################################
# $Id$
# Author:  Denis Vakatov (vakatov@ncbi.nlm.nih.gov)
#################################
# This can be used to build/install/clean
# a single(sic!) application [APP] using [OBJ, LIB]
#
# srcdir = @srcdir@
# include @builddir@/Makefile.mk
#
# APP = my_app
# SRC = my_main my_obj1 my_obj2
# LIB = foo bar
# .....
# CXXFLAGS = -g $(ORIG_CXXFLAGS) -D_DEBUG -DXYZ_MY_APP
# .....
# include @builddir@/Makefile.app
#################################

default_rule: all


### C/C++ source file compilation (and maybe auto-dependencies) build rules

CXXFLAGS_ALL = @f_compile@ $(CXXFLAGS) $(LOCAL_CPPFLAGS) $(CPPFLAGS)
CFLAGS_ALL   = @f_compile@ $(CFLAGS) $(LOCAL_CPPFLAGS) $(CPPFLAGS)
SOURCES      = @UNIX_SRC@ $(SRC)
include $(builddir)/Makefile.$(Rules)


### Standard application build rules

XAPP = $(APP)@exe_ext@
XOBJ = $(SOURCES:=@obj_ext@)
XOBJ2 = $(OBJ:=@obj_ext@)
XLIB = $(runpath) @f_libpath@$(libdir) $(LIB:%=@lib_l_pre@%@lib_l_ext@)
XLIBDEP = $(LIB:%=$(status_dir)/.%.dep)

ASK_REBUILD = \
    base=`echo $$l | sed -e 's,.*/\.\([^.]*\)\.dep$$,\1,'`; \
    if (cd "$$builddir" && $(MAKE) $(MFLAGS) -q \
        -f "$(builddir)/Makefile.lib.tmpl" \
        srcdir="$$srcdir" TMPL="$$tmpl" all) ; then \
        true ; \
    else \
        echo "Rebuild $$tmpl (lib$$base.*) for $(XAPP)?" ; \
        read result ; \
        expr "$$result" : "^[Nn]" > /dev/null ; \
    fi

SKIP_REBUILD = true
@IF_REBUILDING_LIBS@ SKIP_REBUILD = false
@IF_REBUILDING_CONDITIONALLY@ SKIP_REBUILD = ($(ASK_REBUILD))

$(XAPP):: $(XOBJ) $(XLIBDEP)
	@for l in $(XLIBDEP) /dev/null ; do \
	   test "$$l" = "/dev/null"  &&  break ; \
	   read srcdir builddir tmpl < "$$l" ; \
	   test -z "$$builddir" || $(SKIP_REBUILD) || \
	   (cd "$$builddir" && $(MAKE) $(MFLAGS) libs srcdir="$$srcdir") ; \
	done
	$(LINK) $(LDFLAGS) $(XOBJ) $(XOBJ2) $(PRE_LIBS) $(XLIB) $(LIBS) @f_outexe@$(XAPP)
	$(POST_LINK) $(XAPP)
	@$(STRIP) $(XAPP)
	$(BINCOPY) $(XAPP) $(bindir)/$(XAPP)


### Temporary measure to smooth .*.dep move
$(status_dir)/.%.dep: $(libdir)/.%.dep
	@mv $< $@


### Standard targets(non-recursive)

all: $(XAPP)

clean:
	-$(RMDIR) SunWS_cache
	-$(RMDIR) ii_files
	-$(RMDIR) ti_files
	-$(RM) .make.state
	-$(RM) $(XOBJ)
	-$(RM) $(XAPP)
	-$(RM) $(SOURCES:=.d)
	-$(RM) core

purge: clean
	-$(RM) $(bindir)/$(XAPP)
