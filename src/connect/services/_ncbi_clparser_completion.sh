# $Id$
#
# Implementation of a bash completion function for the command
# line interfaces based on the ncbi::CCommandLineParser class.
#
# And since the format of parameter descriptions generated by
# ncbi::CCommandLineParser is almost identical to the format used
# by the Subversion command line client (svn), this completion
# function can be used for svn just as well.
#
# To enable this completion function for 'grid_cli' and 'svn',
# add the following lines to ~/.bash_profile:
#
# compfile=/am/ncbiapdata/bin/_ncbi_clparser_completion.sh
# if test -f "$compfile"; then
#     source "$compfile"
#     complete -F _ncbi_clparser_completion grid_cli
#     complete -F _ncbi_clparser_completion svn
# fi
#
# Author: Dmitry Kazimirov <kazimird@ncbi.nlm.nih.gov>

_ncbi_clparser_completion()
{
    COMPREPLY=()
    local program="${COMP_WORDS[0]}"
    which "$program" > /dev/null 2>&1 || return
    local word cmd
    for word in "${COMP_WORDS[@]:1}"; do
        [[ "$word" != -* ]] && cmd="$word" && break
    done
    word="${COMP_LINE::COMP_POINT}"
    word="${word##* }"
    if [[ $word == $cmd || $cmd == 'help' ]]; then
        COMPREPLY=($("$program" help 2> /dev/null | perl -wne \
            "if (!\$parse) {\$parse = m/commands:/o; next}
            if (@cmd = m/^\s{2,4}([a-z]\\S+)(?: \\(([^)]+)\\))?/o) {
                print map {\$_ . ' '} grep {length() > 2 && m/^$word/}
                    \$cmd[0], split(m/[ ,]+/, \$cmd[1] || '')
            }"))
    elif [[ -z $word || $word == -* ]]; then
        [[ -z $cmd ]] && cmd="${COMP_LINE:COMP_POINT}" && cmd="${cmd%% *}"
        COMPREPLY=($("$program" help "$cmd" 2> /dev/null | perl -wne \
            "if (!\$parse) {\$parse = m/options:/o; next}
            if (@opt = m/^\s{2,4}(-\\S+) (?:\\[([^\\]]+)\\] )?(ARG)?/io) {
                \$eq = \$opt[2] ? '= ' : ' ';
                print map {\$_ . \$eq} grep {length() > 4 && m/^$word/}
                    \$opt[0], split(m/[ ,]+/, \$opt[1] || '')
            }"));
    fi
}
