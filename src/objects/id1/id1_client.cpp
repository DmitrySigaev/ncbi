/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  Aaron Ucko, NCBI
 *
 * File Description:
 *   ID1 network client
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using specifications from the data definition file
 *   'id1.asn'.
 */

// standard includes

// generated includes
#include <objects/id1/id1_client.hpp>
#include <objects/seqset/Seq_entry.hpp>
#include <serial/exception.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

CRef<CSeq_entry> CID1Client::AskGetsefromgi(const CID1server_maxcomplex& req,
                                            CID1Client::TReply* reply)
{
    TReply reply0;
    if ( !reply ) {
        reply = &reply0;
    }
    try {
        return Tparent::AskGetsefromgi(req, reply);
    } catch (CInvalidChoiceSelection&) {
        if (m_AllowDeadEntries  &&  reply->IsGotdeadseqentry()) {
            return CRef<CSeq_entry>(&reply->SetGotdeadseqentry());
        } else {
            throw;
        }
    }
}


// destructor
CID1Client::~CID1Client(void)
{
}

END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


/*
* ===========================================================================
*
* $Log$
* Revision 1.1  2003/04/09 16:00:14  ucko
* Give all RPC clients unique basenames.
*
* Revision 1.1  2002/11/13 20:13:44  ucko
* Add datatool-generated client classes
*
*
* ===========================================================================
*/
/* Original file checksum: lines: 64, chars: 1872, CRC32: cedfdc3e */
