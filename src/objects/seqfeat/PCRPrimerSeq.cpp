/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using the following specifications:
 *   'seqfeat.asn'.
 */

// standard includes
#include <ncbi_pch.hpp>

// generated includes
#include <objects/seqfeat/PCRPrimerSeq.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

// Erases spaces which are not inside angle brackets ("<" to ">").
// returns true if there was a change
static
void s_EraseSpacesOutsideBrackets( string &str )
{
    string result;
    result.reserve( str.length() );

    bool in_brackets = false;
    string::iterator ch_iter = str.begin();
    while (ch_iter != str.end()) {
        const char ch = *ch_iter;
        switch( ch ) {
            case '<':
                in_brackets = true;
                result += ch;
                break;
            case '>':
                in_brackets = false;
                result += ch;
                break;
            case ' ':
                if( in_brackets ) {
                    result += ch;
                }
                break;
            default:
                result += ch;
                break;
        }
        ch_iter++;
    }

    // swap is faster than assignment
    result.swap( str );
}


void CPCRPrimerSeq::Clean(string& seq)
{
    // first, set sequence to lowercase
    NStr::ToLower(seq);

    // remove any spaces in sequence outside of <modified base>
    s_EraseSpacesOutsideBrackets(seq);

    // upper case modified base <OTHER>
    NStr::ReplaceInPlace(seq, "<other>", "<OTHER>");

}


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

/* Original file checksum: lines: 52, chars: 1683, CRC32: dd02975f */
