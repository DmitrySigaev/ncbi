#############################################################################
#  $RCSfile$  $Revision$  $Date$
# ==========================================================================
#
#                            PUBLIC DOMAIN NOTICE
#               National Center for Biotechnology Information
#
#  This software/database is a "United States Government Work" under the
#  terms of the United States Copyright Act.  It was written as part of
#  the author's official duties as a United States Government employee and
#  thus cannot be copyrighted.  This software/database is freely available
#  to the public for use. The National Library of Medicine and the U.S.
#  Government have not placed any restriction on its use or reproduction.
#
#  Although all reasonable efforts have been taken to ensure the accuracy
#  and reliability of the software and data, the NLM and the U.S.
#  Government do not and cannot warrant the performance or results that
#  may be obtained by using this software or data. The NLM and the U.S.
#  Government disclaim all warranties, express or implied, including
#  warranties of performance, merchantability or fitness for any particular
#  purpose.
#
#  Please cite the author in any work or product based on this material.
#
# ==========================================================================
#
# Author:  Denis Vakatov
#
# File Description:
#   Generate platform-dependent header("config.h") for NCBI C++ libs
#   USAGE:
#    1) Process this file with "autoconf" to produce a "configure" script.
#    2) Run the resultant "configure" script to produce
#      a) "ncbiconf.h"
#      a) "Makefile"s
#    NOTE:  "--exec_prefix" flag must be specified by the user!
#
#############################################################################


AC_INIT(include/corelib/ncbitype.h)
AC_CONFIG_HEADER(config.h:config.h.in)


#############################################################################


#### Check if "${exec_prefix}" dir is defined
if test -z "${exec_prefix}"  ||  test "${exec_prefix}" = "NONE" ; then
   exec_prefix="${srcdir}/exec"
fi

#### Check if there is "${exec_prefix}" dir
if test ! -d "${exec_prefix}" ; then
   mkdir -p "${exec_prefix}"
fi

#### Make "exec_prefix" absolute
case "${exec_prefix}" in
   /* ) ;;
   . )
      CDPATH=
      if test "${PWD}" != "" && test "`(cd ${PWD} ; sh -c pwd)`" = "`pwd`"  ;
      then
         exec_prefix="$PWD"
      else
         exec_prefix="`(cd ${exec_prefix}; pwd)`"
      fi
   ;;
   *  ) exec_prefix="`(cd ${exec_prefix}; pwd)`" ;;
esac

#### Make "srcdir" absolute
case "${srcdir}" in
   /* ) ;;
   . )
      CDPATH=
      if test "${PWD}" != "" && test "`(cd ${PWD} ; sh -c pwd)`" = "`pwd`"  ;
      then
        srcdir="$PWD"
      else
        srcdir="`(cd ${srcdir}; pwd)`"
      fi
   ;;
   *  ) srcdir="`(cd ${srcdir}; pwd)`" ;;
esac

#### Specify(derive) $includedir, $incdir, $libdir, $bindir and $builddir
includedir="$srcdir/include"
incdir="$exec_prefix/inc"
libdir="$exec_prefix/lib"
bindir="$exec_prefix/bin"
if test "$exec_prefix" = "$srcdir" ; then
   builddir="$srcdir/src"
else
   builddir="$exec_prefix/build"
fi


#### Check if the source directory already has a configured system in it.
if test -f "${srcdir}/config.h" ; then
   AC_MSG_ERROR([There is already a built "${srcdir}/config.h"!])
fi

AC_CANONICAL_HOST
AC_DEFINE_UNQUOTED(HOST,        "$host")
AC_DEFINE_UNQUOTED(HOST_CPU,    "$host_cpu")
AC_DEFINE_UNQUOTED(HOST_VENDOR, "$host_vendor")
AC_DEFINE_UNQUOTED(HOST_OS,     "$host_os")

AC_LANG_CPLUSPLUS
AC_PROG_CXX

# Use the right command shell
cmd_shell="SHELL=/bin/sh"

### Turn on compilation warnings and some compiler-specific flags and features
obj_ext=".o"
lib_pre="lib"
lib_l_pre="-l"
lib_ext=".a"
lib_l_ext=""
exe_ext=""
f_compile="-c "
f_outobj="-o "
f_libpath="-L"
f_outexe="-o "
use_shell="SHELL=/bin/sh"

changequote(, )dnl
if test "$GCC" = "yes" ; then
   # GNU compiler
   CFLAGS="-Wall -ansi $CFLAGS"
   CXXFLAGS="-Wall -ansi $CXXFLAGS"
elif test "$CXX" = "cl -TP"  ||  test "$CXX" = "cl.exe -TP" ; then
   # MSVC++ compiler
   CFLAGS="-W4 $CFLAGS"
   CXXFLAGS="-W4 $CXXFLAGS"
   CPPFLAGS="/nologo $CPPFLAGS"

   cmd_shell=""
   obj_ext=".obj"
   lib_ext=".lib"
   lib_l_ext=".lib"
   lib_pre=""
   lib_l_pre=""
   exe_ext=".exe"
   f_compile="/c "
   f_outobj="/Fo"
   f_libpath="/LIBPATH:"
   f_outexe="/OUT:"
fi
changequote([, ])dnl


### ------------------------------------------------------------------
### ------------------------------------------------------------------

dnl Check for header files.
dnl ---------------------------------
AC_CHECK_HEADERS(iostream  iostream.h)
AC_CHECK_HEADERS(fstream   fstream.h)
AC_CHECK_HEADERS(strstream strstream.h strstrea.h)
AC_CHECK_HEADERS(string)
AC_CHECK_HEADERS(unistd.h windows.h)


dnl Check for typedefs, structures, and compiler characteristics.
dnl --------------------------------------------------------------
AC_CXX_CONST
AC_TYPE_SIZE_T

AC_MSG_CHECKING(if C++ namespaces are supported)
AC_TRY_COMPILE(
   [namespace NS { int i; }  using namespace NS;],
   ,
   AC_DEFINE_UNQUOTED(HAVE_NAMESPACE, 1)
)
AC_MSG_RESULT()

AC_MSG_CHECKING(if in-class template functions are supported)
AC_TRY_COMPILE(
   [class C { template<class T> operator<<(const T& t) {} };],
   ,
   ,
   AC_DEFINE_UNQUOTED(NO_INCLASS_TMPL, 1)
)
AC_MSG_RESULT()

AC_MSG_CHECKING(can we use exception specifications throw(...) in func.proto)
AC_TRY_RUN(
   [template <class T> inline int test_throw_spec(const T&) throw() {
      return 0;
   }
   int main(void) {
      return test_throw_spec(123);
   }],
   AC_DEFINE_UNQUOTED(NCBI_USE_THROW_SPEC, 1)
)
AC_MSG_RESULT()



dnl Check for C standard types
dnl ---------------------------------
AC_C_BIGENDIAN
AC_C_CHAR_UNSIGNED
AC_CHECK_SIZEOF(void*)
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(long long)
AC_CHECK_SIZEOF(__int64)
AC_CHECK_SIZEOF(double)
AC_CHECK_SIZEOF(long double)


#############################################################################
### Compose a list of makefile templates("Makefile.in") in subdirs,
### then configure them into regular makefiles("Makefile")

makefiles=`cd "${srcdir}"  &&  find . -name 'Makefile*.in' -print | sed 's/\(Makefile.*\)\.in/\1/g'`
if test -z "$makefiles" ; then
  AC_MSG_ERROR([Cannot find any of \"Makefile.in\" below \"${srcdir}\"!])
fi

dnl Makefile substitutions
dnl ----------------------

AC_SUBST(exec_prefix)

AC_SUBST(top_srcdir)
AC_SUBST(srcdir)
AC_SUBST(includedir)
AC_SUBST(incdir)
AC_SUBST(libdir)
AC_SUBST(bindir)
AC_SUBST(builddir)

AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(CPP)
AC_SUBST(CXXCPP)
AC_SUBST(AR)
AC_SUBST(RANLIB)

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(LIBS)

AC_SUBST(cmd_shell)
AC_SUBST(obj_ext)
AC_SUBST(lib_pre)
AC_SUBST(lib_l_pre)
AC_SUBST(lib_ext)
AC_SUBST(lib_l_ext)
AC_SUBST(exe_ext)
AC_SUBST(f_compile)
AC_SUBST(f_outobj)
AC_SUBST(f_libpath)
AC_SUBST(f_outexe)


#############################################################################
### Create output files and render the "$exec_prefix" sub-dirs

AC_OUTPUT(
${makefiles},

### Create and render the "$exec_prefix" directory
set -x

incdir="$SAVE_incdir"
libdir="$SAVE_libdir"
bindir="$SAVE_bindir"

mkdir -p "$libdir" "$bindir" "$incdir"
mv "$top_srcdir/config.h" "$incdir/ncbiconf.h"

if test "$exec_prefix" != "$top_srcdir" ; then
   builddir="$SAVE_builddir"
   if test ! -d  "$builddir" ; then
      mkdir -p "$builddir"
   fi

   src_dir="$top_srcdir"/src
   cd "$src_dir"  &&  find . -name 'Makefile*' -print |
   grep -v 'Makefile.*\.in' | grep -v 'Makefile*~' | 
   while read x_makefile ; do
      dest_dir="$builddir"/`dirname "$x_makefile"`
      if test ! -d "$dest_dir" ; then
         mkdir -p "$dest_dir"
      fi
      cp -p "$src_dir/$x_makefile" "$dest_dir/"
   done
   cd "$top_srcdir"  &&  rm ${SAVE_makefiles}
fi,

SAVE_incdir="$incdir"
SAVE_libdir="$libdir"
SAVE_bindir="$bindir"
SAVE_builddir="$builddir"
SAVE_makefiles="${makefiles}"
)
