/* config.h.in.  Generated automatically from configure.ac by autoheader.  */
/* These two come from standard macros, but are no longer automatic. (!) */

/* Define to empty if the keyword does not work.  */
#undef const

/* Define if your system has its own `getloadavg' function.  */
#undef HAVE_GETLOADAVG

/* It is the NCBI C++ Toolkit */
#undef NCBI_CXX_TOOLKIT

/* Host info */
#undef HOST
#undef HOST_CPU
#undef HOST_VENDOR
#undef HOST_OS

/* Platform info */
#undef NCBI_OS
#undef NCBI_OS_UNIX
#undef NCBI_OS_MSWIN
#undef NCBI_OS_MAC

/* Compiler name and version */
#undef NCBI_COMPILER_GCC
#undef NCBI_COMPILER_KCC
#undef NCBI_COMPILER_ICC
#undef NCBI_COMPILER_WORKSHOP
#undef NCBI_COMPILER_MIPSPRO
#undef NCBI_COMPILER_MSVC
#undef NCBI_COMPILER_UNKNOWN
#undef NCBI_COMPILER_VERSION

/* Linker run path */
#undef NCBI_RUNPATH

/* <sys/sockio.h> */
#undef HAVE_SYS_SOCKIO_H

/* typedef socklen_t */
#undef HAVE_SOCKLEN_T

/* gethostbyname_r() */
#undef HAVE_GETHOSTBYNAME_R

/* gethostbyaddr_r() */
#undef HAVE_GETHOSTBYADDR_R

/* localtime_r() */
#undef HAVE_LOCALTIME_R

/* pthread_setconcurrency() */
#undef HAVE_PTHREAD_SETCONCURRENCY

/* strdup() */
#undef HAVE_STRDUP

/* sysinfo() -- Linux-like, with 1 arg */
#undef HAVE_SYSINFO_1

/* sysmp() */
#undef HAVE_SYSMP

/* strcasecmp() */
#undef HAVE_STRCASECMP

/* Microsoft C++ specific */
#undef SIZEOF___INT64

/* Does not give enough support to the in-class template functions */
#undef NO_INCLASS_TMPL

/* Can use exception specifications("throw(...)" after func. proto) */
#undef NCBI_USE_THROW_SPEC

/* Non-standard basic_string::compare() -- most probably, from <bastring> */
#undef NCBI_OBSOLETE_STR_COMPARE

/* "auto_ptr" template class is not implemented in <memory> */
#undef HAVE_NO_AUTO_PTR

/* "min"/"max" templates are not implemented in <algorithm> */
#undef HAVE_NO_MINMAX_TEMPLATE

/* Stack direction */
#undef STACK_GROWS_UP
#undef STACK_GROWS_DOWN

/* SYBASE libraries are available */
#undef HAVE_LIBSYBASE

/* SYBASE DBLib is available */
#undef HAVE_LIBSYBDB

/* FreeTDS libraries are available */
#undef HAVE_LIBFTDS

/* KSTAT library is available */
#undef HAVE_LIBKSTAT

/* RPCSVC library is available */
#undef HAVE_LIBRPCSVC

/* CRYPT library is available */
#undef HAVE_LIBCRYPT

/* DL library is available */
#undef HAVE_LIBDL

/* NCBI C Toolkit libs are available */
#undef HAVE_NCBI_C

/* NCBI C Toolkit libs are available */
#undef HAVE_WXWINDOWS

/* Fast-CGI library is available */
#undef HAVE_LIBFASTCGI

/* NCBI SSS DB library is available */
#undef HAVE_LIBSSSDB

/* NCBI SSS UTILS library is available */
#undef HAVE_LIBSSSUTILS

/* NCBI GEO DB library is available */
#undef HAVE_LIBGEODB

/* SP library is available */
#undef HAVE_LIBSP

/* NCBI PubMed libraries are available */
#undef HAVE_LIBPUBMED

/* ORBacus CORBA package is available */
#undef HAVE_ORBACUS

/* New C++ streams do not have ios_base:: */
#undef HAVE_NO_IOS_BASE

/* Have union semun */
#undef HAVE_SEMUN

/* There is no "std::char_traits" type defined */
#undef HAVE_NO_CHAR_TRAITS

/* Architecture size */
#undef NCBI_PLATFORM_BITS

/* Define if you have the <fstream> header file. */
#undef HAVE_FSTREAM

/* Define if you have the <fstream.h> header file. */
#undef HAVE_FSTREAM_H

/* Define if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if you have the <iostream> header file. */
#undef HAVE_IOSTREAM

/* Define if you have the <iostream.h> header file. */
#undef HAVE_IOSTREAM_H

/* Define if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define if you have the <strstream> header file. */
#undef HAVE_STRSTREAM

/* Define if you have the <strstream.h> header file. */
#undef HAVE_STRSTREAM_H

/* Define if you have the <strstrea.h> header file. */
#undef HAVE_STRSTREA_H

/* Define if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define if you have the <windows.h> header file. */
#undef HAVE_WINDOWS_H

/* The size of a `char', as computed by sizeof. */
#undef SIZEOF_CHAR

/* The size of a `double', as computed by sizeof. */
#undef SIZEOF_DOUBLE

/* The size of a `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of a `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of a `long double', as computed by sizeof. */
#undef SIZEOF_LONG_DOUBLE

/* The size of a `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of a `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of a `size_t', as computed by sizeof. */
#undef SIZEOF_SIZE_T

/* The size of a `void*', as computed by sizeof. */
#undef SIZEOF_VOIDP

/* The size of a `__int64', as computed by sizeof. */
#undef SIZEOF___INT64

/* Define if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define if your processor stores words with the most significant byte first
   (like Motorola and SPARC, unlike Intel and VAX). */
#undef WORDS_BIGENDIAN

/* Define if type `char' is unsigned and you are not using gcc.  */
#ifndef __CHAR_UNSIGNED__
# undef __CHAR_UNSIGNED__
#endif

/* Define to `unsigned' if <sys/types.h> does not define. */
#undef size_t
