#  $Id$
###############################################################################


#============================================================================
# Build tree configuration

[Configure]

#----------------------------------------------------------------------------
# Location of 3rd party libraries and applications
# Macros used here should be defined either in this section, or in [msvc710|msvc800exp]
ThirdPartyBasePath     = \\\\snowman\\win-coremake\\Lib\\ThirdParty
ThirdPartyAppsBasePath = \\\\snowman\\win-coremake\\App\\ThirdParty
SWIG_PATH              = \\\\ncbipc0204\\swig

#----------------------------------------------------------------------------
# Location of NCBI C toolkit
# Macros used here should be defined either in this section, or in [msvc710|msvc800exp]
ThirdParty_C_ncbi      = \\\\snowman\\win-coremake\\Lib\\Ncbi\\C_Toolkit\\$(msvc_3rd)\\c.current

#----------------------------------------------------------------------------
# Project makefile can have a list of requirements ('REQUIRES')
# If any one of these requirements is unrecognized by project tree builder (PTB)
# such a requirement is considered as not met, and the project is excluded from the build

# The following requirement are always met
ProvidedRequests = CXX_Toolkit \
                   LocalBZ2  \
                   LocalPCRE \
                   LocalZ    \
                   MT

# These requiremenst are also met
# Unlike 'ProvidedRequests', this list is also used when generating
# features_and_packages.txt file
StandardFeatures = DBLib FreeTDS algo app bdb ctools dbapi gui objects serial

# The following requirement are never met
# If the same entry is present both in 'ProvidedRequests' and 'NotProvidedRequests'
# the latter one takes precedence (prohibition is more important than permission)
NotProvidedRequests = unix       \
                      local_lbsm \
                      SSSUTILS   \
                      MESA       \
                      GEO        \
                      SSSDB      \
                      SP

#----------------------------------------------------------------------------
# This file will be generated during the configuration process
# It contains macro definitions, which describe the availability
# of 3rd party libraries
DefinesPath = include\\corelib\\config\\ncbiconf_msvc_site.h

# The following macros will be defined, or undefined
Defines     = HAVE_OPENGL   \
              HAVE_FLTK     \
              HAVE_ODBC     \
              HAVE_ODBCSS_H \
              HAVE_LIBJPEG  \
              HAVE_LIBTIFF  \
              HAVE_LIBPNG   \
              HAVE_LIBGIF   \
              HAVE_BERKELEY_DB \
              HAVE_BDB      \
              HAVE_PYTHON \
              HAVE_CPPUNIT \
              HAVE_BDB_CACHE \
              HAVE_XERCES \
              HAVE_XALAN  \
              HAVE_BOOST_TEST \
              HAVE_SWIG \
              HAVE_LIBCONNEXT


#----------------------------------------------------------------------------
# The definition of the following macros used in project makefiles
# depends on availability  of Components
# Each macro on the list has the section with the same name in this file
Macros = BDB_LIB BDB_CACHE_LIB NCBI_CRYPT CONNEXT XCONNEXT

#----------------------------------------------------------------------------
# Some 3rd party libraries have analog in the toolkit.
# Depending on the availability of 3rd party library,
# the toolkit will use either external or internal one
# See section in this file with the name of the latter entry in each pair
LibChoices = z/Z bz2/BZ2 pcre/PCRE

#----------------------------------------------------------------------------
# Some toolkit applications require 3rd party DLLs
# To make things easier, we copy these DLLs into our 'bin' folders

# This suffix is used when generating Makefile.third_party.mk,
# which is used in 3rd party libraries installation projects -
# third_party_static_install.vcproj and third_party_dll_install.vcproj
ThirdPartyLibsBinPathSuffix = _BINPATH

# Location of 'bin' directory of 3rd party libraries
# For example, see [FLTK] section in this file
# The 'bin' folder is at $(LIBPATH)\$(ThirdPartyLibsBinSubDir)
ThirdPartyLibsBinSubDir     = ..\\..\\bin

# 3rd party libraries to install
ThirdPartyLibsToInstall     = FLTK       \
                              BerkeleyDB \
                              SQLITE     \
                              wxWindows  \
                              wxWidgets  \
                              Sybase     \
                              MySQL      \
                              MSSQL      \
                              PYTHON     \
                              CPPUNIT


#----------------------------------------------------------------------------
# Macros
# Macros used here should be defined either in this section, or in [msvc710|msvc800exp]

ThirdParty_BerkeleyDB = $(ThirdPartyBasePath)\\berkeleydb\\$(msvc_3rd)\\4.4.20.NC-patch2
ThirdParty_SQLITE     = $(ThirdPartyBasePath)\\sqlite\\$(msvc_3rd)\\2.8.6
ThirdParty_Sybase     = $(ThirdPartyBasePath)\\sybase\\$(msvc_3rd)\\12.5
ThirdParty_MySQL      = $(ThirdPartyBasePath)\\mysql\\$(msvc_3rd)\\3.23.55
ThirdParty_MSSQL      = $(ThirdPartyBasePath)\\MSSQL\\$(msvc_3rd)\\8.0.1.94
ThirdParty_FLTK       = $(ThirdPartyBasePath)\\fltk\\$(msvc_3rd)\\1.1.6-ncbi6
ThirdParty_PNG        = $(ThirdPartyBasePath)\\png\\$(msvc_3rd)\\1.2.7
ThirdParty_GIF        = $(ThirdPartyBasePath)\\gif\\$(msvc_3rd)\\4.1.3
ThirdParty_TIFF       = $(ThirdPartyBasePath)\\tiff\\$(msvc_3rd)\\3.6.1
ThirdParty_JPEG       = $(ThirdPartyBasePath)\\jpeg\\$(msvc_3rd)\\6b
ThirdParty_BZ2        = $(ThirdPartyBasePath)\\bzip2\\$(msvc_3rd)\\1.0.2
ThirdParty_Z          = $(ThirdPartyBasePath)\\z\\$(msvc_3rd)\\1.1.4
ThirdParty_PCRE       = $(ThirdPartyBasePath)\\pcre\\$(msvc_3rd)\\4.3
ThirdParty_wxWindows  = $(ThirdPartyBasePath)\\wxwin\\$(msvc_3rd)\\2.4.2
ThirdParty_wxWidgets  = $(ThirdPartyBasePath)\\wxwidgets\\$(msvc_3rd)\\2.6.2
ThirdParty_CPPUNIT    = $(ThirdPartyBasePath)\\cppunit\\$(msvc_3rd)\\1.10.2
ThirdParty_Xalan      = $(ThirdPartyBasePath)\\xalan\\$(msvc_3rd)\\1.8.0-ncbi1
ThirdParty_Xerces     = $(ThirdPartyBasePath)\\xerces\\$(msvc_3rd)\\2.6.0
ThirdParty_Boost_Test = $(ThirdPartyBasePath)\\boost_test\\$(msvc_3rd)\\1.32.0

PYTHON_PATH = $(ThirdPartyAppsBasePath)\\Python24


#============================================================================
# Source tree configuration

[ProjectTree]

# File with metadata used to resolve macros in project makefiles
MetaData        = Makefile.mk.in

# All subdirectories of these ones will be excluded by default
ImplicitExclude =

# Names of source tree folders
include         = include
src             = src
compilers       = compilers
projects        = scripts\\projects
impl            = impl

# File with this name must be present in all subdirectories of src
# It describes what to do in the current directory,
# and what subdirectories to process 
TreeNode        = Makefile.in

# List of registered (allowed and prohibited) project tags
# Each project makefile can have 'PROJ_TAG' entry
# All tags present in the project tree MUST be described in 'ProjectTags' file
ProjectTags     = src\\project_tags.txt


#============================================================================
# MSVC specific data

[msvc]

# File extension of MSVC specific makefile information
# For example: Makefile.<project_name>.lib.msvc
MakefilesExt   = msvc

# Name of the 'build' subdirectory
Projects       = build

# MSVC specific metadata
# It describes default settings of compiler, linker etc
MetaMakefile   = Makefile.mk.in.msvc

# Description of DLL configuration
DllInfo        = dll_info.ini


#============================================================================
# Settings for MSVC .NET 2003  (v.7.10, Win32)

[msvc710]
Version=7.10
# Build configurations
Configurations = Debug,DebugDLL,DebugMT,Release,ReleaseDLL,ReleaseMT
# Name of a subdirectory of 'compilers'
msvc_prj       = msvc710_prj
# Macro
msvc_3rd       = msvc71

#============================================================================
# Settings for MSVC 2005 (v.8.00, Win32)

[msvc800]
Version=8.00
# Build configurations
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
# Name of a subdirectory of 'compilers'
msvc_prj       = msvc800exp_prj
# Macro
msvc_3rd       = msvc8

#============================================================================
# Settings for MSVC 2005 (v.8.00, x64)

[msvc800.x64]
Version=8.00
# Build configurations
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
# Name of a subdirectory of 'compilers'
msvc_prj       = msvc800exp_prj
# Macro
msvc_3rd       = msvc8.x64


#============================================================================
# Additional include directories for LibChoices

[LibChoicesIncludes]
CMPRS_INCLUDE = z   util/compress/zlib/    \
                bz2 util/compress/bzip2/
Z_INCLUDE = z util/compress/zlib/
BZ2_INCLUDE = bz2 util/compress/bzip2/
PCRE_INCLUDE = pcre util/regexp/


#============================================================================
# Defines for CPPFLAGS and other macros in project makefiles
# Macros used here should be defined either in [Configure], or in [msvc710|msvc800exp]

[Defines]
# Additional include directory
NCBI_C_INCLUDE = $(ThirdParty_C_ncbi)\\include
# Additional libraries
NCBI_C_ncbi    = blast ddvlib medarch ncbi ncbiacc ncbicdr   \
                 ncbicn3d ncbicn3d_ogl ncbidesk ncbiid1      \
                 ncbimain ncbimmdb ncbinacc ncbiobj ncbispel \
                 ncbitool ncbitxc2 netblast netcli netentr   \
                 regexp smartnet vibgif vibnet vibrant       \
                 vibrant_ogl xconntest
BZ2_LIB        = bz2
Z_LIB          = z
PCRE_LIB       = regexp

ftds8          = ftds
FTDS8_INCLUDE  = dbapi/driver/ftds8/freetds/
FTDS8_LIB      = sybdb_ftds tds_ftds
FTDS8_LIBS     = sybdb_ftds tds_ftds

ftds63          = ftds63
FTDS63_INCLUDE  = dbapi/driver/ftds63/freetds/
FTDS63_LIB      = sybdb_ftds63 tds_ftds63
FTDS63_LIBS     = sybdb_ftds63 tds_ftds63

FTDS_INCLUDE  = dbapi/driver/ftds8/freetds/
FTDS_LIB      = sybdb_ftds tds_ftds
FTDS_LIBS     = sybdb_ftds tds_ftds


#============================================================================
# Build configuration settings:
[Debug]
debug                  = TRUE
runtimeLibraryOption   = 5

[DebugDLL]
debug=TRUE
runtimeLibraryOption=3

[DebugMT]
debug=TRUE
runtimeLibraryOption=1

[Release]
debug=FALSE
runtimeLibraryOption=4

[ReleaseDLL]
debug=FALSE
runtimeLibraryOption=2

[ReleaseMT]
debug=FALSE
runtimeLibraryOption=0


#============================================================================
# Definitions of these macros (section names) depend on availability of Components

[HAVE_OPENGL]
Component=

[HAVE_ODBC]
Component=

[HAVE_ODBCSS_H]
Component=

[HAVE_LIBJPEG]
Component=JPEG

[JPEG_LIBS]
Component=JPEG

[HAVE_LIBTIFF]
Component=TIFF,Z

[TIFF_LIBS]
Component=TIFF,Z

[HAVE_LIBPNG]
Component=PNG,Z

[PNG_LIBS]
Component=PNG,Z

[HAVE_LIBGIF]
Component=GIF
[GIF_LIBS]
Component=GIF

#[HAVE_LIBZ]
#Component=Z

[Z_LIBS]
Component=Z

[BZ2_LIBS]
Component=BZ2

[PCRE_LIBS]
Component=PCRE

[LIBS]
Component=

[NCBI_C_LIBS]
Component=C_ncbi

[C-Toolkit]
Component=C_ncbi

[HAVE_BDB]
Component = BerkeleyDB

[BDB_LIB]
Component = BerkeleyDB
Value     = bdb

[NCBI_CRYPT]
Component = NcbiCrypt
Value     = ncbi_crypt
DefValue  = ncbi_crypt_stub

[CONNEXT]
Component= connext
Value    = connext

[XCONNEXT]
Component= connext
Value    = xconnext

[HAVE_BDB_CACHE]
Component = BerkeleyDB

[BDB_CACHE_LIB]
Component = BerkeleyDB
Value     = ncbi_xcache_bdb

[HAVE_FLTK]
Component=FLTK

[FLTK_LIBS_GL]
Component=FLTK, COMCTL32

[FLTK_LIBS]
Component=FLTK, COMCTL32

[FLTK_LIBS_ALL]
Component=FLTK, COMCTL32

[HAVE_BERKELEY_DB]
Component=BerkeleyDB

[HAVE_PYTHON]
Component=PYTHON

[HAVE_SWIG]
Component=SWIG

[HAVE_LIBCONNEXT]
Component=connext

[HAVE_CPPUNIT]
Component=CPPUNIT

[HAVE_XALAN]
Component=Xalan

[HAVE_XERCES]
Component=Xerces

[HAVE_BOOST_TEST]
Component=Boost.Test

[BOOST_TEST_UTF_LIBS]
Component=Boost.Test


#============================================================================
# Description of Components (non-toolkit libraries)
# Each description defines
#   available configurations        CONFS
#   additional include directories	INCLUDE
#   additional library directories  LIBPATH
#   preprocessor definitions        DEFINES
#   additional libraries            LIB


[wxWindows]
INCLUDE = $(ThirdParty_wxWindows)\\include
LIB     = wx.lib jpeg.lib png.lib regex.lib tiff.lib zlib.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[wxWindows.debug]
DEFINES=__WXMSW__,__WIN32__,_WINDOWS,__WINDOWS__,WINVER=0x0400,__WXDEBUG__=1,NCBI_WXWIN_USE_PCH
[wxWindows.debug.Debug]
LIBPATH = $(ThirdParty_wxWindows)\\lib_static\\debug
[wxWindows.debug.DebugMT]
LIBPATH = $(ThirdParty_wxWindows)\\lib_static\\debugmt
[wxWindows.debug.DebugDLL]
DEFINES=__WXMSW__,__WIN32__,_WINDOWS,__WINDOWS__,WINVER=0x0400,__WXDEBUG__=1,WXUSINGDLL=1,NCBI_WXWIN_USE_PCH
LIBPATH = $(ThirdParty_wxWindows)\\lib_dll\\debugdll
[wxWindows.release]
DEFINES=__WXMSW__,__WIN32__,_WINDOWS,__WINDOWS__,WINVER=0x0400,NCBI_WXWIN_USE_PCH
[wxWindows.release.Release]
LIBPATH = $(ThirdParty_wxWindows)\\lib_static\\release
[wxWindows.release.ReleaseMT]
LIBPATH = $(ThirdParty_wxWindows)\\lib_static\\releasemt
[wxWindows.release.ReleaseDLL]
DEFINES=__WXMSW__,__WIN32__,_WINDOWS,__WINDOWS__,WINVER=0x0400,WXUSINGDLL=1,NCBI_WXWIN_USE_PCH
LIBPATH = $(ThirdParty_wxWindows)\\lib_dll\\releasedll

[wxWidgets]
INCLUDE = $(ThirdParty_wxWidgets)\\include $(ThirdParty_wxWidgets)\\include\\msvc
LIB     = wxbase.lib wxmsw_core.lib wxmsw_gl.lib wxmsw_html.lib wxjpeg.lib wxpng.lib wxregex.lib wxtiff.lib wxzlib.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH
[wxWidgets.debug.Debug]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\debug
[wxWidgets.debug.DebugMT]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\debugmt
[wxWidgets.debug.DebugDLL]
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)\\lib_dll\\debugdll
[wxWidgets.release.Release]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\release
[wxWidgets.release.ReleaseMT]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\releasemt
[wxWidgets.release.ReleaseDLL]
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)\\lib_dll\\releasedll


[PNG]
INCLUDE = $(ThirdParty_PNG)\\include
LIB     = libpng.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[PNG.debug.Debug]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\debug
[PNG.debug.DebugMT]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\debugmt
[PNG.debug.DebugDLL]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\debugdll
[PNG.release.Release]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\release
[PNG.release.ReleaseMT]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\releasemt
[PNG.release.ReleaseDLL]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\releasedll


[GIF]
INCLUDE = $(ThirdParty_GIF)\\include
LIB     = libgif.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[GIF.debug.Debug]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\debug
[GIF.debug.DebugMT]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\debugmt
[GIF.debug.DebugDLL]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\debugdll
[GIF.release.Release]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\release
[GIF.release.ReleaseMT]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\releasemt
[GIF.release.ReleaseDLL]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\releasedll


[TIFF]
INCLUDE = $(ThirdParty_TIFF)\\include
LIB     = libtiff.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[TIFF.debug.Debug]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\debug
[TIFF.debug.DebugMT]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\debugmt
[TIFF.debug.DebugDLL]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\debugdll
[TIFF.release.Release]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\release
[TIFF.release.ReleaseMT]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\releasemt
[TIFF.release.ReleaseDLL]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\releasedll


[JPEG]
INCLUDE = $(ThirdParty_JPEG)\\include
LIB     = libjpeg.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[JPEG.debug.Debug]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\debug
[JPEG.debug.DebugMT]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\debugmt
[JPEG.debug.DebugDLL]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\debugdll
[JPEG.release.Release]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\release
[JPEG.release.ReleaseMT]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\releasemt
[JPEG.release.ReleaseDLL]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\releasedll


[BZ2]
INCLUDE = $(ThirdParty_BZ2)\\include
LIB     = libbzip2.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[BZ2.debug.Debug]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\debug
[BZ2.debug.DebugMT]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\debugmt
[BZ2.debug.DebugDLL]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\debugdll
[BZ2.release.Release]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\release
[BZ2.release.ReleaseMT]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\releasemt
[BZ2.release.ReleaseDLL]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\releasedll


[Z]
INCLUDE = $(ThirdParty_Z)\\include
LIB     = libz.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Z.debug.Debug]
LIBPATH = $(ThirdParty_Z)\\lib_static\\debug
[Z.debug.DebugMT]
LIBPATH = $(ThirdParty_Z)\\lib_static\\debugmt
[Z.debug.DebugDLL]
LIBPATH = $(ThirdParty_Z)\\lib_static\\debugdll
[Z.release.Release]
LIBPATH = $(ThirdParty_Z)\\lib_static\\release
[Z.release.ReleaseMT]
LIBPATH = $(ThirdParty_Z)\\lib_static\\releasemt
[Z.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Z)\\lib_static\\releasedll


[PCRE]
INCLUDE = $(ThirdParty_PCRE)\\include
DEFINES = PCRE_STATIC
LIB     = libpcre.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[PCRE.debug.Debug]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\debug
[PCRE.debug.DebugMT]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\debugmt
[PCRE.debug.DebugDLL]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\debugdll
[PCRE.release.Release]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\release
[PCRE.release.ReleaseMT]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\releasemt
[PCRE.release.ReleaseDLL]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\releasedll


[SQLITE]
INCLUDE = $(ThirdParty_SQLITE)\\include
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
LIB     = sqlite.lib
[SQLITE.debug.Debug]
LIBPATH = $(ThirdParty_SQLITE)\\lib_static\\debug
[SQLITE.debug.DebugMT]
LIBPATH = $(ThirdParty_SQLITE)\\lib_static\\debugmt
[SQLITE.debug.DebugDLL]
LIBPATH = $(ThirdParty_SQLITE)\\lib_dll\\debugdll
[SQLITE.release.Release]
LIBPATH = $(ThirdParty_SQLITE)\\lib_static\\release
[SQLITE.release.ReleaseMT]
LIBPATH = $(ThirdParty_SQLITE)\\lib_static\\releasemt
[SQLITE.release.ReleaseDLL]
LIBPATH = $(ThirdParty_SQLITE)\\lib_dll\\releasedll


[Sybase]
INCLUDE = $(ThirdParty_Sybase)\\include
LIBPATH =
LIB     = libsybdb.lib libct.lib libblk.lib libcs.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Sybase.debug.Debug]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debug
[Sybase.debug.DebugMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugmt
[Sybase.debug.DebugDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugdll
[Sybase.release.Release]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\release
[Sybase.release.ReleaseMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[Sybase.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll


[MySQL]
INCLUDE = $(ThirdParty_MySQL)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[MySQL.debug.DebugMT]
LIBPATH = $(ThirdParty_MySQL)\\lib_static\\DebugMT
LIB     = libmySQL.lib zlib.lib
[MySQL.debug.DebugDLL]
LIBPATH = $(ThirdParty_MySQL)\\lib_dll\\DebugDLL
LIB     = libmySQL.lib
[MySQL.release.ReleaseMT]
LIBPATH = $(ThirdParty_MySQL)\\lib_static\\ReleaseMT
LIB     = libmySQL.lib zlib.lib
[MySQL.release.ReleaseDLL]
LIBPATH = $(ThirdParty_MySQL)\\lib_dll\\ReleaseDLL
LIB     = libmySQL.lib


[ODBC]
INCLUDE =
LIBPATH =
LIB     = odbc32.lib odbccp32.lib odbcbcp.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL


[MSSQL]
INCLUDE = $(ThirdParty_MSSQL)\\include
LIBPATH =
LIB     = NTWDBLIB.LIB
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[MSSQL.debug.Debug]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\debug
[MSSQL.debug.DebugMT]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\debugmt
[MSSQL.debug.DebugDLL]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\debugdll
[MSSQL.release.Release]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\release
[MSSQL.release.ReleaseMT]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\releasemt
[MSSQL.release.ReleaseDLL]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\releasedll


[DBLib]
INCLUDE =
LIBPATH =
LIB     =
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL


[OpenGL]
INCLUDE =
LIBPATH =
LIB     = opengl32.lib glu32.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL


[FLTK]
INCLUDE = $(ThirdParty_FLTK)\\include
DEFINES =
LIBPATH =
LIB     =
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[FLTK.debug.Debug]
DEFINES =
LIBPATH = $(ThirdParty_FLTK)\\lib_static\\debug
LIB     = fltk.lib fltkgl.lib fltkimages.lib fltkforms.lib
[FLTK.debug.DebugMT]
DEFINES =
LIBPATH = $(ThirdParty_FLTK)\\lib_static\\debugmt
LIB     = fltk.lib fltkgl.lib fltkimages.lib fltkforms.lib
[FLTK.debug.DebugDLL]
DEFINES = FL_DLL
LIBPATH = $(ThirdParty_FLTK)\\lib_dll\\debugdll
LIB     = fltkdll.lib
[FLTK.release.Release]
DEFINES =
LIBPATH = $(ThirdParty_FLTK)\\lib_static\\release
LIB     = fltk.lib fltkgl.lib fltkimages.lib fltkforms.lib
[FLTK.release.ReleaseMT]
DEFINES =
LIBPATH = $(ThirdParty_FLTK)\\lib_static\\releasemt
LIB     = fltk.lib fltkgl.lib fltkimages.lib fltkforms.lib
[FLTK.release.ReleaseDLL]
DEFINES = FL_DLL
LIBPATH = $(ThirdParty_FLTK)\\lib_dll\\releasedll
LIB     = fltkdll.lib


[BerkeleyDB]
INCLUDE = $(ThirdParty_BerkeleyDB)\\include
LIBPATH =
LIB     = libdb.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
MACRO   = BERKELEYDB_INCLUDE BERKELEYDB_STATIC_LIBS BERKELEYDB_LIBS
[BerkeleyDB.debug.Debug]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\debug
[BerkeleyDB.debug.DebugMT]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\debugmt
[BerkeleyDB.debug.DebugDLL]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_dll\\debugdll
[BerkeleyDB.release.Release]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\release
[BerkeleyDB.release.ReleaseMT]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\releasemt
[BerkeleyDB.release.ReleaseDLL]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_dll\\releasedll


[C_ncbi]
INCLUDE = $(ThirdParty_C_ncbi)\\include
LIBPATH =
LIB     =
CONFS   = Debug DebugDLL Release ReleaseDLL
[C_ncbi.debug.Debug]
LIBPATH = $(ThirdParty_C_ncbi)\\Debug
[C_ncbi.debug.DebugDLL]
LIBPATH = $(ThirdParty_C_ncbi)\\DebugDLL
[C_ncbi.release.Release]
LIBPATH = $(ThirdParty_C_ncbi)\\Release
[C_ncbi.release.ReleaseDLL]
LIBPATH = $(ThirdParty_C_ncbi)\\ReleaseDLL


[PYTHON]
INCLUDE = $(ThirdPartyAppsBasePath)\\Python24\\include
LIBPATH = $(ThirdPartyAppsBasePath)\\Python24\\libs
LIB =
CONFS   = DebugDLL ReleaseDLL

[SWIG]
INCLUDE = $(SWIG_PATH )
LIBPATH = $(SWIG_PATH )
LIB =
CONFS   = DebugDLL ReleaseDLL


[CPPUNIT]
INCLUDE = $(ThirdParty_CPPUNIT)\\include
LIBPATH =
LIB     = cppunit.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[CPPUNIT.debug.Debug]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\debug
[CPPUNIT.debug.DebugMT]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\debugmt
[CPPUNIT.debug.DebugDLL]
# LIBPATH = $(ThirdParty_CPPUNIT)\\lib_dll\\debugdll
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\debugdll
[CPPUNIT.release.Release]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\release
[CPPUNIT.release.ReleaseMT]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\releasemt
[CPPUNIT.release.ReleaseDLL]
# LIBPATH = $(ThirdParty_CPPUNIT)\\lib_dll\\releasedll
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\releasedll


[Xalan]
INCLUDE = $(ThirdParty_Xalan)\\include
DEFINES =
LIBPATH =
LIB     = xalan-c.lib XalanMessages.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Xalan.debug.Debug]
LIBPATH = $(ThirdParty_Xalan)\\lib_static\\debug
[Xalan.debug.DebugMT]
LIBPATH = $(ThirdParty_Xalan)\\lib_static\\debugmt
[Xalan.debug.DebugDLL]
DEFINES = XALAN_DLL
LIBPATH = $(ThirdParty_Xalan)\\lib_dll\\debugdll
[Xalan.release.Release]
LIBPATH = $(ThirdParty_Xalan)\\lib_static\\release
[Xalan.release.ReleaseMT]
LIBPATH = $(ThirdParty_Xalan)\\lib_static\\releasemt
[Xalan.release.ReleaseDLL]
DEFINES = XALAN_DLL
LIBPATH = $(ThirdParty_Xalan)\\lib_dll\\releasedll


[Xerces]
INCLUDE = $(ThirdParty_Xerces)\\include
DEFINES =
LIBPATH =
LIB     = xerces-c.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Xerces.debug.Debug]
LIBPATH = $(ThirdParty_Xerces)\\lib_static\\debug
[Xerces.debug.DebugMT]
LIBPATH = $(ThirdParty_Xerces)\\lib_static\\debugmt
[Xerces.debug.DebugDLL]
DEFINES = XERCES_DLL
LIBPATH = $(ThirdParty_Xerces)\\lib_dll\\debugdll
[Xerces.release.Release]
LIBPATH = $(ThirdParty_Xerces)\\lib_static\\release
[Xerces.release.ReleaseMT]
LIBPATH = $(ThirdParty_Xerces)\\lib_static\\releasemt
[Xerces.release.ReleaseDLL]
DEFINES = XERCES_DLL
LIBPATH = $(ThirdParty_Xerces)\\lib_dll\\releasedll


[Boost.Test]
INCLUDE = $(ThirdParty_Boost_Test)\\include
LIB     = boost_unit_test_framework.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Boost.Test.debug.Debug]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\debug
[Boost.Test.debug.DebugMT]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\debugmt
[Boost.Test.debug.DebugDLL]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\debugdll
[Boost.Test.release.Release]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\release
[Boost.Test.release.ReleaseMT]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\releasemt
[Boost.Test.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\releasedll

[NcbiCrypt]
CONFS = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
FILES = src\\connect\\ext\\ncbi_crypt.c

[connext]
CONFS = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
FILES = src\\connect\\ext\\Makefile.in

[DefaultLibs]
INCLUDE =
LIBPATH =
LIB     = wsock32.lib


[COMCTL32]
INCLUDE =
LIBPATH =
LIB     = comctl32.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL


# ===========================================================================
# Datatool description
# It is used to generate C++ code by ASN.1 or DTD specification

[Datatool]
datatool=datatool
Location.App=$(OutDir)\\datatool.exe
Location.Lib=$(OutDir)\\..\\..\\bin\\$(ConfigurationName)\\datatool.exe
CommandLine = -oex \"\" -pch ncbi_pch.hpp -m \"$(InputPath)\" -oA -oc \"$(InputName)\" -od \"$(InputDir)\\$(InputName).def\" -odi -ocvs


# ===========================================================================
# Default NCBI resource to include into all app and dll projects
# Must be placed into compiler-specific subdir of compilers subdirectory
# (msvc710_prj or msvc800exp_prj)

[DefaultResource]
app = ncbi.rc

