/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 */

/// @file Variant_ref.hpp
/// User-defined methods of the data storage class.
///
/// This file was originally generated by application DATATOOL
/// using the following specifications:
/// 'seqfeat.asn'.
///
/// New methods or data members can be added to it if needed.
/// See also: Variant_ref_.hpp


#ifndef OBJECTS_SEQFEAT_VARIANT_REF_HPP
#define OBJECTS_SEQFEAT_VARIANT_REF_HPP


// generated includes
#include <objects/seqfeat/Variant_ref_.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

/////////////////////////////////////////////////////////////////////////////
class NCBI_SEQFEAT_EXPORT CVariant_ref : public CVariant_ref_Base
{
    typedef CVariant_ref_Base Tparent;
public:
    // constructor
    CVariant_ref(void);
    // destructor
    ~CVariant_ref(void);

    /// @name Deprecated Methods
    /// @{
    NCBI_DEPRECATED bool IsSetPopulation_data(void) const;
    NCBI_DEPRECATED bool CanGetPopulation_data(void) const;
    NCBI_DEPRECATED void ResetPopulation_data(void);
    NCBI_DEPRECATED const TPopulation_data& GetPopulation_data(void) const;
    NCBI_DEPRECATED TPopulation_data& SetPopulation_data(void);

    NCBI_DEPRECATED bool IsSetValidated(void) const;
    NCBI_DEPRECATED bool CanGetValidated(void) const;
    NCBI_DEPRECATED void ResetValidated(void);
    NCBI_DEPRECATED TValidated GetValidated(void) const;
    NCBI_DEPRECATED void SetValidated(TValidated value);
    NCBI_DEPRECATED TValidated& SetValidated(void);

    NCBI_DEPRECATED bool IsSetClinical_test(void) const;
    NCBI_DEPRECATED bool CanGetClinical_test(void) const;
    NCBI_DEPRECATED void ResetClinical_test(void);
    NCBI_DEPRECATED const TClinical_test& GetClinical_test(void) const;
    NCBI_DEPRECATED TClinical_test& SetClinical_test(void);

    NCBI_DEPRECATED bool IsSetAllele_origin(void) const;
    NCBI_DEPRECATED bool CanGetAllele_origin(void) const;
    NCBI_DEPRECATED void ResetAllele_origin(void);
    NCBI_DEPRECATED TAllele_origin GetAllele_origin(void) const;
    NCBI_DEPRECATED void SetAllele_origin(TAllele_origin value);
    NCBI_DEPRECATED TAllele_origin& SetAllele_origin(void);

    NCBI_DEPRECATED bool IsSetAllele_origin(void) const;
    NCBI_DEPRECATED bool CanGetAllele_origin(void) const;
    NCBI_DEPRECATED void ResetAllele_origin(void);
    NCBI_DEPRECATED TAllele_origin GetAllele_origin(void) const;
    NCBI_DEPRECATED void SetAllele_origin(TAllele_origin value);
    NCBI_DEPRECATED TAllele_origin& SetAllele_origin(void);

    NCBI_DEPRECATED bool IsSetAllele_state(void) const;
    NCBI_DEPRECATED bool CanGetAllele_state(void) const;
    NCBI_DEPRECATED void ResetAllele_state(void);
    NCBI_DEPRECATED TAllele_state GetAllele_state(void) const;
    NCBI_DEPRECATED void SetAllele_state(TAllele_state value);
    NCBI_DEPRECATED TAllele_state& SetAllele_state(void);

    NCBI_DEPRECATED bool IsSetAllele_frequency(void) const;
    NCBI_DEPRECATED bool CanGetAllele_frequency(void) const;
    NCBI_DEPRECATED void ResetAllele_frequency(void);
    NCBI_DEPRECATED TAllele_frequency GetAllele_frequency(void) const;
    NCBI_DEPRECATED void SetAllele_frequency(TAllele_frequency value);
    NCBI_DEPRECATED TAllele_frequency& SetAllele_frequency(void);

    NCBI_DEPRECATED bool IsSetIs_ancestral_allele(void) const;
    NCBI_DEPRECATED bool CanGetIs_ancestral_allele(void) const;
    NCBI_DEPRECATED void ResetIs_ancestral_allele(void);
    NCBI_DEPRECATED TIs_ancestral_allele GetIs_ancestral_allele(void) const;
    NCBI_DEPRECATED void SetIs_ancestral_allele(TIs_ancestral_allele value);
    NCBI_DEPRECATED TIs_ancestral_allele& SetIs_ancestral_allele(void);

    NCBI_DEPRECATED bool IsSetPub(void) const;
    NCBI_DEPRECATED bool CanGetPub(void) const;
    NCBI_DEPRECATED void ResetPub(void);
    NCBI_DEPRECATED TPub GetPub(void) const;
    NCBI_DEPRECATED void SetPub(TPub value);
    NCBI_DEPRECATED TPub& SetPub(void);

    NCBI_DEPRECATED bool IsSetLocation(void) const;
    NCBI_DEPRECATED bool CanGetLocation(void) const;
    NCBI_DEPRECATED void ResetLocation(void);
    NCBI_DEPRECATED TLocation GetLocation(void) const;
    NCBI_DEPRECATED void SetLocation(TLocation value);
    NCBI_DEPRECATED TLocation& SetLocation(void);

    NCBI_DEPRECATED bool IsSetExt_locs(void) const;
    NCBI_DEPRECATED bool CanGetExt_locs(void) const;
    NCBI_DEPRECATED void ResetExt_locs(void);
    NCBI_DEPRECATED TExt_locs GetExt_locs(void) const;
    NCBI_DEPRECATED void SetExt_locs(TExt_locs value);
    NCBI_DEPRECATED TExt_locs& SetExt_locs(void);

    NCBI_DEPRECATED bool IsSetExt(void) const;
    NCBI_DEPRECATED bool CanGetExt(void) const;
    NCBI_DEPRECATED void ResetExt(void);
    NCBI_DEPRECATED TExt GetExt(void) const;
    NCBI_DEPRECATED void SetExt(TExt value);
    NCBI_DEPRECATED TExt& SetExt(void);

    /// @}

private:
    // Prohibit copy constructor and assignment operator
    CVariant_ref(const CVariant_ref& value);
    CVariant_ref& operator=(const CVariant_ref& value);

};

/////////////////// CVariant_ref inline methods

// constructor
inline
CVariant_ref::CVariant_ref(void)
{
}

//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetPopulation_data(void) const
{
    return TParent::IsSetPopulation_data();
}

inline
bool CVariant_ref::CanGetPopulation_data(void) const
{
    return TParent::CanGetPopulation_data();
}

inline
void CVariant_ref::ResetPopulation_data(void)
{
    TParent::ResetPopulation_data();
}

inline
const CVariant_ref::TPopulation_data& GetPopulation_data(void) const
{
    return TParent::GetPopulation_data();
}

inline
CVariant_ref::TPopulation_data& CVariant_ref::SetPopulation_data(void)
{
    return TParent::SetPopulation_data();
}


//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetValidated(void) const
{
    return TParent::IsSetValidated();
}

inline
bool CVariant_ref::CanGetValidated(void) const
{
    return TParent::CanGetValidated();
}

inline
void CVariant_ref::ResetValidated(void)
{
    TParent::ResetValidated();
}

inline
const CVariant_ref::TValidated& GetValidated(void) const
{
    return TParent::GetValidated();
}

inline
void CVariant_ref::SetValidated(TValidated value)
{
    TParent::SetValidated(value);
}

inline
CVariant_ref::TValidated& CVariant_ref::SetValidated(void)
{
    return TParent::SetValidated();
}


//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetClinical_test(void) const
{
    return TParent::IsSetClinical_test();
}

inline
bool CVariant_ref::CanGetClinical_test(void) const
{
    return TParent::CanGetClinical_test();
}

inline
void CVariant_ref::ResetClinical_test(void)
{
    TParent::ResetClinical_test();
}

inline
const CVariant_ref::TClinical_test& GetClinical_test(void) const
{
    return TParent::GetClinical_test();
}

inline
CVariant_ref::TClinical_test& CVariant_ref::SetClinical_test(void)
{
    return TParent::SetClinical_test();
}


//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetAllele_origin(void) const
{
    return TParent::IsSetAllele_origin();
}

inline
bool CVariant_ref::CanGetAllele_origin(void) const
{
    return TParent::CanGetAllele_origin();
}

inline
void CVariant_ref::ResetAllele_origin(void)
{
    TParent::ResetAllele_origin();
}

inline
const CVariant_ref::TAllele_origin& GetAllele_origin(void) const
{
    return TParent::GetAllele_origin();
}

inline
void CVariant_ref::SetAllele_origin(TAllele_origin value)
{
    TParent::SetAllele_origin(value);
}

inline
CVariant_ref::TAllele_origin& CVariant_ref::SetAllele_origin(void)
{
    return TParent::SetAllele_origin();
}

//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetAllele_state(void) const
{
    return TParent::IsSetAllele_state();
}

inline
bool CVariant_ref::CanGetAllele_state(void) const
{
    return TParent::CanGetAllele_state();
}

inline
void CVariant_ref::ResetAllele_state(void)
{
    TParent::ResetAllele_state();
}

inline
const CVariant_ref::TAllele_state& GetAllele_state(void) const
{
    return TParent::GetAllele_state();
}

inline
void CVariant_ref::SetAllele_state(TAllele_state value)
{
    TParent::SetAllele_state(value);
}

inline
CVariant_ref::TAllele_state& CVariant_ref::SetAllele_state(void)
{
    return TParent::SetAllele_state();
}


//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetAllele_frequency(void) const
{
    return TParent::IsSetAllele_frequency();
}

inline
bool CVariant_ref::CanGetAllele_frequency(void) const
{
    return TParent::CanGetAllele_frequency();
}

inline
void CVariant_ref::ResetAllele_frequency(void)
{
    TParent::ResetAllele_frequency();
}

inline
const CVariant_ref::TAllele_frequency& GetAllele_frequency(void) const
{
    return TParent::GetAllele_frequency();
}

inline
void CVariant_ref::SetAllele_frequency(TAllele_frequency value)
{
    TParent::SetAllele_frequency(value);
}

inline
CVariant_ref::TAllele_frequency& CVariant_ref::SetAllele_frequency(void)
{
    return TParent::SetAllele_frequency();
}


//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetIs_ancestral_allele(void) const
{
    return TParent::IsSetIs_ancestral_allele();
}

inline
bool CVariant_ref::CanGetIs_ancestral_allele(void) const
{
    return TParent::CanGetIs_ancestral_allele();
}

inline
void CVariant_ref::ResetIs_ancestral_allele(void)
{
    TParent::ResetIs_ancestral_allele();
}

inline
const CVariant_ref::TIs_ancestral_allele& GetIs_ancestral_allele(void) const
{
    return TParent::GetIs_ancestral_allele();
}

inline
void CVariant_ref::SetIs_ancestral_allele(TIs_ancestral_allele value)
{
    TParent::SetIs_ancestral_allele(value);
}

inline
CVariant_ref::TIs_ancestral_allele& CVariant_ref::SetIs_ancestral_allele(void)
{
    return TParent::SetIs_ancestral_allele();
}


//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetPub(void) const
{
    return TParent::IsSetPub();
}

inline
bool CVariant_ref::CanGetPub(void) const
{
    return TParent::CanGetPub();
}

inline
void CVariant_ref::ResetPub(void)
{
    TParent::ResetPub();
}

inline
const CVariant_ref::TPub& GetPub(void) const
{
    return TParent::GetPub();
}

inline
void CVariant_ref::SetPub(TPub value)
{
    TParent::SetPub(value);
}

inline
CVariant_ref::TPub& CVariant_ref::SetPub(void)
{
    return TParent::SetPub();
}


//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetLocation(void) const
{
    return TParent::IsSetLocation();
}

inline
bool CVariant_ref::CanGetLocation(void) const
{
    return TParent::CanGetLocation();
}

inline
void CVariant_ref::ResetLocation(void)
{
    TParent::ResetLocation();
}

inline
const CVariant_ref::TLocation& GetLocation(void) const
{
    return TParent::GetLocation();
}

inline
void CVariant_ref::SetLocation(TLocation value)
{
    TParent::SetLocation(value);
}

inline
CVariant_ref::TLocation& CVariant_ref::SetLocation(void)
{
    return TParent::SetLocation();
}


//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetExt_locs(void) const
{
    return TParent::IsSetExt_locs();
}

inline
bool CVariant_ref::CanGetExt_locs(void) const
{
    return TParent::CanGetExt_locs();
}

inline
void CVariant_ref::ResetExt_locs(void)
{
    TParent::ResetExt_locs();
}

inline
const CVariant_ref::TExt_locs& GetExt_locs(void) const
{
    return TParent::GetExt_locs();
}

inline
void CVariant_ref::SetExt_locs(TExt_locs value)
{
    TParent::SetExt_locs(value);
}

inline
CVariant_ref::TExt_locs& CVariant_ref::SetExt_locs(void)
{
    return TParent::SetExt_locs();
}

//////////////////////////////////////////////////////////////////////////////
inline
bool CVariant_ref::IsSetExt(void) const
{
    return TParent::IsSetExt();
}

inline
bool CVariant_ref::CanGetExt(void) const
{
    return TParent::CanGetExt();
}

inline
void CVariant_ref::ResetExt(void)
{
    TParent::ResetExt();
}

inline
const CVariant_ref::TExt& GetExt(void) const
{
    return TParent::GetExt();
}

inline
void CVariant_ref::SetExt(TExt value)
{
    TParent::SetExt(value);
}

inline
CVariant_ref::TExt& CVariant_ref::SetExt(void)
{
    return TParent::SetExt();
}


/////////////////// end of CVariant_ref inline methods


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


#endif // OBJECTS_SEQFEAT_VARIANT_REF_HPP
/* Original file checksum: lines: 86, chars: 2454, CRC32: b2102359 */
