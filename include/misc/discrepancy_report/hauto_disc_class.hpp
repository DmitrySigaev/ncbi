#ifndef HAUTODISCCLASS__HPP
#define HAUTODISCCLASS__HPP

/* $Id$
 * =========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * =========================================================================
 *
 */ 
/// This file was generated by application DATATOOL
///
/// ATTENTION:
///   Don't edit or commit this file into SVN as this file will
///   be overridden (by DATATOOL) without warning!

#include <objects/seqset/Seq_entry.hpp>
#include <objects/seq/Bioseq.hpp>
#include <objects/seqset/Bioseq_set.hpp>

#include <misc/discrepancy_report/hchecking_class.hpp>

BEGIN_NCBI_SCOPE
USING_SCOPE(objects);
BEGIN_SCOPE(DiscRepAutoNmSpc)


class CAutoDiscClass { 
public: 
  CAutoDiscClass(
    CScope & scope,
    DiscRepNmSpc :: CCheckingClass & newSeqEntry ) : 
    m_Scope(scope), 
    m_NewSeqEntry(newSeqEntry), 
    m_Dummy(0)
  { } 

  void LookAtSeqEntry( CSeq_entry & arg0 );

private: 
  void x_LookAtSeqEntry_seq_seq( CBioseq & arg0 );
  void x_LookAtSeqEntry_seq( CBioseq & arg0 );
  void x_LookAtSeqEntry_set_set_seq_set_E( CSeq_entry & arg0 );
  template< typename Tcontainer_ncbi_cref_cseq_entry_ >
void x_LookAtSeqEntry_set_set_seq_set( Tcontainer_ncbi_cref_cseq_entry_ & arg0 );
  void x_LookAtSeqEntry_set_set( CBioseq_set & arg0 );
  void x_LookAtSeqEntry_set( CBioseq_set & arg0 );

  CScope & m_Scope;
  DiscRepNmSpc :: CCheckingClass & m_NewSeqEntry;


  int m_Dummy;
}; // end of CAutoDiscClass

END_SCOPE(DiscRepAutoNmSpc)
END_NCBI_SCOPE

#endif /* HAUTODISCCLASS__HPP */
